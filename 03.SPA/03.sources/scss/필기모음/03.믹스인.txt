**** 믹스인(Mixin) ****
# 스타일시트를 작성하다보면, 비슷하거나 동일한 스타일을 반복해서 사용해야 하는 경우가 많음!
 ->> 믹스인을 사용하면, 사이트 전체에서 재사용할 스타일 그룹을 정의할 수 있음!
 Ex) - 서로 다른 선언문끼리 스타일이 겹치는 경우 
    h1 {
    text-align: left;
    color: white;
    background-color: teal;
    }

    h2 {
        text-align: center;
        color: white;
        background-color: teal;
    }

*********************************************************

    [ 믹스인 만드는 법 ]
    - 믹스인을 만들때는 @mixin 지시자를 사용한다!
    - 지시자 뒤에는 만들고자 하는 믹스인의 이름을 써준다.
    (변수와 마찬가지로 원하는 이름을 사용하면 된다!!)

    Ex) @mixin my-font { // my-font 라는 이름의 믹스인 정의 
        font-family: sans-serif;
        font-size: 32px;
        font-style: normal;
    }
________________________________________________________

    [ 믹스인 사용하는 법 ] 
    - 믹스인이 정의되고 난 후에는, 믹스인에 정의된 스타일을 넣고자 하는 모든 곳에
    @include 지시자를 사용하여 해당 믹스인을 호출할 수 있다.

    Ex) 
        h1 {
            @include my-font;
        } 

        p {
            @include my-font;
        }
_________________________________________________________

    [ 믹스인 인자 ]
    - Sass의 믹스인은 인자를 취할 수 있음.
    - 믹스인 정의 시에 괄호와 함께 변수를 추가하면 인자가 정의되고,
     갯수 제한은 없다!!
    - 믹스인 호출 시에 인자를 전달하고 싶다면, 믹스인 이름 옆에 괄호와 함께 속성값을 추가하면 된다.

    Ex) 
        @@mixin my-font($font-color) { // 인자를 더 넣고 싶다면, 변수 옆에 쉼표를 쓰고 추가하자 !!!
        font-size: 18px;
        font-weight: 900;
        color: $font-color;
    }

    -> h1 {
        @include my-font(red);
    }

    -> p {
        @include my-font(blue);
    }

_________________________________________________________

    [ 믹스인 인자 기본값 ]
    - 인자를 전달할 수도, 그러지 않을 수도 있는 믹스인을 만들 수 있다.
    - 믹스인 인자에 기본값을 정의해 두면, 인자 전달 여부에 따라 선택적으로 스타일이 결정됨!
    - 기본값은 인자로 정의된 변수 옆에 ':' 을 쓰고 속성값을 써서 정의한다.

    Ex)
        @mixin my-font($font-color, $bg-color: yellow){
            font-size: 18px;
            font-weight: 900;
            color: $font-color;
            background-color: $bg-color;
        }

*********************************************************

