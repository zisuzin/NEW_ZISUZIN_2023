{"ast":null,"code":"// PC - 휠이벤트 + 메인배너이동\n\nimport { qs, qsa } from \"./eventFn.js\";\nimport changeSongTxt from \"../components/Player.js\";\nimport $ from \"jquery\";\nimport ban_data from \"../data/ban\";\nimport { useEffect } from \"react\";\n\n/****************************************** \r\n    함수명: handleWheel\r\n    기능: 휠 이동시 슬라이드 위치 변경\r\n******************************************/\n// 회전각 초기화변수\nlet rotation = 0;\n// 기본단위\nlet ang = 51.43;\n// 현재각도\nlet cang = 0;\n// 회전횟수\nlet rotnum = 0;\n// 회전상태막기\nlet rotsts = 0;\n\n// 초기레코드 이미지\nlet albumImg = `./images/album/alb0.jpg`;\nlet rectTop;\nlet rectLeft;\n\n// 로딩구역 함수\nfunction jqFn() {\n  albumImg = `./images/album/alb0.jpg`;\n  $(\".banbx\").css({\n    background: \"url(\" + albumImg + \") 94% 51% / 42% 39% no-repeat\"\n  });\n  //초기화!\n  cang = 0;\n  imgNum = 0;\n}\nlet imgNum = 0;\n$(\".next_song_btn\").click(() => {\n  toggleClass(\"on\");\n});\nfunction handleWheel(e) {\n  // 막기장치 ///////\n  if (rotsts) return;\n  rotsts = 1;\n  setTimeout(() => rotsts = 0, 400);\n  const delta = e.deltaY;\n\n  // 슬라이드 겉박스\n  const moveSl = qs(\".album_wrap\");\n\n  // 대상 슬라이드 li\n  const tgsl = qsa(\".album_set\");\n  rotation += 1;\n  $(\".album_wrap\").css({\n    transition: \".4s ease-in-out\"\n  });\n  $(\".album_set\").css({\n    transition: \".4s ease-in-out\"\n  });\n  const chg_color = [\"pink\", \"#222\", \"#da9438\", \"#cc372b\", \"#f7ba20\", \"#d388eb\", \"#373736\"];\n  const chg_page_ele = $(\".circle\");\n  if (delta > 0) {\n    // 양수일 때 (아래 휠)\n    cang = cang + ang;\n    // console.log('imgNum',imgNum)\n    imgNum--;\n    if (imgNum === -1) imgNum = 6;\n    chg_page_ele.css({\n      backgroundColor: chg_color[imgNum]\n    });\n    console.log(\"아래\", chg_color[imgNum], imgNum);\n    if (imgNum < 0) {\n      imgNum = $(\".album_set\").length - 1;\n      chg_page_ele.css({\n        backgroundColor: chg_color[imgNum + 1]\n      });\n    }\n    $(\".prev_song_btn\").trigger(\"click\");\n  } else {\n    // 음수일 때 (위로 휠)\n    cang = cang - ang;\n    imgNum++;\n    if (imgNum === 7) imgNum = 0;\n    chg_page_ele.css({\n      backgroundColor: chg_color[imgNum]\n    });\n    console.log(\"위로\", chg_color[imgNum], imgNum);\n    if (imgNum > $(\".album_set\").length - 1) {\n      imgNum = 0;\n      chg_page_ele.css({\n        backgroundColor: chg_color[imgNum + 1]\n      });\n    }\n    $(\".next_song_btn\").trigger(\"click\");\n  }\n  $(\".banbx\").css({\n    background: `url(./images/album/alb${imgNum}.jpg) 94% 51% / 42% 39% no-repeat`\n  });\n  $(\".album_set \").css({\n    transform: \"rotate(\" + -cang + \"deg)\"\n  });\n\n  // console.log(\"횟수:\",rotnum);\n}\n\ndocument.querySelectorAll(\".album_wrap li\").forEach((ele, idx) => ele.setAttribute(\"data-seq\", idx));\n\n// 현재시간 구하는 변수\nlet currentTime2;\n\n/****************************************** \r\n    함수명: handleHover\r\n    기능: 마우스 오버시 CD 회전하면서 옆으로 나옴\r\n******************************************/\nfunction handleHover() {\n  // 대상에 호버했을때 함수호출!\n  const hovertg = qsa(\".album_set\");\n  hovertg.forEach(ele => {\n    // 호버했을때 cd 회전하면서 튀어나옴\n    const tg = ele.querySelector(\"aside\");\n    ele.onmouseover = () => {\n      tg.style.transition = \"transform 7s\";\n      tg.style.transform = \"translate(5%, -50%) rotate(720deg)\";\n    };\n    ele.onmouseleave = () => {\n      tg.style.transition = \"transform 7s\";\n      tg.style.transform = \"translate(0, -50%) rotate(0deg)\";\n    };\n  });\n}\n\n/****************************************** \r\n    함수명: handleToggle\r\n    기능: 원형 네비 메뉴 클릭시 GNB 등장\r\n******************************************/\nfunction handleToggle() {\n  const nav = $(\".circular_nav\");\n  const toggleBtn = nav.find($(\".toggle_btn\"));\n  nav.toggleClass(\"active\");\n  toggleBtn.toggleClass(\"active\");\n}\n\n/****************************************** \r\n    함수명: player\r\n    기능: \r\n    (1) 슬라이드li 2번째 요소에 맞춰 플레이어 음원/커버 변경\r\n    (2) 오디오 볼륨조절\r\n    (3) 음원 현재 재생시간/ 총 재생시간 업데이트\r\n    (4) 플레이버튼 토글하여 음원 재생/멈춤\r\n******************************************/\nfunction handleTime() {\n  let audio = $(\"#music\")[0];\n  let elapsed = $(\"#elapsed\");\n  const total1 = $(\"#total_timer > .tot1\");\n  const total2 = $(\"#total_timer > .tot2\");\n  // console.log(total1,total2)\n  const current = $(\"#progress_timer\");\n\n  // 오디오의 재생 시간이 업데이트될 때마다 함수 호출!\n  $(\"#music\").on(\"timeupdate\", function () {\n    // timeupdate - 오디오 또는 비디오의 재생 시간이 변경될 때마다 발생하는 이벤트\n\n    // 오디오의 재생 시간과 전체 재생 시간 가져오기\n    const currentTime = audio.currentTime;\n    const duration = audio.duration || 0; // 오디오 총 길이\n\n    // 음원 총 재생시간 구해서 시간 업데이트\n    const minutes = Math.floor(duration / 60);\n    const seconds = Math.floor(duration % 60);\n    let totalTime1 = minutes.toString().padStart(2, \"0\");\n    let totalTime2 = seconds.toString().padStart(2, \"0\");\n    total1.text(totalTime1);\n    total2.text(totalTime2);\n\n    // 음원 현재 재생시간 구해서 시간 업데이트\n    const minutes2 = Math.floor(currentTime / 60);\n    const seconds2 = Math.floor(currentTime % 60);\n    currentTime2 = minutes2.toString().padStart(2, \"0\") + \":\" + seconds2.toString().padStart(2, \"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\n    current.text(currentTime2);\n\n    // 프로그레스 바의 너비 계산\n    const progress = currentTime / duration * 100 + \"%\";\n    // console.log(\"프로그레스바너비:\",progress)\n\n    // 프로그레스 바 업데이트\n    elapsed.css(\"width\", progress);\n\n    // controlSong(currentTime2,duration,progress)\n  });\n\n  const slider = document.querySelector(\"#slider\");\n  let play_btn = $(\".play_song_btn\");\n\n  // 프로그레스바 클릭시 해당 시점 계산후 음원 재생\n  const controlSong = e => {\n    // 클릭한 위치의 X 좌표 구하기\n    const clickX = e.offsetX;\n\n    // 프로그레스바의 전체너비\n    const progressBarWidth = slider.clientWidth;\n\n    // 오디오 총 길이\n    let audioDuration = audio.duration;\n\n    // 클릭한 위치의 너비 비율 계산\n    const progressWidth = clickX / progressBarWidth * 100;\n\n    // 클릭한 위치의 시간 계산\n    const seekTime = clickX / progressBarWidth * audioDuration;\n\n    // 프로그레스바 너비 업데이트\n    elapsed.css(\"width\", progressWidth + \"%\");\n    audio.currentTime = seekTime;\n  };\n  if (document.querySelector(\"#slider\")) slider.addEventListener(\"click\", controlSong);\n}\nexport { handleHover, handleToggle, handleTime, handleWheel, jqFn, currentTime2 };","map":{"version":3,"names":["qs","qsa","changeSongTxt","$","ban_data","useEffect","rotation","ang","cang","rotnum","rotsts","albumImg","rectTop","rectLeft","jqFn","css","background","imgNum","click","toggleClass","handleWheel","e","setTimeout","delta","deltaY","moveSl","tgsl","transition","chg_color","chg_page_ele","backgroundColor","console","log","length","trigger","transform","document","querySelectorAll","forEach","ele","idx","setAttribute","currentTime2","handleHover","hovertg","tg","querySelector","onmouseover","style","onmouseleave","handleToggle","nav","toggleBtn","find","handleTime","audio","elapsed","total1","total2","current","on","currentTime","duration","minutes","Math","floor","seconds","totalTime1","toString","padStart","totalTime2","text","minutes2","seconds2","progress","slider","play_btn","controlSong","clickX","offsetX","progressBarWidth","clientWidth","audioDuration","progressWidth","seekTime","addEventListener"],"sources":["c:/Users/지수진/Desktop/지수진/NEW_ZISUZIN_2023/03.SPA/03.sources/girls-pj/src/js/commonFn.js"],"sourcesContent":["// PC - 휠이벤트 + 메인배너이동\r\n\r\nimport { qs, qsa } from \"./eventFn.js\";\r\nimport changeSongTxt from \"../components/Player.js\";\r\nimport $ from \"jquery\";\r\nimport ban_data from \"../data/ban\";\r\nimport { useEffect } from \"react\";\r\n\r\n/****************************************** \r\n    함수명: handleWheel\r\n    기능: 휠 이동시 슬라이드 위치 변경\r\n******************************************/\r\n// 회전각 초기화변수\r\nlet rotation = 0;\r\n// 기본단위\r\nlet ang = 51.43;\r\n// 현재각도\r\nlet cang = 0;\r\n// 회전횟수\r\nlet rotnum = 0;\r\n// 회전상태막기\r\nlet rotsts = 0;\r\n\r\n// 초기레코드 이미지\r\nlet albumImg = `./images/album/alb0.jpg`;\r\n\r\nlet rectTop;\r\nlet rectLeft;\r\n\r\n// 로딩구역 함수\r\nfunction jqFn() {\r\n    albumImg = `./images/album/alb0.jpg`;\r\n    $(\".banbx\").css({ background: \"url(\" + albumImg + \") 94% 51% / 42% 39% no-repeat\" });\r\n    //초기화!\r\n    cang = 0;\r\n    imgNum = 0;\r\n}\r\nlet imgNum = 0;\r\n\r\n$(\".next_song_btn\").click(()=>{\r\n    toggleClass(\"on\");\r\n})\r\n\r\nfunction handleWheel(e) {\r\n\r\n    // 막기장치 ///////\r\n    if (rotsts) return;\r\n    rotsts = 1;\r\n    setTimeout(() => (rotsts = 0), 400);\r\n\r\n    const delta = e.deltaY;\r\n\r\n    // 슬라이드 겉박스\r\n    const moveSl = qs(\".album_wrap\");\r\n\r\n    // 대상 슬라이드 li\r\n    const tgsl = qsa(\".album_set\");\r\n    rotation += 1;\r\n\r\n    $(\".album_wrap\").css({ transition: \".4s ease-in-out\" });\r\n    $(\".album_set\").css({ transition: \".4s ease-in-out\"});\r\n\r\n    const chg_color = [\r\n      \"pink\",\r\n      \"#222\",\r\n      \"#da9438\",\r\n      \"#cc372b\",\r\n      \"#f7ba20\",\r\n      \"#d388eb\",\r\n      \"#373736\",\r\n    ]\r\n    const chg_page_ele = $(\".circle\");\r\n\r\n    if (delta > 0) {\r\n        // 양수일 때 (아래 휠)\r\n        cang = cang + ang;\r\n        // console.log('imgNum',imgNum)\r\n        imgNum--;\r\n        if(imgNum === -1) imgNum = 6;\r\n\r\n        chg_page_ele.css({backgroundColor: chg_color[imgNum]})\r\n        console.log(\"아래\",chg_color[imgNum], imgNum)\r\n\r\n        if (imgNum < 0) {\r\n            imgNum = $(\".album_set\").length - 1;\r\n            chg_page_ele.css({backgroundColor: chg_color[imgNum+1]})\r\n        }\r\n        $(\".prev_song_btn\").trigger(\"click\");\r\n    } else {\r\n        // 음수일 때 (위로 휠)\r\n        cang = cang - ang;\r\n        \r\n        imgNum++;\r\n        if(imgNum === 7) imgNum = 0;\r\n\r\n        chg_page_ele.css({backgroundColor: chg_color[imgNum]})\r\n        console.log(\"위로\",chg_color[imgNum], imgNum)\r\n\r\n        if (imgNum > $(\".album_set\").length - 1) {\r\n          imgNum = 0;\r\n          chg_page_ele.css({backgroundColor: chg_color[imgNum+1]})\r\n        }\r\n        $(\".next_song_btn\").trigger(\"click\");\r\n    }\r\n\r\n    $(\".banbx\").css({ background: `url(./images/album/alb${imgNum}.jpg) 94% 51% / 42% 39% no-repeat` });\r\n    $(\".album_set \").css({ transform: \"rotate(\" + -cang + \"deg)\" });\r\n\r\n    // console.log(\"횟수:\",rotnum);\r\n}\r\n\r\ndocument.querySelectorAll(\".album_wrap li\").forEach((ele, idx) => ele.setAttribute(\"data-seq\", idx));\r\n\r\n// 현재시간 구하는 변수\r\nlet currentTime2;\r\n\r\n/****************************************** \r\n    함수명: handleHover\r\n    기능: 마우스 오버시 CD 회전하면서 옆으로 나옴\r\n******************************************/\r\nfunction handleHover() {\r\n    // 대상에 호버했을때 함수호출!\r\n    const hovertg = qsa(\".album_set\");\r\n    hovertg.forEach((ele) => {\r\n        // 호버했을때 cd 회전하면서 튀어나옴\r\n        const tg = ele.querySelector(\"aside\");\r\n        ele.onmouseover = () => {\r\n            tg.style.transition = \"transform 7s\";\r\n            tg.style.transform = \"translate(5%, -50%) rotate(720deg)\";\r\n        };\r\n\r\n        ele.onmouseleave = () => {\r\n            tg.style.transition = \"transform 7s\";\r\n            tg.style.transform = \"translate(0, -50%) rotate(0deg)\";\r\n        };\r\n    });\r\n}\r\n\r\n/****************************************** \r\n    함수명: handleToggle\r\n    기능: 원형 네비 메뉴 클릭시 GNB 등장\r\n******************************************/\r\nfunction handleToggle() {\r\n    const nav = $(\".circular_nav\");\r\n    const toggleBtn = nav.find($(\".toggle_btn\"));\r\n\r\n    nav.toggleClass(\"active\");\r\n    toggleBtn.toggleClass(\"active\");\r\n}\r\n\r\n/****************************************** \r\n    함수명: player\r\n    기능: \r\n    (1) 슬라이드li 2번째 요소에 맞춰 플레이어 음원/커버 변경\r\n    (2) 오디오 볼륨조절\r\n    (3) 음원 현재 재생시간/ 총 재생시간 업데이트\r\n    (4) 플레이버튼 토글하여 음원 재생/멈춤\r\n******************************************/\r\nfunction handleTime() {\r\n    let audio = $(\"#music\")[0];\r\n    let elapsed = $(\"#elapsed\");\r\n    const total1 = $(\"#total_timer > .tot1\");\r\n    const total2 = $(\"#total_timer > .tot2\");\r\n    // console.log(total1,total2)\r\n    const current = $(\"#progress_timer\");\r\n\r\n    // 오디오의 재생 시간이 업데이트될 때마다 함수 호출!\r\n    $(\"#music\").on(\"timeupdate\", function () {\r\n        // timeupdate - 오디오 또는 비디오의 재생 시간이 변경될 때마다 발생하는 이벤트\r\n\r\n        // 오디오의 재생 시간과 전체 재생 시간 가져오기\r\n        const currentTime = audio.currentTime;\r\n        const duration = audio.duration || 0; // 오디오 총 길이\r\n\r\n        // 음원 총 재생시간 구해서 시간 업데이트\r\n        const minutes = Math.floor(duration / 60);\r\n        const seconds = Math.floor(duration % 60);\r\n        let totalTime1 = minutes.toString().padStart(2, \"0\");\r\n        let totalTime2 = seconds.toString().padStart(2, \"0\");\r\n        total1.text(totalTime1);\r\n        total2.text(totalTime2);\r\n\r\n        // 음원 현재 재생시간 구해서 시간 업데이트\r\n        const minutes2 = Math.floor(currentTime / 60);\r\n        const seconds2 = Math.floor(currentTime % 60);\r\n        currentTime2 = minutes2.toString().padStart(2, \"0\") + \":\" + seconds2.toString().padStart(2, \"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\r\n        current.text(currentTime2);\r\n\r\n        // 프로그레스 바의 너비 계산\r\n        const progress = (currentTime / duration) * 100 + \"%\";\r\n        // console.log(\"프로그레스바너비:\",progress)\r\n\r\n        // 프로그레스 바 업데이트\r\n        elapsed.css(\"width\", progress);\r\n\r\n        // controlSong(currentTime2,duration,progress)\r\n    });\r\n\r\n    const slider = document.querySelector(\"#slider\");\r\n    let play_btn = $(\".play_song_btn\");\r\n\r\n    // 프로그레스바 클릭시 해당 시점 계산후 음원 재생\r\n    const controlSong = (e) => {\r\n        // 클릭한 위치의 X 좌표 구하기\r\n        const clickX = e.offsetX;\r\n\r\n        // 프로그레스바의 전체너비\r\n        const progressBarWidth = slider.clientWidth;\r\n\r\n        // 오디오 총 길이\r\n        let audioDuration = audio.duration;\r\n\r\n        // 클릭한 위치의 너비 비율 계산\r\n        const progressWidth = (clickX / progressBarWidth) * 100;\r\n\r\n        // 클릭한 위치의 시간 계산\r\n        const seekTime = (clickX / progressBarWidth) * audioDuration;\r\n\r\n        // 프로그레스바 너비 업데이트\r\n        elapsed.css(\"width\", progressWidth + \"%\");\r\n\r\n        audio.currentTime = seekTime;\r\n    };\r\n    if (document.querySelector(\"#slider\")) slider.addEventListener(\"click\", controlSong);\r\n}\r\n\r\nexport { handleHover, handleToggle, handleTime, handleWheel, jqFn, currentTime2 };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}