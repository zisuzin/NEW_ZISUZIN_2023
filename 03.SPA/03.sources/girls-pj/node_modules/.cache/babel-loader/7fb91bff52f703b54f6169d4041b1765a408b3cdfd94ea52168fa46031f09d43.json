{"ast":null,"code":"// PC - 휠이벤트 + 메인배너이동\n\nimport { qs, qsa } from \"./eventFn.js\";\nimport changeSongTxt from \"../components/Player.js\";\nimport $ from \"jquery\";\n\n/****************************************** \r\n    함수명: handleWheel\r\n    기능: 휠 이동시 슬라이드 위치 변경\r\n******************************************/\nlet prot = 0;\nlet rotation = 0;\n// delta값이 음수인 경우 방향 셋팅\nconst valset1 = [\"0%\", \"15%\", \"0%\", \"-10%\", \"-15%\", \"-25%\", \"-35%\"];\n// delta값이 양수인 경우 방향 셋팅\nconst valset2 = [\"0%\", \"-25%\", \"5%\", \"-25%\", \"-50%\", \"-50%\", \"-50%\"];\nfunction handleWheel(e) {\n  console.log(\"휠발생!!\");\n  // 광휠금지\n  if (prot) return;\n  prot = 1;\n  setTimeout(() => {\n    prot = 0;\n  }, 1000);\n\n  // 슬라이드 겉박스\n  const moveSl = qs(\".album_wrap\");\n\n  // 대상 슬라이드 li\n  const tgsl = qsa(\".album_set\");\n  rotation += 1;\n  $(\".banbx\").css({\n    \"transform\": \"rotate()\"\n  });\n}\ndocument.querySelectorAll(\".album_wrap li\").forEach((ele, idx) => ele.setAttribute(\"data-seq\", idx));\nlet currentTime2;\n\n/****************************************** \r\n    함수명: handleHover\r\n    기능: 마우스 오버시 CD 회전하면서 옆으로 나옴\r\n******************************************/\nfunction handleHover() {\n  // 대상에 호버했을때 함수호출!\n  const hovertg = qsa(\".album_set\");\n  hovertg.forEach(ele => {\n    // 호버했을때 cd 회전하면서 튀어나옴\n    const tg = ele.lastElementChild;\n    ele.onmouseover = () => {\n      tg.style.transition = \"transform 7s\";\n      tg.style.transform = \"translateX(83%) rotate(720deg)\";\n    };\n    ele.onmouseleave = () => {\n      tg.style.transition = \"transform 7s\";\n      tg.style.transform = \"translateX(73%) rotate(0deg)\";\n    };\n  });\n}\n\n/****************************************** \r\n    함수명: handleToggle\r\n    기능: 원형 네비 메뉴 클릭시 GNB 등장\r\n******************************************/\nfunction handleToggle() {\n  const nav = $(\".circular_nav\");\n  const toggleBtn = nav.find($(\".toggle_btn\"));\n  nav.toggleClass(\"active\");\n  toggleBtn.toggleClass(\"active\");\n}\n\n/****************************************** \r\n    함수명: player\r\n    기능: \r\n    (1) 슬라이드li 2번째 요소에 맞춰 플레이어 음원/커버 변경\r\n    (2) 오디오 볼륨조절\r\n    (3) 음원 현재 재생시간/ 총 재생시간 업데이트\r\n    (4) 플레이버튼 토글하여 음원 재생/멈춤\r\n******************************************/\nfunction handleTime() {\n  let audio = $(\"#music\")[0];\n  let elapsed = $(\"#elapsed\");\n  const total1 = $(\"#total_timer > .tot1\");\n  const total2 = $(\"#total_timer > .tot2\");\n  // console.log(total1,total2)\n  const current = $(\"#progress_timer\");\n\n  // 오디오의 재생 시간이 업데이트될 때마다 함수 호출!\n  $(\"#music\").on(\"timeupdate\", function () {\n    // timeupdate - 오디오 또는 비디오의 재생 시간이 변경될 때마다 발생하는 이벤트\n\n    // 오디오의 재생 시간과 전체 재생 시간 가져오기\n    const currentTime = audio.currentTime;\n    const duration = audio.duration || 0; // 오디오 총 길이\n\n    // 음원 총 재생시간 구해서 시간 업데이트\n    const minutes = Math.floor(duration / 60);\n    const seconds = Math.floor(duration % 60);\n    let totalTime1 = minutes.toString().padStart(2, \"0\");\n    let totalTime2 = seconds.toString().padStart(2, \"0\");\n    total1.text(totalTime1);\n    total2.text(totalTime2);\n\n    // 음원 현재 재생시간 구해서 시간 업데이트\n    const minutes2 = Math.floor(currentTime / 60);\n    const seconds2 = Math.floor(currentTime % 60);\n    currentTime2 = minutes2.toString().padStart(2, \"0\") + \":\" + seconds2.toString().padStart(2, \"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\n    current.text(currentTime2);\n\n    // 프로그레스 바의 너비 계산\n    const progress = currentTime / duration * 100 + \"%\";\n    // console.log(\"프로그레스바너비:\",progress)\n\n    // 프로그레스 바 업데이트\n    elapsed.css(\"width\", progress);\n\n    // controlSong(currentTime2,duration,progress)\n  });\n\n  const slider = document.querySelector(\"#slider\");\n  let play_btn = $(\".play_song_btn\");\n\n  // 프로그레스바 클릭시 해당 시점 계산후 음원 재생\n  const controlSong = e => {\n    // 클릭한 위치의 X 좌표 구하기\n    const clickX = e.offsetX;\n\n    // 프로그레스바의 전체너비\n    const progressBarWidth = slider.clientWidth;\n\n    // 오디오 총 길이\n    let audioDuration = audio.duration;\n\n    // 클릭한 위치의 너비 비율 계산\n    const progressWidth = clickX / progressBarWidth * 100;\n\n    // 클릭한 위치의 시간 계산\n    const seekTime = clickX / progressBarWidth * audioDuration;\n\n    // 프로그레스바 너비 업데이트\n    elapsed.css(\"width\", progressWidth + '%');\n    audio.currentTime = seekTime;\n  };\n  if (document.querySelector(\"#slider\")) slider.addEventListener(\"click\", controlSong);\n}\nwindow.addEventListener(\"wheel\", handleWheel);\nexport { handleHover, handleToggle, handleTime, handleWheel, currentTime2 };","map":{"version":3,"names":["qs","qsa","changeSongTxt","$","prot","rotation","valset1","valset2","handleWheel","e","console","log","setTimeout","moveSl","tgsl","css","document","querySelectorAll","forEach","ele","idx","setAttribute","currentTime2","handleHover","hovertg","tg","lastElementChild","onmouseover","style","transition","transform","onmouseleave","handleToggle","nav","toggleBtn","find","toggleClass","handleTime","audio","elapsed","total1","total2","current","on","currentTime","duration","minutes","Math","floor","seconds","totalTime1","toString","padStart","totalTime2","text","minutes2","seconds2","progress","slider","querySelector","play_btn","controlSong","clickX","offsetX","progressBarWidth","clientWidth","audioDuration","progressWidth","seekTime","addEventListener","window"],"sources":["e:/지수진/NEW2_ZISUZIN_2023/03.SPA/03.sources/girls-pj/src/js/commonFn.js"],"sourcesContent":["// PC - 휠이벤트 + 메인배너이동\r\n\r\nimport { qs, qsa } from \"./eventFn.js\";\r\nimport changeSongTxt from \"../components/Player.js\";\r\nimport $ from \"jquery\";\r\n\r\n/****************************************** \r\n    함수명: handleWheel\r\n    기능: 휠 이동시 슬라이드 위치 변경\r\n******************************************/\r\nlet prot = 0;\r\nlet rotation = 0;\r\n// delta값이 음수인 경우 방향 셋팅\r\nconst valset1 = [\"0%\",\"15%\",\"0%\",\"-10%\",\"-15%\",\"-25%\",\"-35%\"];\r\n// delta값이 양수인 경우 방향 셋팅\r\nconst valset2 = [\"0%\",\"-25%\",\"5%\",\"-25%\",\"-50%\",\"-50%\",\"-50%\"];\r\n\r\nfunction handleWheel(e) {\r\n  console.log(\"휠발생!!\");\r\n  // 광휠금지\r\n  if (prot) return;\r\n  prot = 1;\r\n  setTimeout(() => {\r\n    prot = 0;\r\n  }, 1000);\r\n\r\n  // 슬라이드 겉박스\r\n  const moveSl = qs(\".album_wrap\");\r\n\r\n  // 대상 슬라이드 li\r\n  const tgsl = qsa(\".album_set\");\r\n  rotation +=1;\r\n  $(\".banbx\").css({\"transform\":\"rotate()\"});\r\n\r\n}\r\n\r\ndocument.querySelectorAll(\".album_wrap li\").forEach((ele,idx)=>ele.setAttribute(\"data-seq\", idx));\r\n\r\nlet currentTime2;\r\n\r\n\r\n/****************************************** \r\n    함수명: handleHover\r\n    기능: 마우스 오버시 CD 회전하면서 옆으로 나옴\r\n******************************************/\r\nfunction handleHover() {\r\n  // 대상에 호버했을때 함수호출!\r\n  const hovertg = qsa(\".album_set\");\r\n  hovertg.forEach((ele) => {\r\n    // 호버했을때 cd 회전하면서 튀어나옴\r\n    const tg = ele.lastElementChild;\r\n    ele.onmouseover = () => {\r\n      tg.style.transition = \"transform 7s\";\r\n      tg.style.transform = \"translateX(83%) rotate(720deg)\";\r\n    };\r\n\r\n    ele.onmouseleave = () => {\r\n      tg.style.transition = \"transform 7s\";\r\n      tg.style.transform = \"translateX(73%) rotate(0deg)\";\r\n    };\r\n  });\r\n}\r\n\r\n/****************************************** \r\n    함수명: handleToggle\r\n    기능: 원형 네비 메뉴 클릭시 GNB 등장\r\n******************************************/\r\nfunction handleToggle() {\r\n  const nav = $(\".circular_nav\");\r\n  const toggleBtn = nav.find($(\".toggle_btn\"));\r\n\r\n  nav.toggleClass(\"active\");\r\n  toggleBtn.toggleClass(\"active\");\r\n}\r\n\r\n/****************************************** \r\n    함수명: player\r\n    기능: \r\n    (1) 슬라이드li 2번째 요소에 맞춰 플레이어 음원/커버 변경\r\n    (2) 오디오 볼륨조절\r\n    (3) 음원 현재 재생시간/ 총 재생시간 업데이트\r\n    (4) 플레이버튼 토글하여 음원 재생/멈춤\r\n******************************************/\r\nfunction handleTime() {\r\n  let audio = $(\"#music\")[0];\r\n  let elapsed = $(\"#elapsed\");\r\n  const total1 = $(\"#total_timer > .tot1\");\r\n  const total2 = $(\"#total_timer > .tot2\");\r\n  // console.log(total1,total2)\r\n  const current = $(\"#progress_timer\");\r\n\r\n    // 오디오의 재생 시간이 업데이트될 때마다 함수 호출!\r\n    $(\"#music\").on(\"timeupdate\", function () { // timeupdate - 오디오 또는 비디오의 재생 시간이 변경될 때마다 발생하는 이벤트\r\n\r\n      // 오디오의 재생 시간과 전체 재생 시간 가져오기\r\n      const currentTime = audio.currentTime;\r\n      const duration = audio.duration || 0; // 오디오 총 길이\r\n\r\n      // 음원 총 재생시간 구해서 시간 업데이트\r\n      const minutes = Math.floor(duration / 60);\r\n      const seconds = Math.floor(duration % 60);\r\n      let totalTime1 = minutes.toString().padStart(2,\"0\")\r\n      let totalTime2 = seconds.toString().padStart(2,\"0\")\r\n      total1.text(totalTime1)\r\n      total2.text(totalTime2)\r\n  \r\n      // 음원 현재 재생시간 구해서 시간 업데이트\r\n      const minutes2 = Math.floor(currentTime / 60);\r\n      const seconds2 = Math.floor(currentTime % 60);\r\n      currentTime2 = minutes2.toString().padStart(2,\"0\") + \":\" + seconds2.toString().padStart(2,\"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\r\n      current.text(currentTime2);\r\n      \r\n      // 프로그레스 바의 너비 계산\r\n      const progress = (currentTime / duration) * 100 + \"%\";\r\n      // console.log(\"프로그레스바너비:\",progress)\r\n      \r\n      // 프로그레스 바 업데이트\r\n      elapsed.css(\"width\", progress);\r\n      \r\n      // controlSong(currentTime2,duration,progress)\r\n    });\r\n  \r\n  const slider = document.querySelector(\"#slider\");\r\n  let play_btn = $(\".play_song_btn\");\r\n  \r\n  // 프로그레스바 클릭시 해당 시점 계산후 음원 재생\r\n  const controlSong = (e) => {\r\n      // 클릭한 위치의 X 좌표 구하기\r\n      const clickX = e.offsetX;\r\n      \r\n      // 프로그레스바의 전체너비\r\n      const progressBarWidth = slider.clientWidth;\r\n  \r\n      // 오디오 총 길이\r\n      let audioDuration = audio.duration; \r\n\r\n      // 클릭한 위치의 너비 비율 계산\r\n      const progressWidth = (clickX / progressBarWidth) * 100;\r\n\r\n      // 클릭한 위치의 시간 계산\r\n      const seekTime = (clickX / progressBarWidth) * audioDuration;\r\n  \r\n      // 프로그레스바 너비 업데이트\r\n      elapsed.css(\"width\", progressWidth + '%');\r\n\r\n      audio.currentTime = seekTime;\r\n    }\r\n    if(document.querySelector(\"#slider\"))\r\n  slider.addEventListener(\"click\",controlSong);\r\n}\r\n\r\nwindow.addEventListener(\"wheel\", handleWheel);\r\n\r\nexport { handleHover, handleToggle, handleTime, handleWheel, currentTime2 };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}