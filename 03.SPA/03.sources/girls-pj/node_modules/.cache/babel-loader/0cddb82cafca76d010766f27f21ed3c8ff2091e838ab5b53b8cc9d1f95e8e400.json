{"ast":null,"code":"// PC - 휠이벤트 + 메인배너이동\n\nimport { qs, qsa } from \"./eventFn.js\";\nimport $ from \"jquery\";\n\n/****************************************** \r\n    함수명: handleWheel\r\n    기능: 휠 이동시 슬라이드 위치 변경\r\n******************************************/\n// let prot = 0;\n// // delta값이 음수인 경우 방향 셋팅\n// const valset1 = [\"0%\",\"15%\",\"0%\",\"-10%\",\"-15%\",\"-25%\",\"-35%\"];\n// // delta값이 양수인 경우 방향 셋팅\n// const valset2 = [\"0%\",\"-25%\",\"5%\",\"-25%\",\"-50%\",\"-50%\",\"-50%\"];\n// function handleWheel(e) {\n//   // 광휠금지\n//   if (prot) return;\n//   prot = 1;\n//   setTimeout(() => {\n//     prot = 0;\n//   }, 1000);\n\n//   // 슬라이드 겉박스\n//   const moveSl = qs(\".album_wrap\");\n\n//   // 대상 슬라이드 li\n//   const tgsl = qsa(\".album_set\");\n\n//   // 휠 방향 체크\n//   let delta = -e.wheelDelta / 10;\n//   console.log(delta)\n//   const currentTop = moveSl.getBoundingClientRect().top;\n//   // console.log(currentTop)\n\n//   // delta값이 음수인 경우 (위로 휠-> 위로 이동)\n//     if (delta < 0) {\n//       console.log(\"위로휠!:\",delta)\n//       // ele.style.top = currentTop + delta + \"px\";\n//         let fe = document.querySelectorAll(\".album_wrap li\")[0];\n//       moveSl.insertBefore(tgsl[6], fe);\n//       console.log(fe);\n//       moveSl.style.top = \"-360px\";\n//       moveSl.style.transition = \"none\";\n//       setTimeout(()=>{\n//         moveSl.style.transition = \"1s ease-in-out\";\n//         moveSl.style.top = \"3vh\";\n\n//       },10);\n\n//     }\n//     // delta값이 양수인 경우 (아래로 휠-> 아래로 이동)\n//     else if (delta > 0) {\n//       console.log(\"아래로휠!:\",delta)\n//       moveSl.style.top = \"-360px\";\n//       moveSl.style.transition = \"1s ease-out\";\n//       setTimeout(()=>{\n//         // ele.style.top = currentTop + delta + \"px\";\n//         let fe = document.querySelectorAll(\".album_wrap li\")[0];\n//         console.log(fe);\n//         moveSl.appendChild(fe);\n//         moveSl.style.transition = \"none\";\n//         moveSl.style.top = \"3vh\";\n\n//       },1000)\n\n//     }\n\n//     // data-seq 라는 사용자정의 속성 넣기\n//     document.querySelectorAll(\".album_wrap li\").forEach((ele, idx) => {\n//     ele.style.transform = `translateX(${delta<0?valset1[idx]:valset2[idx]})`;\n//   }); // forEach //\n// }\n\n// document.querySelectorAll(\".album_wrap li\").forEach((ele,idx)=>ele.setAttribute(\"data-seq\", idx));\n\n/****************************************** \r\n    함수명: handleHover\r\n    기능: 마우스 오버시 CD 회전하면서 옆으로 나옴\r\n******************************************/\nfunction handleHover() {\n  // 대상에 호버했을때 함수호출!\n  const hovertg = qsa(\".album_set\");\n  hovertg.forEach(ele => {\n    // 호버했을때 cd 회전하면서 튀어나옴\n    const tg = ele.lastElementChild;\n    ele.onmouseover = () => {\n      tg.style.transition = \"transform 5s\";\n      tg.style.transform = \"translateX(83%) rotate(720deg)\";\n    };\n    ele.onmouseleave = () => {\n      tg.style.transition = \"transform 5s\";\n      tg.style.transform = \"translateX(73%) rotate(0deg)\";\n    };\n  });\n}\n\n/****************************************** \r\n    함수명: handleToggle\r\n    기능: 원형 네비 메뉴 클릭시 GNB 등장\r\n******************************************/\n// function handleToggle() {\n//   const nav = document.querySelector(\".circular_nav\");\n//   const toggleBtn = nav.querySelector(\".toggle_btn\");\n\n//   toggleBtn.addEventListener(\"click\", () => {\n//     nav.classList.toggle(\"active\");\n//     toggleBtn.classList.toggle(\"active\");\n//   });\n// }\n\n/****************************************** \r\n    함수명: player\r\n    기능: \r\n    (1) 슬라이드li 2번째 요소에 맞춰 플레이어 음원/커버 변경\r\n    (2) 오디오 볼륨조절\r\n    (3) 음원 현재 재생시간/ 총 재생시간 업데이트\r\n    (4) 플레이버튼 토글하여 음원 재생/멈춤\r\n******************************************/\nfunction player() {\n  const audio = $(\"#music\")[0];\n  const paused_btn = $(\".play_song_btn\");\n  const play_btn = $(\".play_song_btn\");\n  const elapsed = $(\"#elapsed\");\n  const total = $(\"#total_timer\");\n  const current = $(\"#progress_timer\");\n  const volumeBar = $(\"#volume\");\n\n  // 오디오 재생/멈춤버튼 토글\n  paused_btn.click(function () {\n    paused_btn.toggleClass(\"active\");\n    /* active 클래스 가지고있으면 이미지 변경! */\n    if (paused_btn.hasClass(\"active\")) {\n      paused_btn.find(\"img\").attr(\"src\", \"../00.data/02.imgData/player/bx-pause.svg\");\n    } else {\n      paused_btn.find(\"img\").attr(\"src\", \"../00.data/02.imgData/player/bx-play-circle.svg\");\n    }\n  });\n\n  // 오디오의 재생 시간이 업데이트될 때마다 함수 호출!\n  audio.addEventListener(\"timeupdate\", function () {\n    // timeupdate - 오디오 또는 비디오의 재생 시간이 변경될 때마다 발생하는 이벤트\n    // 오디오의 재생 시간과 전체 재생 시간 가져오기\n    const currentTime = audio.currentTime;\n    const duration = audio.duration; // 오디오 총 길이\n    // 음원 총 길이 구해서 시간 업데이트\n    const minutes = Math.floor(duration / 60);\n    const seconds = Math.floor(duration % 60);\n    const totalTime = minutes.toString().padStart(2, \"0\") + \":\" + seconds.toString().padStart(2, \"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\n    total.text(totalTime);\n\n    // 음원 재생시간 구해서 시간 업데이트\n    const minutes2 = Math.floor(currentTime / 60);\n    const seconds2 = Math.floor(currentTime % 60);\n    const currentTime2 = minutes2.toString().padStart(2, \"0\") + \":\" + seconds2.toString().padStart(2, \"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\n    current.text(currentTime2);\n\n    // 프로그레스 바의 너비 계산\n    const progress = currentTime / duration * 100 + \"%\";\n    // console.log(\"프로그레스바너비:\",progress)\n\n    // 프로그레스 바 업데이트\n    elapsed.css(\"width\", progress);\n  });\n  play_btn.click(function () {\n    if (audio.paused) {\n      // 재생버튼 클릭시 음원 재생\n      audio.play();\n    } else {\n      audio.pause();\n    }\n  });\n\n  // 오디오 볼륨 조절\n  volumeBar.on(\"input\", function () {\n    // 볼륨 조절바를 조작할때 이벤트 발생!\n    const volumeVal = $(this).val(); // 오디오 요소 - 현재 볼륨값을 값으로 가져옴\n    audio.volume = volumeVal;\n  });\n}\n\n// 함수호출!\nhandleHover();\nhandleToggle();\nplayer();\nwindow.addEventListener(\"wheel\", handleWheel);\nexport { handleHover };","map":{"version":3,"names":["qs","qsa","$","handleHover","hovertg","forEach","ele","tg","lastElementChild","onmouseover","style","transition","transform","onmouseleave","player","audio","paused_btn","play_btn","elapsed","total","current","volumeBar","click","toggleClass","hasClass","find","attr","addEventListener","currentTime","duration","minutes","Math","floor","seconds","totalTime","toString","padStart","text","minutes2","seconds2","currentTime2","progress","css","paused","play","pause","on","volumeVal","val","volume","handleToggle","window","handleWheel"],"sources":["c:/Users/지수진/Desktop/지수진/NEW_ZISUZIN_2023/03.SPA/03.sources/girls-pj/src/js/commonFn.js"],"sourcesContent":["// PC - 휠이벤트 + 메인배너이동\r\n\r\nimport { qs, qsa } from \"./eventFn.js\";\r\nimport $ from \"jquery\";\r\n\r\n/****************************************** \r\n    함수명: handleWheel\r\n    기능: 휠 이동시 슬라이드 위치 변경\r\n******************************************/\r\n// let prot = 0;\r\n// // delta값이 음수인 경우 방향 셋팅\r\n// const valset1 = [\"0%\",\"15%\",\"0%\",\"-10%\",\"-15%\",\"-25%\",\"-35%\"];\r\n// // delta값이 양수인 경우 방향 셋팅\r\n// const valset2 = [\"0%\",\"-25%\",\"5%\",\"-25%\",\"-50%\",\"-50%\",\"-50%\"];\r\n// function handleWheel(e) {\r\n//   // 광휠금지\r\n//   if (prot) return;\r\n//   prot = 1;\r\n//   setTimeout(() => {\r\n//     prot = 0;\r\n//   }, 1000);\r\n\r\n//   // 슬라이드 겉박스\r\n//   const moveSl = qs(\".album_wrap\");\r\n\r\n//   // 대상 슬라이드 li\r\n//   const tgsl = qsa(\".album_set\");\r\n\r\n//   // 휠 방향 체크\r\n//   let delta = -e.wheelDelta / 10;\r\n//   console.log(delta)\r\n//   const currentTop = moveSl.getBoundingClientRect().top;\r\n//   // console.log(currentTop)\r\n\r\n//   // delta값이 음수인 경우 (위로 휠-> 위로 이동)\r\n//     if (delta < 0) {\r\n//       console.log(\"위로휠!:\",delta)\r\n//       // ele.style.top = currentTop + delta + \"px\";\r\n//         let fe = document.querySelectorAll(\".album_wrap li\")[0];\r\n//       moveSl.insertBefore(tgsl[6], fe);\r\n//       console.log(fe);\r\n//       moveSl.style.top = \"-360px\";\r\n//       moveSl.style.transition = \"none\";\r\n//       setTimeout(()=>{\r\n//         moveSl.style.transition = \"1s ease-in-out\";\r\n//         moveSl.style.top = \"3vh\";\r\n\r\n//       },10);\r\n      \r\n//     }\r\n//     // delta값이 양수인 경우 (아래로 휠-> 아래로 이동)\r\n//     else if (delta > 0) {\r\n//       console.log(\"아래로휠!:\",delta)\r\n//       moveSl.style.top = \"-360px\";\r\n//       moveSl.style.transition = \"1s ease-out\";\r\n//       setTimeout(()=>{\r\n//         // ele.style.top = currentTop + delta + \"px\";\r\n//         let fe = document.querySelectorAll(\".album_wrap li\")[0];\r\n//         console.log(fe);\r\n//         moveSl.appendChild(fe);\r\n//         moveSl.style.transition = \"none\";\r\n//         moveSl.style.top = \"3vh\";\r\n        \r\n//       },1000)\r\n\r\n//     }\r\n\r\n//     // data-seq 라는 사용자정의 속성 넣기\r\n//     document.querySelectorAll(\".album_wrap li\").forEach((ele, idx) => {\r\n//     ele.style.transform = `translateX(${delta<0?valset1[idx]:valset2[idx]})`;\r\n//   }); // forEach //\r\n// }\r\n\r\n// document.querySelectorAll(\".album_wrap li\").forEach((ele,idx)=>ele.setAttribute(\"data-seq\", idx));\r\n\r\n/****************************************** \r\n    함수명: handleHover\r\n    기능: 마우스 오버시 CD 회전하면서 옆으로 나옴\r\n******************************************/\r\nfunction handleHover() {\r\n  // 대상에 호버했을때 함수호출!\r\n  const hovertg = qsa(\".album_set\");\r\n  hovertg.forEach((ele) => {\r\n    // 호버했을때 cd 회전하면서 튀어나옴\r\n    const tg = ele.lastElementChild;\r\n    ele.onmouseover = () => {\r\n      tg.style.transition = \"transform 5s\";\r\n      tg.style.transform = \"translateX(83%) rotate(720deg)\";\r\n    };\r\n\r\n    ele.onmouseleave = () => {\r\n      tg.style.transition = \"transform 5s\";\r\n      tg.style.transform = \"translateX(73%) rotate(0deg)\";\r\n    };\r\n  });\r\n}\r\n\r\n/****************************************** \r\n    함수명: handleToggle\r\n    기능: 원형 네비 메뉴 클릭시 GNB 등장\r\n******************************************/\r\n// function handleToggle() {\r\n//   const nav = document.querySelector(\".circular_nav\");\r\n//   const toggleBtn = nav.querySelector(\".toggle_btn\");\r\n\r\n//   toggleBtn.addEventListener(\"click\", () => {\r\n//     nav.classList.toggle(\"active\");\r\n//     toggleBtn.classList.toggle(\"active\");\r\n//   });\r\n// }\r\n\r\n/****************************************** \r\n    함수명: player\r\n    기능: \r\n    (1) 슬라이드li 2번째 요소에 맞춰 플레이어 음원/커버 변경\r\n    (2) 오디오 볼륨조절\r\n    (3) 음원 현재 재생시간/ 총 재생시간 업데이트\r\n    (4) 플레이버튼 토글하여 음원 재생/멈춤\r\n******************************************/\r\nfunction player() {\r\n  const audio = $(\"#music\")[0];\r\n  const paused_btn = $(\".play_song_btn\");\r\n  const play_btn = $(\".play_song_btn\");\r\n  const elapsed = $(\"#elapsed\");\r\n  const total = $(\"#total_timer\");\r\n  const current = $(\"#progress_timer\");\r\n  const volumeBar = $(\"#volume\");\r\n\r\n  // 오디오 재생/멈춤버튼 토글\r\n  paused_btn.click(function () {\r\n    paused_btn.toggleClass(\"active\");\r\n    /* active 클래스 가지고있으면 이미지 변경! */\r\n    if (paused_btn.hasClass(\"active\")) {\r\n      paused_btn.find(\"img\").attr(\"src\", \"../00.data/02.imgData/player/bx-pause.svg\");\r\n    } else {\r\n      paused_btn.find(\"img\").attr(\"src\", \"../00.data/02.imgData/player/bx-play-circle.svg\");\r\n    }\r\n  });\r\n\r\n  // 오디오의 재생 시간이 업데이트될 때마다 함수 호출!\r\n  audio.addEventListener(\"timeupdate\", function () { // timeupdate - 오디오 또는 비디오의 재생 시간이 변경될 때마다 발생하는 이벤트\r\n    // 오디오의 재생 시간과 전체 재생 시간 가져오기\r\n    const currentTime = audio.currentTime;\r\n    const duration = audio.duration; // 오디오 총 길이\r\n    // 음원 총 길이 구해서 시간 업데이트\r\n    const minutes = Math.floor(duration / 60);\r\n    const seconds = Math.floor(duration % 60);\r\n    const totalTime = minutes.toString().padStart(2,\"0\") + \":\" + seconds.toString().padStart(2,\"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\r\n    total.text(totalTime);\r\n\r\n    // 음원 재생시간 구해서 시간 업데이트\r\n    const minutes2 = Math.floor(currentTime / 60);\r\n    const seconds2 = Math.floor(currentTime % 60);\r\n    const currentTime2 = minutes2.toString().padStart(2,\"0\") + \":\" + seconds2.toString().padStart(2,\"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\r\n    current.text(currentTime2);\r\n    \r\n    // 프로그레스 바의 너비 계산\r\n    const progress = (currentTime / duration) * 100 + \"%\";\r\n    // console.log(\"프로그레스바너비:\",progress)\r\n\r\n    // 프로그레스 바 업데이트\r\n    elapsed.css(\"width\", progress);\r\n  });\r\n\r\n  play_btn.click(function () {\r\n    if (audio.paused) {\r\n      // 재생버튼 클릭시 음원 재생\r\n      audio.play();\r\n    } else {\r\n      audio.pause();\r\n    }\r\n  });\r\n\r\n  // 오디오 볼륨 조절\r\n  volumeBar.on(\"input\", function() { // 볼륨 조절바를 조작할때 이벤트 발생!\r\n    const volumeVal = $(this).val(); // 오디오 요소 - 현재 볼륨값을 값으로 가져옴\r\n    audio.volume = volumeVal;\r\n  })\r\n}\r\n\r\n// 함수호출!\r\nhandleHover();\r\nhandleToggle();\r\nplayer();\r\n\r\nwindow.addEventListener(\"wheel\", handleWheel);\r\n\r\nexport { handleHover };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}