{"ast":null,"code":"// PC - 휠이벤트 + 메인배너이동\nimport{qs,qsa}from\"./eventFn.js\";import changeSongTxt from\"../components/Player.js\";import $ from\"jquery\";/****************************************** \r\n    함수명: handleWheel\r\n    기능: 휠 이동시 슬라이드 위치 변경\r\n******************************************/var prot=0;// delta값이 음수인 경우 방향 셋팅\nvar valset1=[\"0%\",\"15%\",\"0%\",\"-10%\",\"-15%\",\"-25%\",\"-35%\"];// delta값이 양수인 경우 방향 셋팅\nvar valset2=[\"0%\",\"-25%\",\"5%\",\"-25%\",\"-50%\",\"-50%\",\"-50%\"];// function handleWheel(e) {\n//   // 광휠금지\n//   if (prot) return;\n//   prot = 1;\n//   setTimeout(() => {\n//     prot = 0;\n//   }, 1000);\n//   // 슬라이드 겉박스\n//   const moveSl = qs(\".album_wrap\");\n//   // 대상 슬라이드 li\n//   const tgsl = qsa(\".album_set\");\n//   // 휠 방향 체크\n//   let delta = e.deltaY > 0 ? 1 : -1;\n//   // delta값이 음수인 경우 (위로 휠-> 위로 이동)\n//     if (delta < 0) {\n//       // console.log(\"위로휠!:\",delta)\n//       // ele.style.top = currentTop + delta + \"px\";\n//         let fe = document.querySelectorAll(\".album_wrap li\")[0];\n//       moveSl.insertBefore(tgsl[6], fe);\n//       // console.log(fe);\n//       moveSl.style.top = \"-360px\";\n//       moveSl.style.transition = \"none\";\n//       setTimeout(()=>{\n//         moveSl.style.transition = \"1s ease-in-out\";\n//         moveSl.style.top = \"3vh\";\n//       },10);\n//     }\n//     // delta값이 양수인 경우 (아래로 휠-> 아래로 이동)\n//     else if (delta > 0) {\n//       // console.log(\"아래로휠!:\",delta)\n//       moveSl.style.top = \"-360px\";\n//       moveSl.style.transition = \"1s ease-out\";\n//       setTimeout(()=>{\n//         // ele.style.top = currentTop + delta + \"px\";\n//         let fe = document.querySelectorAll(\".album_wrap li\")[0];\n//         // console.log(fe);\n//         moveSl.appendChild(fe);\n//         moveSl.style.transition = \"none\";\n//         moveSl.style.top = \"3vh\";\n//       },1000)\n//     }\n//     // data-seq 라는 사용자정의 속성 넣기\n//     document.querySelectorAll(\".album_wrap li\").forEach((ele, idx) => {\n//     ele.style.transform = `translateX(${delta<0?valset1[idx]:valset2[idx]})`;\n//   }); // forEach //\n// }\n// document.querySelectorAll(\".album_wrap li\").forEach((ele,idx)=>ele.setAttribute(\"data-seq\", idx));\nvar currentTime2;/****************************************** \r\n    함수명: handleHover\r\n    기능: 마우스 오버시 CD 회전하면서 옆으로 나옴\r\n******************************************/function handleHover(){// 대상에 호버했을때 함수호출!\nvar hovertg=qsa(\".album_set\");hovertg.forEach(function(ele){// 호버했을때 cd 회전하면서 튀어나옴\nvar tg=ele.lastElementChild;ele.onmouseover=function(){tg.style.transition=\"transform 7s\";tg.style.transform=\"translateX(83%) rotate(720deg)\";};ele.onmouseleave=function(){tg.style.transition=\"transform 7s\";tg.style.transform=\"translateX(73%) rotate(0deg)\";};});}/****************************************** \r\n    함수명: handleToggle\r\n    기능: 원형 네비 메뉴 클릭시 GNB 등장\r\n******************************************/function handleToggle(){var nav=$(\".circular_nav\");var toggleBtn=nav.find($(\".toggle_btn\"));nav.toggleClass(\"active\");toggleBtn.toggleClass(\"active\");}/****************************************** \r\n    함수명: player\r\n    기능: \r\n    (1) 슬라이드li 2번째 요소에 맞춰 플레이어 음원/커버 변경\r\n    (2) 오디오 볼륨조절\r\n    (3) 음원 현재 재생시간/ 총 재생시간 업데이트\r\n    (4) 플레이버튼 토글하여 음원 재생/멈춤\r\n******************************************/function handleTime(){var audio=$(\"#music\")[0];var elapsed=$(\"#elapsed\");var total1=$(\"#total_timer > .tot1\");var total2=$(\"#total_timer > .tot2\");// console.log(total1,total2)\nvar current=$(\"#progress_timer\");// 오디오의 재생 시간이 업데이트될 때마다 함수 호출!\n$(\"#music\").on(\"timeupdate\",function(){// timeupdate - 오디오 또는 비디오의 재생 시간이 변경될 때마다 발생하는 이벤트\n// 오디오의 재생 시간과 전체 재생 시간 가져오기\nvar currentTime=audio.currentTime;var duration=audio.duration||0;// 오디오 총 길이\n// 음원 총 재생시간 구해서 시간 업데이트\nvar minutes=Math.floor(duration/60);var seconds=Math.floor(duration%60);var totalTime1=minutes.toString().padStart(2,\"0\");var totalTime2=seconds.toString().padStart(2,\"0\");total1.text(totalTime1);total2.text(totalTime2);// 음원 현재 재생시간 구해서 시간 업데이트\nvar minutes2=Math.floor(currentTime/60);var seconds2=Math.floor(currentTime%60);currentTime2=minutes2.toString().padStart(2,\"0\")+\":\"+seconds2.toString().padStart(2,\"0\");// 자료형을 문자화한 후 앞에 \"0\"을 추가!\ncurrent.text(currentTime2);// 프로그레스 바의 너비 계산\nvar progress=currentTime/duration*100+\"%\";// console.log(\"프로그레스바너비:\",progress)\n// 프로그레스 바 업데이트\nelapsed.css(\"width\",progress);// controlSong(currentTime2,duration,progress)\n});var slider=document.querySelector(\"#slider\");var play_btn=$(\".play_song_btn\");// 프로그레스바 클릭시 해당 시점 계산후 음원 재생\nvar controlSong=function controlSong(e){// 클릭한 위치의 X 좌표 구하기\nvar clickX=e.offsetX;// 프로그레스바의 전체너비\nvar progressBarWidth=slider.clientWidth;// 오디오 총 길이\nvar audioDuration=audio.duration;// 클릭한 위치의 너비 비율 계산\nvar progressWidth=clickX/progressBarWidth*100;// 클릭한 위치의 시간 계산\nvar seekTime=clickX/progressBarWidth*audioDuration;// 프로그레스바 너비 업데이트\nelapsed.css(\"width\",progressWidth+'%');audio.currentTime=seekTime;};if(document.querySelector(\"#slider\"))slider.addEventListener(\"click\",controlSong);}// window.addEventListener(\"wheel\", handleWheel);\nexport{handleHover,handleToggle,handleTime,currentTime2};","map":{"version":3,"names":["qs","qsa","changeSongTxt","$","prot","valset1","valset2","currentTime2","handleHover","hovertg","forEach","ele","tg","lastElementChild","onmouseover","style","transition","transform","onmouseleave","handleToggle","nav","toggleBtn","find","toggleClass","handleTime","audio","elapsed","total1","total2","current","on","currentTime","duration","minutes","Math","floor","seconds","totalTime1","toString","padStart","totalTime2","text","minutes2","seconds2","progress","css","slider","document","querySelector","play_btn","controlSong","e","clickX","offsetX","progressBarWidth","clientWidth","audioDuration","progressWidth","seekTime","addEventListener"],"sources":["e:/지수진/NEW2_ZISUZIN_2023/03.SPA/03.sources/girls-pj/src/js/commonFn.js"],"sourcesContent":["// PC - 휠이벤트 + 메인배너이동\r\n\r\nimport { qs, qsa } from \"./eventFn.js\";\r\nimport changeSongTxt from \"../components/Player.js\";\r\nimport $ from \"jquery\";\r\n\r\n/****************************************** \r\n    함수명: handleWheel\r\n    기능: 휠 이동시 슬라이드 위치 변경\r\n******************************************/\r\nlet prot = 0;\r\n// delta값이 음수인 경우 방향 셋팅\r\nconst valset1 = [\"0%\",\"15%\",\"0%\",\"-10%\",\"-15%\",\"-25%\",\"-35%\"];\r\n// delta값이 양수인 경우 방향 셋팅\r\nconst valset2 = [\"0%\",\"-25%\",\"5%\",\"-25%\",\"-50%\",\"-50%\",\"-50%\"];\r\n\r\n// function handleWheel(e) {\r\n//   // 광휠금지\r\n//   if (prot) return;\r\n//   prot = 1;\r\n//   setTimeout(() => {\r\n//     prot = 0;\r\n//   }, 1000);\r\n\r\n//   // 슬라이드 겉박스\r\n//   const moveSl = qs(\".album_wrap\");\r\n\r\n//   // 대상 슬라이드 li\r\n//   const tgsl = qsa(\".album_set\");\r\n\r\n//   // 휠 방향 체크\r\n//   let delta = e.deltaY > 0 ? 1 : -1;\r\n\r\n//   // delta값이 음수인 경우 (위로 휠-> 위로 이동)\r\n//     if (delta < 0) {\r\n//       // console.log(\"위로휠!:\",delta)\r\n//       // ele.style.top = currentTop + delta + \"px\";\r\n//         let fe = document.querySelectorAll(\".album_wrap li\")[0];\r\n//       moveSl.insertBefore(tgsl[6], fe);\r\n//       // console.log(fe);\r\n//       moveSl.style.top = \"-360px\";\r\n//       moveSl.style.transition = \"none\";\r\n//       setTimeout(()=>{\r\n//         moveSl.style.transition = \"1s ease-in-out\";\r\n//         moveSl.style.top = \"3vh\";\r\n//       },10);\r\n//     }\r\n//     // delta값이 양수인 경우 (아래로 휠-> 아래로 이동)\r\n//     else if (delta > 0) {\r\n//       // console.log(\"아래로휠!:\",delta)\r\n//       moveSl.style.top = \"-360px\";\r\n//       moveSl.style.transition = \"1s ease-out\";\r\n//       setTimeout(()=>{\r\n//         // ele.style.top = currentTop + delta + \"px\";\r\n//         let fe = document.querySelectorAll(\".album_wrap li\")[0];\r\n//         // console.log(fe);\r\n//         moveSl.appendChild(fe);\r\n//         moveSl.style.transition = \"none\";\r\n//         moveSl.style.top = \"3vh\";\r\n//       },1000)\r\n//     }\r\n\r\n//     // data-seq 라는 사용자정의 속성 넣기\r\n//     document.querySelectorAll(\".album_wrap li\").forEach((ele, idx) => {\r\n//     ele.style.transform = `translateX(${delta<0?valset1[idx]:valset2[idx]})`;\r\n//   }); // forEach //\r\n// }\r\n\r\n// document.querySelectorAll(\".album_wrap li\").forEach((ele,idx)=>ele.setAttribute(\"data-seq\", idx));\r\n\r\nlet currentTime2;\r\n\r\n\r\n/****************************************** \r\n    함수명: handleHover\r\n    기능: 마우스 오버시 CD 회전하면서 옆으로 나옴\r\n******************************************/\r\nfunction handleHover() {\r\n  // 대상에 호버했을때 함수호출!\r\n  const hovertg = qsa(\".album_set\");\r\n  hovertg.forEach((ele) => {\r\n    // 호버했을때 cd 회전하면서 튀어나옴\r\n    const tg = ele.lastElementChild;\r\n    ele.onmouseover = () => {\r\n      tg.style.transition = \"transform 7s\";\r\n      tg.style.transform = \"translateX(83%) rotate(720deg)\";\r\n    };\r\n\r\n    ele.onmouseleave = () => {\r\n      tg.style.transition = \"transform 7s\";\r\n      tg.style.transform = \"translateX(73%) rotate(0deg)\";\r\n    };\r\n  });\r\n}\r\n\r\n/****************************************** \r\n    함수명: handleToggle\r\n    기능: 원형 네비 메뉴 클릭시 GNB 등장\r\n******************************************/\r\nfunction handleToggle() {\r\n  const nav = $(\".circular_nav\");\r\n  const toggleBtn = nav.find($(\".toggle_btn\"));\r\n\r\n  nav.toggleClass(\"active\");\r\n  toggleBtn.toggleClass(\"active\");\r\n}\r\n\r\n/****************************************** \r\n    함수명: player\r\n    기능: \r\n    (1) 슬라이드li 2번째 요소에 맞춰 플레이어 음원/커버 변경\r\n    (2) 오디오 볼륨조절\r\n    (3) 음원 현재 재생시간/ 총 재생시간 업데이트\r\n    (4) 플레이버튼 토글하여 음원 재생/멈춤\r\n******************************************/\r\nfunction handleTime() {\r\n  let audio = $(\"#music\")[0];\r\n  let elapsed = $(\"#elapsed\");\r\n  const total1 = $(\"#total_timer > .tot1\");\r\n  const total2 = $(\"#total_timer > .tot2\");\r\n  // console.log(total1,total2)\r\n  const current = $(\"#progress_timer\");\r\n\r\n    // 오디오의 재생 시간이 업데이트될 때마다 함수 호출!\r\n    $(\"#music\").on(\"timeupdate\", function () { // timeupdate - 오디오 또는 비디오의 재생 시간이 변경될 때마다 발생하는 이벤트\r\n\r\n      // 오디오의 재생 시간과 전체 재생 시간 가져오기\r\n      const currentTime = audio.currentTime;\r\n      const duration = audio.duration || 0; // 오디오 총 길이\r\n\r\n      // 음원 총 재생시간 구해서 시간 업데이트\r\n      const minutes = Math.floor(duration / 60);\r\n      const seconds = Math.floor(duration % 60);\r\n      let totalTime1 = minutes.toString().padStart(2,\"0\")\r\n      let totalTime2 = seconds.toString().padStart(2,\"0\")\r\n      total1.text(totalTime1)\r\n      total2.text(totalTime2)\r\n  \r\n      // 음원 현재 재생시간 구해서 시간 업데이트\r\n      const minutes2 = Math.floor(currentTime / 60);\r\n      const seconds2 = Math.floor(currentTime % 60);\r\n      currentTime2 = minutes2.toString().padStart(2,\"0\") + \":\" + seconds2.toString().padStart(2,\"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\r\n      current.text(currentTime2);\r\n      \r\n      // 프로그레스 바의 너비 계산\r\n      const progress = (currentTime / duration) * 100 + \"%\";\r\n      // console.log(\"프로그레스바너비:\",progress)\r\n      \r\n      // 프로그레스 바 업데이트\r\n      elapsed.css(\"width\", progress);\r\n      \r\n      // controlSong(currentTime2,duration,progress)\r\n    });\r\n  \r\n  const slider = document.querySelector(\"#slider\");\r\n  let play_btn = $(\".play_song_btn\");\r\n  \r\n  // 프로그레스바 클릭시 해당 시점 계산후 음원 재생\r\n  const controlSong = (e) => {\r\n      // 클릭한 위치의 X 좌표 구하기\r\n      const clickX = e.offsetX;\r\n      \r\n      // 프로그레스바의 전체너비\r\n      const progressBarWidth = slider.clientWidth;\r\n  \r\n      // 오디오 총 길이\r\n      let audioDuration = audio.duration; \r\n\r\n      // 클릭한 위치의 너비 비율 계산\r\n      const progressWidth = (clickX / progressBarWidth) * 100;\r\n\r\n      // 클릭한 위치의 시간 계산\r\n      const seekTime = (clickX / progressBarWidth) * audioDuration;\r\n  \r\n      // 프로그레스바 너비 업데이트\r\n      elapsed.css(\"width\", progressWidth + '%');\r\n\r\n      audio.currentTime = seekTime;\r\n    }\r\n    if(document.querySelector(\"#slider\"))\r\n  slider.addEventListener(\"click\",controlSong);\r\n}\r\n\r\n// window.addEventListener(\"wheel\", handleWheel);\r\n\r\nexport { handleHover, handleToggle, handleTime, currentTime2 };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}