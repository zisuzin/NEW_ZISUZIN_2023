{"ast":null,"code":"import _toConsumableArray from \"e:/\\uC9C0\\uC218\\uC9C4/NEW2_ZISUZIN_2023/03.SPA/03.sources/girls-pj/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nexport var processLazyPreloader = function processLazyPreloader(swiper, imageEl) {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  var slideSelector = function slideSelector() {\n    return swiper.isElement ? \"swiper-slide\" : \".\".concat(swiper.params.slideClass);\n  };\n  var slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    var lazyEl = slideEl.querySelector(\".\".concat(swiper.params.lazyPreloaderClass));\n    if (lazyEl) lazyEl.remove();\n  }\n};\nvar unlazy = function unlazy(swiper, index) {\n  if (!swiper.slides[index]) return;\n  var imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport var preload = function preload(swiper) {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  var amount = swiper.params.lazyPreloadPrevNext;\n  var len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  var slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  var activeIndex = swiper.activeIndex;\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    var activeColumn = activeIndex;\n    var preloadColumns = [activeColumn - amount];\n    preloadColumns.push.apply(preloadColumns, _toConsumableArray(Array.from({\n      length: amount\n    }).map(function (_, i) {\n      return activeColumn + slidesPerView + i;\n    })));\n    swiper.slides.forEach(function (slideEl, i) {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n  var slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (var i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      var realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (var _i = Math.max(activeIndex - amount, 0); _i <= Math.min(slideIndexLastInView + amount, len - 1); _i += 1) {\n      if (_i !== activeIndex && (_i > slideIndexLastInView || _i < activeIndex)) {\n        unlazy(swiper, _i);\n      }\n    }\n  }\n};","map":{"version":3,"names":["processLazyPreloader","swiper","imageEl","destroyed","params","slideSelector","isElement","concat","slideClass","slideEl","closest","lazyEl","querySelector","lazyPreloaderClass","remove","unlazy","index","slides","removeAttribute","preload","amount","lazyPreloadPrevNext","len","length","Math","min","slidesPerView","slidesPerViewDynamic","ceil","activeIndex","grid","rows","activeColumn","preloadColumns","push","apply","_toConsumableArray","Array","from","map","_","i","forEach","includes","column","slideIndexLastInView","rewind","loop","realIndex","max"],"sources":["e:/지수진/NEW2_ZISUZIN_2023/03.SPA/03.sources/girls-pj/node_modules/swiper/shared/process-lazy-preloader.js"],"sourcesContent":["export const processLazyPreloader = (swiper, imageEl) => {\r\n  if (!swiper || swiper.destroyed || !swiper.params) return;\r\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\r\n  const slideEl = imageEl.closest(slideSelector());\r\n  if (slideEl) {\r\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\r\n    if (lazyEl) lazyEl.remove();\r\n  }\r\n};\r\nconst unlazy = (swiper, index) => {\r\n  if (!swiper.slides[index]) return;\r\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\r\n  if (imageEl) imageEl.removeAttribute('loading');\r\n};\r\nexport const preload = swiper => {\r\n  if (!swiper || swiper.destroyed || !swiper.params) return;\r\n  let amount = swiper.params.lazyPreloadPrevNext;\r\n  const len = swiper.slides.length;\r\n  if (!len || !amount || amount < 0) return;\r\n  amount = Math.min(amount, len);\r\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\r\n  const activeIndex = swiper.activeIndex;\r\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\r\n    const activeColumn = activeIndex;\r\n    const preloadColumns = [activeColumn - amount];\r\n    preloadColumns.push(...Array.from({\r\n      length: amount\r\n    }).map((_, i) => {\r\n      return activeColumn + slidesPerView + i;\r\n    }));\r\n    swiper.slides.forEach((slideEl, i) => {\r\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\r\n    });\r\n    return;\r\n  }\r\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\r\n  if (swiper.params.rewind || swiper.params.loop) {\r\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\r\n      const realIndex = (i % len + len) % len;\r\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\r\n    }\r\n  } else {\r\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\r\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\r\n        unlazy(swiper, i);\r\n      }\r\n    }\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}