{"ast":null,"code":"// PC - 휠이벤트 + 메인배너이동\n\nimport { qs, qsa } from \"./eventFn.js\";\nimport $ from \"jquery\";\n\n/****************************************** \r\n    함수명: handleWheel\r\n    기능: 휠 이동시 슬라이드 위치 변경\r\n******************************************/\nlet prot = 0;\n// delta값이 음수인 경우 방향 셋팅\nconst valset1 = [\"0%\", \"15%\", \"0%\", \"-10%\", \"-15%\", \"-25%\", \"-35%\"];\n// delta값이 양수인 경우 방향 셋팅\nconst valset2 = [\"0%\", \"-25%\", \"5%\", \"-25%\", \"-50%\", \"-50%\", \"-50%\"];\nfunction handleWheel(e) {\n  // 광휠금지\n  if (prot) return;\n  prot = 1;\n  setTimeout(() => {\n    prot = 0;\n  }, 1000);\n\n  // 슬라이드 겉박스\n  const moveSl = qs(\".album_wrap\");\n\n  // 대상 슬라이드 li\n  const tgsl = qsa(\".album_set\");\n\n  // 휠 방향 체크\n  let delta = -e.wheelDelta / 10;\n  console.log(delta);\n  const currentTop = moveSl.getBoundingClientRect().top;\n  // console.log(currentTop)\n\n  // delta값이 음수인 경우 (위로 휠-> 위로 이동)\n  if (delta < 0) {\n    console.log(\"위로휠!:\", delta);\n    // ele.style.top = currentTop + delta + \"px\";\n    let fe = document.querySelectorAll(\".album_wrap li\")[0];\n    moveSl.insertBefore(tgsl[6], fe);\n    console.log(fe);\n    moveSl.style.top = \"-360px\";\n    moveSl.style.transition = \"none\";\n    setTimeout(() => {\n      moveSl.style.transition = \"1s ease-in-out\";\n      moveSl.style.top = \"3vh\";\n    }, 10);\n  }\n  // delta값이 양수인 경우 (아래로 휠-> 아래로 이동)\n  else if (delta > 0) {\n    console.log(\"아래로휠!:\", delta);\n    moveSl.style.top = \"-360px\";\n    moveSl.style.transition = \"1s ease-out\";\n    setTimeout(() => {\n      // ele.style.top = currentTop + delta + \"px\";\n      let fe = document.querySelectorAll(\".album_wrap li\")[0];\n      console.log(fe);\n      moveSl.appendChild(fe);\n      moveSl.style.transition = \"none\";\n      moveSl.style.top = \"3vh\";\n    }, 1000);\n  }\n\n  // data-seq 라는 사용자정의 속성 넣기\n  document.querySelectorAll(\".album_wrap li\").forEach((ele, idx) => {\n    ele.style.transform = `translateX(${delta < 0 ? valset1[idx] : valset2[idx]})`;\n  }); // forEach //\n}\n\ndocument.querySelectorAll(\".album_wrap li\").forEach((ele, idx) => ele.setAttribute(\"data-seq\", idx));\n\n/****************************************** \r\n    함수명: handleHover\r\n    기능: 마우스 오버시 CD 회전하면서 옆으로 나옴\r\n******************************************/\nfunction handleHover() {\n  // 대상에 호버했을때 함수호출!\n  const hovertg = qsa(\".album_set\");\n  hovertg.forEach(ele => {\n    // 호버했을때 cd 회전하면서 튀어나옴\n    const tg = ele.lastElementChild;\n    ele.onmouseover = () => {\n      tg.style.transition = \"transform 7s\";\n      tg.style.transform = \"translateX(83%) rotate(720deg)\";\n    };\n    ele.onmouseleave = () => {\n      tg.style.transition = \"transform 7s\";\n      tg.style.transform = \"translateX(73%) rotate(0deg)\";\n    };\n  });\n}\n\n/****************************************** \r\n    함수명: handleToggle\r\n    기능: 원형 네비 메뉴 클릭시 GNB 등장\r\n******************************************/\nfunction handleToggle() {\n  const nav = $(\".circular_nav\");\n  const toggleBtn = nav.find($(\".toggle_btn\"));\n  nav.classList.toggle(\"active\");\n  toggleBtn.classList.toggle(\"active\");\n}\n\n/****************************************** \r\n    함수명: player\r\n    기능: \r\n    (1) 슬라이드li 2번째 요소에 맞춰 플레이어 음원/커버 변경\r\n    (2) 오디오 볼륨조절\r\n    (3) 음원 현재 재생시간/ 총 재생시간 업데이트\r\n    (4) 플레이버튼 토글하여 음원 재생/멈춤\r\n******************************************/\n// function player() {\n//   const audio = $(\"#music\")[0];\n//   const paused_btn = $(\".play_song_btn\");\n//   const play_btn = $(\".play_song_btn\");\n//   const elapsed = $(\"#elapsed\");\n//   const total = $(\"#total_timer\");\n//   const current = $(\"#progress_timer\");\n//   const volumeBar = $(\"#volume\");\n\n//   // 오디오 재생/멈춤버튼 토글\n//   paused_btn.click(function () {\n//     paused_btn.toggleClass(\"active\");\n//     /* active 클래스 가지고있으면 이미지 변경! */\n//     if (paused_btn.hasClass(\"active\")) {\n//       paused_btn.find(\"img\").attr(\"src\", \"../00.data/02.imgData/player/bx-pause.svg\");\n//     } else {\n//       paused_btn.find(\"img\").attr(\"src\", \"../00.data/02.imgData/player/bx-play-circle.svg\");\n//     }\n//   });\n\n//   // 오디오의 재생 시간이 업데이트될 때마다 함수 호출!\n//   audio.addEventListener(\"timeupdate\", function () { // timeupdate - 오디오 또는 비디오의 재생 시간이 변경될 때마다 발생하는 이벤트\n//     // 오디오의 재생 시간과 전체 재생 시간 가져오기\n//     const currentTime = audio.currentTime;\n//     const duration = audio.duration; // 오디오 총 길이\n//     // 음원 총 길이 구해서 시간 업데이트\n//     const minutes = Math.floor(duration / 60);\n//     const seconds = Math.floor(duration % 60);\n//     const totalTime = minutes.toString().padStart(2,\"0\") + \":\" + seconds.toString().padStart(2,\"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\n//     total.text(totalTime);\n\n//     // 음원 재생시간 구해서 시간 업데이트\n//     const minutes2 = Math.floor(currentTime / 60);\n//     const seconds2 = Math.floor(currentTime % 60);\n//     const currentTime2 = minutes2.toString().padStart(2,\"0\") + \":\" + seconds2.toString().padStart(2,\"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\n//     current.text(currentTime2);\n\n//     // 프로그레스 바의 너비 계산\n//     const progress = (currentTime / duration) * 100 + \"%\";\n//     // console.log(\"프로그레스바너비:\",progress)\n\n//     // 프로그레스 바 업데이트\n//     elapsed.css(\"width\", progress);\n//   });\n\n//   play_btn.click(function () {\n//     if (audio.paused) {\n//       // 재생버튼 클릭시 음원 재생\n//       audio.play();\n//     } else {\n//       audio.pause();\n//     }\n//   });\n\n//   // 오디오 볼륨 조절\n//   volumeBar.on(\"input\", function() { // 볼륨 조절바를 조작할때 이벤트 발생!\n//     const volumeVal = $(this).val(); // 오디오 요소 - 현재 볼륨값을 값으로 가져옴\n//     audio.volume = volumeVal;\n//   })\n// }\n\nwindow.addEventListener(\"wheel\", handleWheel);\nexport { handleHover, handleToggle, handleWheel };","map":{"version":3,"names":["qs","qsa","$","prot","valset1","valset2","handleWheel","e","setTimeout","moveSl","tgsl","delta","wheelDelta","console","log","currentTop","getBoundingClientRect","top","fe","document","querySelectorAll","insertBefore","style","transition","appendChild","forEach","ele","idx","transform","setAttribute","handleHover","hovertg","tg","lastElementChild","onmouseover","onmouseleave","handleToggle","nav","toggleBtn","find","classList","toggle","window","addEventListener"],"sources":["c:/Users/지수진/Desktop/지수진/NEW_ZISUZIN_2023/03.SPA/03.sources/girls-pj/src/js/commonFn.js"],"sourcesContent":["// PC - 휠이벤트 + 메인배너이동\r\n\r\nimport { qs, qsa } from \"./eventFn.js\";\r\nimport $ from \"jquery\";\r\n\r\n/****************************************** \r\n    함수명: handleWheel\r\n    기능: 휠 이동시 슬라이드 위치 변경\r\n******************************************/\r\nlet prot = 0;\r\n// delta값이 음수인 경우 방향 셋팅\r\nconst valset1 = [\"0%\",\"15%\",\"0%\",\"-10%\",\"-15%\",\"-25%\",\"-35%\"];\r\n// delta값이 양수인 경우 방향 셋팅\r\nconst valset2 = [\"0%\",\"-25%\",\"5%\",\"-25%\",\"-50%\",\"-50%\",\"-50%\"];\r\nfunction handleWheel(e) {\r\n  // 광휠금지\r\n  if (prot) return;\r\n  prot = 1;\r\n  setTimeout(() => {\r\n    prot = 0;\r\n  }, 1000);\r\n\r\n  // 슬라이드 겉박스\r\n  const moveSl = qs(\".album_wrap\");\r\n\r\n  // 대상 슬라이드 li\r\n  const tgsl = qsa(\".album_set\");\r\n\r\n  // 휠 방향 체크\r\n  let delta = -e.wheelDelta / 10;\r\n  console.log(delta)\r\n  const currentTop = moveSl.getBoundingClientRect().top;\r\n  // console.log(currentTop)\r\n\r\n  // delta값이 음수인 경우 (위로 휠-> 위로 이동)\r\n    if (delta < 0) {\r\n      console.log(\"위로휠!:\",delta)\r\n      // ele.style.top = currentTop + delta + \"px\";\r\n        let fe = document.querySelectorAll(\".album_wrap li\")[0];\r\n      moveSl.insertBefore(tgsl[6], fe);\r\n      console.log(fe);\r\n      moveSl.style.top = \"-360px\";\r\n      moveSl.style.transition = \"none\";\r\n      setTimeout(()=>{\r\n        moveSl.style.transition = \"1s ease-in-out\";\r\n        moveSl.style.top = \"3vh\";\r\n      },10);\r\n    }\r\n    // delta값이 양수인 경우 (아래로 휠-> 아래로 이동)\r\n    else if (delta > 0) {\r\n      console.log(\"아래로휠!:\",delta)\r\n      moveSl.style.top = \"-360px\";\r\n      moveSl.style.transition = \"1s ease-out\";\r\n      setTimeout(()=>{\r\n        // ele.style.top = currentTop + delta + \"px\";\r\n        let fe = document.querySelectorAll(\".album_wrap li\")[0];\r\n        console.log(fe);\r\n        moveSl.appendChild(fe);\r\n        moveSl.style.transition = \"none\";\r\n        moveSl.style.top = \"3vh\";\r\n      },1000)\r\n    }\r\n\r\n    // data-seq 라는 사용자정의 속성 넣기\r\n    document.querySelectorAll(\".album_wrap li\").forEach((ele, idx) => {\r\n    ele.style.transform = `translateX(${delta<0?valset1[idx]:valset2[idx]})`;\r\n  }); // forEach //\r\n}\r\n\r\ndocument.querySelectorAll(\".album_wrap li\").forEach((ele,idx)=>ele.setAttribute(\"data-seq\", idx));\r\n\r\n/****************************************** \r\n    함수명: handleHover\r\n    기능: 마우스 오버시 CD 회전하면서 옆으로 나옴\r\n******************************************/\r\nfunction handleHover() {\r\n  // 대상에 호버했을때 함수호출!\r\n  const hovertg = qsa(\".album_set\");\r\n  hovertg.forEach((ele) => {\r\n    // 호버했을때 cd 회전하면서 튀어나옴\r\n    const tg = ele.lastElementChild;\r\n    ele.onmouseover = () => {\r\n      tg.style.transition = \"transform 7s\";\r\n      tg.style.transform = \"translateX(83%) rotate(720deg)\";\r\n    };\r\n\r\n    ele.onmouseleave = () => {\r\n      tg.style.transition = \"transform 7s\";\r\n      tg.style.transform = \"translateX(73%) rotate(0deg)\";\r\n    };\r\n  });\r\n}\r\n\r\n/****************************************** \r\n    함수명: handleToggle\r\n    기능: 원형 네비 메뉴 클릭시 GNB 등장\r\n******************************************/\r\nfunction handleToggle() {\r\n  const nav = $(\".circular_nav\");\r\n  const toggleBtn = nav.find($(\".toggle_btn\"));\r\n\r\n  nav.classList.toggle(\"active\");\r\n  toggleBtn.classList.toggle(\"active\");\r\n}\r\n\r\n/****************************************** \r\n    함수명: player\r\n    기능: \r\n    (1) 슬라이드li 2번째 요소에 맞춰 플레이어 음원/커버 변경\r\n    (2) 오디오 볼륨조절\r\n    (3) 음원 현재 재생시간/ 총 재생시간 업데이트\r\n    (4) 플레이버튼 토글하여 음원 재생/멈춤\r\n******************************************/\r\n// function player() {\r\n//   const audio = $(\"#music\")[0];\r\n//   const paused_btn = $(\".play_song_btn\");\r\n//   const play_btn = $(\".play_song_btn\");\r\n//   const elapsed = $(\"#elapsed\");\r\n//   const total = $(\"#total_timer\");\r\n//   const current = $(\"#progress_timer\");\r\n//   const volumeBar = $(\"#volume\");\r\n\r\n//   // 오디오 재생/멈춤버튼 토글\r\n//   paused_btn.click(function () {\r\n//     paused_btn.toggleClass(\"active\");\r\n//     /* active 클래스 가지고있으면 이미지 변경! */\r\n//     if (paused_btn.hasClass(\"active\")) {\r\n//       paused_btn.find(\"img\").attr(\"src\", \"../00.data/02.imgData/player/bx-pause.svg\");\r\n//     } else {\r\n//       paused_btn.find(\"img\").attr(\"src\", \"../00.data/02.imgData/player/bx-play-circle.svg\");\r\n//     }\r\n//   });\r\n\r\n//   // 오디오의 재생 시간이 업데이트될 때마다 함수 호출!\r\n//   audio.addEventListener(\"timeupdate\", function () { // timeupdate - 오디오 또는 비디오의 재생 시간이 변경될 때마다 발생하는 이벤트\r\n//     // 오디오의 재생 시간과 전체 재생 시간 가져오기\r\n//     const currentTime = audio.currentTime;\r\n//     const duration = audio.duration; // 오디오 총 길이\r\n//     // 음원 총 길이 구해서 시간 업데이트\r\n//     const minutes = Math.floor(duration / 60);\r\n//     const seconds = Math.floor(duration % 60);\r\n//     const totalTime = minutes.toString().padStart(2,\"0\") + \":\" + seconds.toString().padStart(2,\"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\r\n//     total.text(totalTime);\r\n\r\n//     // 음원 재생시간 구해서 시간 업데이트\r\n//     const minutes2 = Math.floor(currentTime / 60);\r\n//     const seconds2 = Math.floor(currentTime % 60);\r\n//     const currentTime2 = minutes2.toString().padStart(2,\"0\") + \":\" + seconds2.toString().padStart(2,\"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\r\n//     current.text(currentTime2);\r\n    \r\n//     // 프로그레스 바의 너비 계산\r\n//     const progress = (currentTime / duration) * 100 + \"%\";\r\n//     // console.log(\"프로그레스바너비:\",progress)\r\n\r\n//     // 프로그레스 바 업데이트\r\n//     elapsed.css(\"width\", progress);\r\n//   });\r\n\r\n//   play_btn.click(function () {\r\n//     if (audio.paused) {\r\n//       // 재생버튼 클릭시 음원 재생\r\n//       audio.play();\r\n//     } else {\r\n//       audio.pause();\r\n//     }\r\n//   });\r\n\r\n//   // 오디오 볼륨 조절\r\n//   volumeBar.on(\"input\", function() { // 볼륨 조절바를 조작할때 이벤트 발생!\r\n//     const volumeVal = $(this).val(); // 오디오 요소 - 현재 볼륨값을 값으로 가져옴\r\n//     audio.volume = volumeVal;\r\n//   })\r\n// }\r\n\r\n\r\nwindow.addEventListener(\"wheel\", handleWheel);\r\n\r\nexport { handleHover, handleToggle, handleWheel };"],"mappings":"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EDF,GAAG,CAACS,YAAY,GAAG,MAAM;MACvBH,EAAE,CAACV,KAAK,CAACC,UAAU,GAAG,cAAc;MACpCS,EAAE,CAACV,KAAK,CAACM,SAAS,GAAG,8BAA8B;IACrD,CAAC;EACH,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA,SAASQ,YAAYA,CAAA,EAAG;EACtB,MAAMC,GAAG,GAAGnC,CAAC,CAAC,eAAe,CAAC;EAC9B,MAAMoC,SAAS,GAAGD,GAAG,CAACE,IAAI,CAACrC,CAAC,CAAC,aAAa,CAAC,CAAC;EAE5CmC,GAAG,CAACG,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;EAC9BH,SAAS,CAACE,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGAC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAErC,WAAW,CAAC;AAE7C,SAASwB,WAAW,EAAEM,YAAY,EAAE9B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}