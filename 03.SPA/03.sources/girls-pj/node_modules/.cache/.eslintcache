[{"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\index.js":"1","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Video.js":"2","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Gallery.js":"3","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Album.js":"4","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Layout.js":"5","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Profile.js":"6","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Main.js":"7","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\AlbumDetail.js":"8","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\Ban.js":"9","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\Circle.js":"10","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\Player.js":"11","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\js\\commonFn.js":"12","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\data\\ban.js":"13","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\js\\eventFn.js":"14"},{"size":1324,"mtime":1688096307598,"results":"15","hashOfConfig":"16"},{"size":259,"mtime":1687931967193,"results":"17","hashOfConfig":"16"},{"size":230,"mtime":1687329662999,"results":"18","hashOfConfig":"16"},{"size":226,"mtime":1687329662999,"results":"19","hashOfConfig":"16"},{"size":1620,"mtime":1687329663000,"results":"20","hashOfConfig":"16"},{"size":247,"mtime":1687499013671,"results":"21","hashOfConfig":"16"},{"size":1481,"mtime":1688089405373,"results":"22","hashOfConfig":"16"},{"size":3238,"mtime":1688089405373,"results":"23","hashOfConfig":"16"},{"size":25522,"mtime":1688089405373,"results":"24","hashOfConfig":"16"},{"size":303,"mtime":1688023748166,"results":"25","hashOfConfig":"16"},{"size":9213,"mtime":1688093368376,"results":"26","hashOfConfig":"16"},{"size":7404,"mtime":1688096042710,"results":"27","hashOfConfig":"16"},{"size":14225,"mtime":1687944215082,"results":"28","hashOfConfig":"16"},{"size":506,"mtime":1687329663002,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"quqnz1",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\index.js",[],[],"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Video.js",["83"],[],"// 갤러리 페이지 컴포넌트\r\nimport React from \"react\";\r\nimport { Video_Ban } from \"./components/Ban\";\r\nimport \"./scss/media.css\"\r\n\r\nconst video = () => {\r\n    return (\r\n        <Video_Ban cat=\"video\"/>\r\n    )\r\n}; // video // \r\n\r\nexport default video;","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Gallery.js",["84"],[],"// 갤러리 페이지 컴포넌트\r\nimport React from \"react\";\r\nimport { Gallery_Ban } from \"./components/Ban\";\r\n\r\nconst Gallery = () => {\r\n    return (\r\n        <Gallery_Ban/>\r\n    )\r\n}; // Gallery // \r\n\r\nexport default Gallery;","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Album.js",["85"],[],"// 앨범 페이지 컴포넌트\r\nimport React from \"react\";\r\nimport {Album_Ban} from \"./components/Ban\";\r\n\r\nconst Album = () => {\r\n    return (\r\n        <Album_Ban cat=\"main\"/>\r\n    )\r\n}; // Album // \r\n\r\nexport default Album;","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Layout.js",[],[],"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Profile.js",["86"],[],"// 갤러리 페이지 컴포넌트\r\nimport React from \"react\";\r\nimport {Profile_Ban} from \"./components/Ban\";\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <Profile_Ban cat=\"profile\"/>     \r\n    )\r\n}; // Profile // \r\n\r\nexport default Profile;","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Main.js",["87"],[],"// 메인 페이지 컴포넌트\r\nimport { useEffect } from \"react\";\r\nimport { Main_Ban } from \"./components/Ban\";\r\nimport Circle from \"./components/Circle\";\r\nimport Player from \"./components/Player\";\r\nimport { handleWheel } from \"./js/commonFn\";\r\nimport $ from \"jquery\";\r\n\r\nconst Main = () => {\r\n  \r\n  const popUpEle = () => {\r\n    // .album_set 클릭시 너비값 커지면서 화면 전환시킬 대상요소\r\n    const chg_page_ele = $(\".circle\");\r\n    $(\".album_set\").click(function () {\r\n        $(chg_page_ele).toggleClass(\"on\");\r\n        $(chg_page_ele).css(\"opacity\",\"1\");\r\n        const albumId = $(this).attr(\"data-num\")\r\n        setTimeout(()=>{\r\n            window.location.href = `http://localhost:3000/album/${albumId}`\r\n        },300)\r\n    });\r\n};\r\n\r\n  useEffect(()=>{\r\n    // .banbx 요소를 포함하고 있는 모듈에만 body를 hidden 처리!\r\n    const banEle = document.querySelector(\".banbx\");\r\n    \r\n    if(banEle) {\r\n        document.body.style.overflowY = \"hidden\";\r\n        window.addEventListener(\"mousewheel\", handleWheel);\r\n        popUpEle()\r\n    }\r\n    return () => {\r\n      document.body.style.overflowY = \"auto\";\r\n      window.removeEventListener(\"mousewheel\", handleWheel);\r\n    };\r\n    \r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      {/* 1. 배너모듈 */}\r\n      <Main_Ban cat=\"main\" />\r\n      {/* 2. 플레이어모듈 */}\r\n      <Player cat=\"main\"/>\r\n      {/* 3. 커지는 원 */}\r\n      <Circle />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\AlbumDetail.js",["88","89","90"],[],"import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport ban_data from \"../data/ban\";\r\n\r\nfunction AlbumDetail() {\r\n  // 반환된 객체에서 각각의 id 속성을 추출!\r\n  const { id } = useParams();\r\n\r\n  // 각각의 id순번 데이터에 접근하기 위한 변수\r\n  const eachAlbum = ban_data.main[id];\r\n\r\n  return (\r\n    <>\r\n      <main id=\"albumlist_bx\" style={{ background: eachAlbum.bgcolor }}>\r\n        <section className=\"albumlist_wrap\">\r\n          {/* 1. 좌측 컨텐츠 */}\r\n          <div className=\"contents_left\">\r\n            {/* 1-1. 뒤로가기 버튼 */}\r\n            <div className=\"back_btn\">\r\n              <Link to=\"/al\">\r\n                <span style={{ color: eachAlbum.txcolor.indexOf(\"^\") !== -1 ? eachAlbum.txcolor.split(\"^\")[1] : eachAlbum.txcolor }}>＜BACK</span>\r\n              </Link>\r\n            </div>\r\n            {/* 1-2. 앨범 커버 이미지 */}\r\n            <div className=\"album_cover\">\r\n              <img src={\".\" + eachAlbum.isrc} alt={\"여자아이들의 \" + eachAlbum.mtit + \" 앨범\"} />\r\n            </div>\r\n            {/* 1-3. 앨범 발매일 */}\r\n            <div className=\"release_date\">\r\n              <p style={{ color: eachAlbum.txcolor.indexOf(\"^\") !== -1 ? eachAlbum.txcolor.split(\"^\")[1] : eachAlbum.txcolor }}>Release Date</p>\r\n              <p style={{ color: eachAlbum.txcolor.indexOf(\"^\") !== -1 ? eachAlbum.txcolor.split(\"^\")[1] : eachAlbum.txcolor }}>{eachAlbum.release}</p>\r\n            </div>\r\n          </div>\r\n          {/* 2. 우측 컨텐츠 */}\r\n          <div className=\"contents_right\">\r\n            {/* 2-1.앨범 타이틀 */}\r\n            <div className=\"album_tit\">\r\n              {/* txcolor 문자열에 ^가 없다면 그냥 txcolor 색상 출력 */}\r\n              <p style={{ color: eachAlbum.txcolor.indexOf(\"^\") == -1 ? eachAlbum.txcolor : eachAlbum.txcolor.split(\"^\")[0] }}>{eachAlbum.mtit.replace(/-/g, \"\")}</p>\r\n            </div>\r\n            <div className=\"album_info\">\r\n              {/* txcolor 문자열에 ^가 있다면 txcolor.split('^')[1] 색상 출력 */}\r\n              <p style={{ color: eachAlbum.txcolor.indexOf(\"^\") !== -1 ? eachAlbum.txcolor.split(\"^\")[1] : eachAlbum.txcolor }}>\r\n                {eachAlbum.info.split(\"^\").map((segment, index) => (\r\n                  <React.Fragment key={index}>\r\n                    {segment}\r\n                    <br />\r\n                  </React.Fragment>\r\n                ))}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"track-list\">\r\n          <h2 className=\"contents-title\" style={{ color: eachAlbum.txcolor.indexOf(\"^\") == -1 ? eachAlbum.txcolor : eachAlbum.txcolor.split(\"^\")[0] }}>\r\n            TRACK\r\n          </h2>\r\n          <div className=\"list-wrap\">\r\n            <ol>\r\n              {eachAlbum.track.map((x, i) => (\r\n                <li key={i}>\r\n                  <span style={{ color: eachAlbum.txcolor.indexOf(\"^\") !== -1 ? eachAlbum.txcolor.split(\"^\")[1] : eachAlbum.txcolor }}>{i + 1 + \".\" + \" \" + x}</span>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AlbumDetail;\r\n","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\Ban.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],[],"// 배너 컴포넌트 - Ban.js\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// 애니메이션 라이브러리\r\nimport gsap from \"gsap\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n// 제이쿼리\r\nimport $ from \"jquery\";\r\n\r\n// 폰트어썸 임포트\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// 배너 CSS\r\nimport \"../scss/ban.css\";\r\n// // 미디어쿼리CSS\r\n// import \"../scss/media.css\";\r\n\r\n// 배너 데이터\r\nimport ban_data from \"../data/ban\";\r\nimport { jqFn } from \"../js/commonFn\";\r\n\r\n// 메인배너 출력용 컴포넌트\r\nfunction Main_Ban(props) {\r\n  const sel_data = ban_data[props.cat];\r\n\r\n  useEffect(jqFn, []);\r\n\r\n  return (\r\n    <div id=\"cont_wrap\">\r\n      <section className=\"banbx\">\r\n        <div className=\"banbxInner\">\r\n          <div className=\"bancont\">\r\n            <ul className=\"album_wrap\">\r\n              {sel_data.map((x, i) => (\r\n                <li className={\"album_set album_set\" + (i + 1)} key={i} data-num={i}>\r\n                  <div id=\"chk_page_move_btn_wrap\"></div>\r\n                  <article className={\"album_cover\" + (i + 1) + \" album_cover\"}>\r\n                    <div className=\"album_cover_inner\">\r\n                      <div>\r\n                        <div className=\"original_author\">\r\n                          <span>{x.altop_txt.split(\"^\")[0]}</span>\r\n                          <span>/</span>\r\n                          <span>{x.altop_txt.split(\"^\")[1]}</span>\r\n                        </div>\r\n                        <em>{x.mtit}</em>\r\n                      </div>\r\n                      <div className=\"release_date\">\r\n                        <div className=\"date\">\r\n                          <span>{x.albot_txt.split(\"^\")[0]}</span>\r\n                          <span>{x.albot_txt.split(\"^\")[1]}</span>\r\n                        </div>\r\n                        <div className=\"singer\">(G)I-DLe</div>\r\n                      </div>\r\n                    </div>\r\n                    <aside className=\"album_cd1\">\r\n                      <img src={x.isrc} alt=\"앨범이미지1\" />\r\n                      <div className=\"cd_center_circle\"></div>\r\n                    </aside>\r\n                  </article>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        {jqFn()}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 프로필배너 출력용 컴포넌트\r\nfunction Profile_Ban(props) {\r\n  const sel_data = ban_data[props.cat];\r\n\r\n  const loadFn = () => {\r\n    $(() => {\r\n      // 멤버 프로필 리스트 클릭시 큰이미지박스 보이기\r\n      const tgImg = $(\".profile_img > li\");\r\n      tgImg.click(function () {\r\n        // 1. 클릭된 이미지 경로 읽어오기\r\n        let isrc = $(this).find(\"img\").attr(\"src\");\r\n\r\n        // 2. 클릭된 이미지 경로를 큰 이미지에 src로 넣기\r\n        $(\".gimg > img\").attr(\"src\", isrc);\r\n\r\n        // 3. 큰이미지박스 보이기\r\n        $(\"#imbx\").css({ display: \"block\" });\r\n      });\r\n\r\n      // 4. 닫기버튼 클릭시 큰이미지박스 숨기기\r\n      $(\".close_btn\").click(function () {\r\n        $(\"#imbx\").css({ display: \"none\" });\r\n      });\r\n    });\r\n  }; /////////// setFn //////////////////\r\n\r\n  // site svg 애니메이션\r\n  const textWave = () => {\r\n    const textPath = document.querySelector(\"#text-path\");\r\n    if (!textPath) return;\r\n    const textContainer = document.querySelector(\"#text-container\");\r\n    let path = document.querySelector(textPath.getAttribute(\"href\"));\r\n    let pathLength = path.getTotalLength();\r\n\r\n    function updateTextPathOffset(offset) {\r\n      textPath.setAttribute(\"startOffset\", offset);\r\n    }\r\n\r\n    updateTextPathOffset(pathLength);\r\n\r\n    function onScroll() {\r\n      requestAnimationFrame(function () {\r\n        let rect = textContainer.getBoundingClientRect();\r\n        let scrollPercent = rect.y / window.innerHeight;\r\n        updateTextPathOffset(scrollPercent * 2 * pathLength);\r\n      });\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    $(window).scroll(function () {\r\n      if (!document.querySelector(\"#text-container\")) return;\r\n      let scroll = $(window).scrollTop();\r\n      const sec_start1 = $(\"#text-container\").offset().top;\r\n      const siteListTitle = $(\"#text-curve\");\r\n\r\n      if (scroll > sec_start1 && siteListTitle.length > 0) {\r\n        gsap.to(siteListTitle, { duration: 0.8, opacity: 1, y: 3, delay: 1.1 });\r\n      }\r\n    });\r\n  };\r\n\r\n  function setFn() {\r\n    setTimeout(textWave, 1000);\r\n    loadFn();\r\n  }\r\n\r\n  // setTimeout 썼을때 페이지하단 카운트되는것 방지!\r\n  useEffect(setFn, []);\r\n\r\n  return (\r\n    <>\r\n      {sel_data.map((x, i) => (\r\n        <main key={i} id=\"kv_wrap\">\r\n          {/* 1. 전체멤버 프로필 */}\r\n          <section className=\"kv\">\r\n            <div>\r\n              <img src={x.isrc} alt=\"여자아이들 이미지\" />\r\n            </div>\r\n          </section>\r\n\r\n          <div className=\"intro_profile\">\r\n            {/* 2. 그룹 소개 */}\r\n            <section className=\"group_intro\">\r\n              <h2 className=\"conttents_tit\">{x.mtit}</h2>\r\n              <p className=\"contents-desc\">{x.stit}</p>\r\n            </section>\r\n\r\n            {/* 스크롤시 등장하는 웨이브 텍스트 */}\r\n            <svg id=\"text-container\" viewBox=\"0 0 1000 200\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path id=\"text-curve\" d=\"M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0\" fill=\"none\"></path>\r\n\r\n              <text y=\"40\">\r\n                <textPath id=\"text-path\" href=\"#text-curve\" startOffset=\"442.8510130819152\">\r\n                  멤버들에 대해 궁금하신가요?\r\n                </textPath>\r\n              </text>\r\n            </svg>\r\n\r\n            {/* 3. 개별멤버 프로필 */}\r\n            <section className=\"members_intro\">\r\n              <div className=\"members_inner\">\r\n                <div className=\"intro_title\">\r\n                  <h2>MEMBER</h2>\r\n                </div>\r\n                <ul className=\"profile_img\">\r\n                  {x.sub.map((v, n) => (\r\n                    <li key={n}>\r\n                      <div>\r\n                        <img src={v.img} alt={v.name + \"의 프로필\"} />\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n\r\n                {/* 4. 큰이미지 박스 */}\r\n                <section id=\"imbx\">\r\n                  {x.sub.map((item, i) => (\r\n                    <div className=\"imgbx\" key={i}>\r\n                      {/* 큰 이미지 */}\r\n                      <div className=\"gimg\">\r\n                        <img src=\"\" alt=\"큰이미지\" />\r\n                      </div>\r\n                      <div>\r\n                        <button type=\"button\" className=\"close_btn\" title=\"팝업 닫기\"></button>\r\n                        <dl className=\"gimgDetail\">\r\n                          <dt>{item.name}</dt>\r\n                          <dd>{item.birth}</dd>\r\n                        </dl>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </section>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </main>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\n// 비디오배너 출력용 컴포넌트\r\nfunction Video_Ban(props) {\r\n  // 데이터 셋팅\r\n  const vdata = ban_data[props.cat];\r\n\r\n  useEffect(() => {\r\n    // 컴포넌트가 마운트 될 때 #gridRadio 클릭\r\n    const gridbtn = document.querySelector(\"#gridRadio\");\r\n    if (gridbtn) {\r\n      gridbtn.click();\r\n    }\r\n  }, []);\r\n\r\n  // 비디오 보이기 함수\r\n  const showVid = (src, tit) => {\r\n    let ifr = $(\".vid_ifr_inner iframe\");\r\n    const ifrbx = $(\".ifr_bg_bx\");\r\n    // 1. 아이프레임 src넣기\r\n    ifr.attr(\"src\", src + \"?autoplay=1\");\r\n    // 2. 아이프레임 title넣기\r\n    ifr.attr(\"title\", tit);\r\n    ifrbx.css(\"display\", \"block\");\r\n\r\n    // 닫기버튼 클릭시 동영상박스 없앰\r\n    $(\".vid_close_btn\").click(function () {\r\n      $(\".ifr_bg_bx\").css({ display: \"none\" });\r\n    });\r\n  }; // Showvid //\r\n\r\n  // 데이터 선택하기 : Hook 데이터 구성\r\n  // -> 데이터 정렬을 반영하기 위해 정렬상태값을 같이 설정함!\r\n  // 데이터구성 : [배열데이터,정렬상태값]\r\n  // 정렬상태값 : 1 - 오름차순, 2 - 내림차순, 3 - 정렬전\r\n  let [mvd, setMvd] = useState([vdata, 3]);\r\n\r\n  // 데이터 건수 : Hook 데이터 구성\r\n  let [tot, setTot] = useState(vdata.length);\r\n\r\n  // 자동완성 상태변수\r\n  const [autocomplete, setAutocomplete] = useState([]);\r\n  const [gwd, setGwd] = useState(\"31%\");\r\n\r\n  // 사용자입력값 상태변수\r\n  const [resultTit, setResultTit] = useState(null);\r\n\r\n  // 비디오리스트 타이틀 출력 상태변수\r\n  const [vidTit, setVidTit] = useState(<h3 className=\"mv_item_tit\">Video Clip</h3>);\r\n\r\n  // 데이터 검색 출력 함수\r\n  const schList = () => {\r\n    // 검색요소 대상 : #searchInput\r\n    let input = document.querySelector(\"#searchInput\");\r\n\r\n    // 1. 검색어 읽기 - 소문자로 변환\r\n    let keyword = input.value.toLowerCase();\r\n\r\n    // 2. 검색어 입력확인분기\r\n    if (keyword.trim() === \"\") {\r\n      // 입력창으로 다시보내기\r\n      input.focus();\r\n      // 기존 정렬상태로 돌아가기\r\n      setMvd([vdata, mvd[3]]);\r\n      // 검색건수 초기화\r\n      setTot(vdata.length);\r\n      return;\r\n    }\r\n\r\n    // 3. 데이터 검색하기\r\n    // 배열값 다중검색 메서드 -> filter()\r\n    let searchList = vdata.filter((v) => {\r\n      if (v.txt.toLowerCase().indexOf(keyword) !== -1) return true;\r\n    });\r\n\r\n    // 4. 검색결과 리스트 업데이트하기\r\n    // 검색결과 리스트 업데이트\r\n    setMvd([searchList, 3]);\r\n  }; // schList 함수\r\n\r\n  // 검색어 자동완성 함수\r\n  const searchAuto = (e) => {\r\n    let userInp = document.querySelector(\"#searchInput\").value;\r\n    // 입력창에서 텍스트 입력시 자동완성 데이터 업데이트\r\n    // 검색어 입력시 관련 값이 있을 경우만 css 적용!\r\n    console.log(\"텍스트입력\");\r\n    $(\".panels\").css({ display: \"block\" });\r\n\r\n    // 입력한 검색어와 관련된 데이터가 있을 경우에만 값을 출력\r\n    let searchList = vdata.filter((v) => {\r\n      if (v.txt.toLowerCase().indexOf(userInp) !== -1) return true;\r\n    });\r\n\r\n    // 검색어가 비었을때 자동완성 데이터 초기화\r\n    if (userInp.trim() === \"\" || searchList.length == 0) {\r\n      setAutocomplete([]);\r\n      $(\".panels\").css({ display: \"none\" });\r\n      return;\r\n    }\r\n    setAutocomplete(searchList.map((item) => item.txt));\r\n  }; // searchAuto 함수\r\n\r\n  // 입력창에서 엔터키 누르면 검색함수 호출!\r\n  const enterKy = (e) => {\r\n    // 엔터쳤을때 데이터 업데이트!\r\n    if (e.key === \"Enter\") {\r\n      schList();\r\n      const userInp = e.target.value.toLowerCase();\r\n      const completeList = vdata.filter((item) => {\r\n        if (item.txt.toLowerCase().indexOf(userInp) !== -1) return true;\r\n      });\r\n\r\n      // 검색결과 타이틀 출력 - 입력값이 있고, 데이터가 있는 경우에만!\r\n      if (userInp.trim() !== \"\" && completeList.length !== 0) {\r\n        setResultTit(\r\n          <>\r\n            <strong className=\"inputVal\">{userInp}</strong>\r\n            <span>검색결과 ({completeList.length})</span>\r\n          </>\r\n        );\r\n\r\n        setVidTit(<h3 className=\"mv_item_tit\">Video Clip</h3>);\r\n\r\n        $(\".sortbx\").css({ display: \"block\" });\r\n        // 검색 데이터가 하나만 있는 경우\r\n        if (completeList.length === 1) {\r\n          $(\".sortbx\").css({ display: \"none\" });\r\n        }\r\n      }\r\n      // 검색결과 없는 경우\r\n      else if (completeList.length == 0) {\r\n        setResultTit(\"검색 결과가 없습니다\");\r\n        $(\".sortbx\").css({ display: \"none\" });\r\n        setVidTit(null);\r\n      }\r\n      // 초기화면 구성 - 위 두 조건을 만족하지 않으면 null값 반환\r\n      else {\r\n        setResultTit(null);\r\n        setVidTit(<h3 className=\"mv_item_tit\">Video Clip</h3>);\r\n        $(\".sortbx\").css({ display: \"block\" });\r\n      }\r\n      // 검색박스 가로크기\r\n      let cid = $(\".sortbx label input.on\").attr(\"id\");\r\n      setGwd(cid == \"listRadio\" ? \"100%\" : \"31%\");\r\n    } else {\r\n      searchAuto();\r\n    }\r\n  }; // enterKy 함수\r\n\r\n  // 리스트 정렬 변경함수\r\n  const sortList = (e) => {\r\n    // 1. 선택옵션값 : 1 - 오름차순 / 2 - 내림차순\r\n    let opt = e.target.value;\r\n\r\n    // 임시변수 : 배열데이터만 가져옴\r\n    let temp = mvd[0];\r\n\r\n    // 2. 옵션에 따른 정렬 반영하기\r\n    temp.sort((x, y) => {\r\n      if (opt == 1) {\r\n        // 오름차순(1) - 최솟값부터 정렬\r\n        return x.txt == y.txt ? 0 : x.txt > y.txt ? 1 : -1;\r\n      } else if (opt == 2) {\r\n        // 내림차순(2) - 최댓값부터 정렬\r\n        return x.txt == y.txt ? 0 : x.txt > y.txt ? -1 : 1;\r\n      }\r\n    });\r\n    // 3. 데이터 정렬변경 반영하기\r\n    // setMvd([배열데이터,정렬상태값])\r\n    setMvd([temp, Number(opt)]);\r\n  }; // sortList 함수\r\n\r\n  // #listRadio 클릭시 디스플레이 리스트형태로 변경!\r\n  const displayList = (e) => {\r\n    let eid = e.target.id;\r\n    // 현재 클릭한 요소에 클래스 'on' 추가\r\n    e.target.classList.add(\"on\");\r\n    if (eid == \"gridRadio\") $(\".video_wrap\").addClass(\"on\");\r\n    else $(\".video_wrap\").removeClass(\"on\");\r\n\r\n    const rdobtn = document.querySelectorAll(\".sortbx input[type='radio']\");\r\n    // 클릭한 요소 외 요소는 클래스 'on' 제거\r\n    rdobtn.forEach((item) => {\r\n      if (e.target !== item) {\r\n        item.classList.remove(\"on\");\r\n      }\r\n    });\r\n\r\n    // 클릭한 요소의 아이디값에 따라 개별 css 적용\r\n    // 클릭한 요소가 listbtn일때\r\n    if (e.target.id === \"listRadio\") {\r\n      $(\"#sub_mv\").css({ \"flex-direction\": \"column\" });\r\n      $(\".mvbx\").css(\"width\", \"100%\");\r\n    }\r\n    // 클릭한 요소가 gridbtn일때\r\n    else {\r\n      $(\"#sub_mv\").css({ flexWrap: \"wrap\", flexDirection: \"row\" });\r\n      $(\".mvbx\").css(\"width\", \"50%\");\r\n\r\n      const winWidth = window.innerWidth;\r\n      if (winWidth > 1090) {\r\n        $(\".mvbx\").css(\"width\", \"31%\");\r\n      } else if (winWidth < 1090) {\r\n        $(\".mvbx\").css(\"width\", \"50%\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // 체크박스 요소\r\n  let chkele = document.querySelectorAll(\".chkhdn\");\r\n  // 체크박스 검색함수\r\n  const chkSearch = (e) => {\r\n    // 1. 체크박스 아이디 : 검색항목의 값(sort)\r\n    let chkid = e.target.id;\r\n    // 2. 체크박스 체크여부 : checked (true/false)\r\n    let chked = e.target.checked;\r\n    console.log(\"아이디:\", chkid, \"\\n체크여부:\", chked);\r\n\r\n    // 임시변수 : 기존입력된 데이터 가져옴\r\n    let temp = mvd[0];\r\n\r\n    // 결과집합변수\r\n    let newList = [];\r\n\r\n    // 3. 체크박스 체크갯수 세기 : 1개 초과시 배열 합쳐서 결과 출력!\r\n    let num = 0;\r\n    chkele.forEach((v) => {\r\n      if (v.checked) num++;\r\n    });\r\n    console.log(\"체크갯수:\", num);\r\n\r\n    // 4. 체크박스 체크여부에 따른 분기\r\n    // (1) 체크여부가 true일때 해당 검색어로 검색!\r\n    if (chked) {\r\n      // 현재 데이터 변수에 담기\r\n      let nowdt = vdata.filter((v) => {\r\n        if (v.sort === chkid) return true;\r\n      }); // filter\r\n\r\n      // 체크갯수가 1초과일때 배열합치기! (스프레드연산자 사용)\r\n      if (num > 1) {\r\n        // 기존데이터(temp) + 새데이터(noWdt)\r\n        newList = [...temp, ...nowdt];\r\n      }\r\n      // 체크갯수 1일 때\r\n      else {\r\n        newList = nowdt;\r\n      }\r\n    } // if : 체크박스 true\r\n\r\n    // (2) 체크박스가 false일때 데이터지우기\r\n    else {\r\n      console.log(\"지울 데이터:\", chkid, temp.length);\r\n      // splice삭제시 일반for문으로 --처리해야함\r\n      for (let i = 0; i < temp.length; i++) {\r\n        // console.log(temp[i].sort);\r\n        // 조건은 체크박스 풀린 값\r\n        if (temp[i].sort === chkid) {\r\n          // 배열지우기 메서드 : splice(순번,개수)\r\n          temp.splice(i, 1);\r\n          // splice로 지우면 배열항목자체가 삭제되므로 for문 돌때 개수가 줄어듦\r\n          // 따라서 다음번호를 지울때 ++을 --처리 필수!\r\n          i--;\r\n        } /////// if ////////////\r\n      }\r\n      // 결과처리하기 : 삭제처리된 temp 결과에 넣기!\r\n      newList = temp;\r\n    }\r\n\r\n    // 4. 검색결과 리스트 업데이트\r\n    // Hook 데이터변수+데이터건수\r\n    setMvd([newList], 2);\r\n    setTot(newList.length);\r\n  }; // chkSearch 함수\r\n\r\n  function CatList(props) {\r\n    // 선택데이터\r\n    let mvd = props.dt;\r\n\r\n    return (\r\n      <main className=\"video_wrap\">\r\n        <div className=\"contents_inner\">\r\n          {vidTit && <>{vidTit}</>}\r\n          <section id=\"sub_mv\">\r\n            {mvd.map((x, i) => (\r\n              <div className=\"mvbx\" key={i} onClick={() => showVid(x.vsrc, x.txt)} style={{ width: gwd }}>\r\n                <figure className=\"mv_img\">\r\n                  <img src={x.isrc} />\r\n                </figure>\r\n                <figcaption className=\"mv_date\">\r\n                  <p>{x.txt}</p>\r\n                  <p>{x.date}</p>\r\n                </figcaption>\r\n              </div>\r\n            ))}\r\n          </section>\r\n          <div className=\"ifr_bg_bx\" style={{ display: \"none\", transition: \"all 1s\" }}>\r\n            <div className=\"vid_ifr_wrap\">\r\n              <button type=\"button\" className=\"vid_close_btn\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"page23-band1941-Card293262_video-modal-closeIcon\" className=\"closeIcon\" viewBox=\"0 0 30 30\" fill=\"none\" focusable=\"false\">\r\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M29.998 14.75C29.864 6.578 23.201 0 15 0l-.25.002C6.578.136 0 6.8 0 15c0 8.286 6.716 15 15 15l.25-.002C23.422 29.864 30 23.201 30 15l-.002-.25ZM14.766 1.001l.24-.002.237.002c7.534.129 13.631 6.211 13.755 13.764l.002.24-.002.243c-.129 7.528-6.211 13.625-13.764 13.75l-.24.001-.24-.002C7.136 28.869 1 22.653 1 15 1 7.355 7.132 1.127 14.766 1.002Z\" fill=\"currentColor\"></path>\r\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15 14.396 10.605 10l-.605.603L14.397 15 10 19.396l.605.604L15 15.604 19.396 20l.604-.604L15.604 15 20 10.603 19.396 10 15 14.396Z\" fill=\"currentColor\"></path>\r\n                </svg>\r\n              </button>\r\n              <div className=\"vid_ifr_inner\">\r\n                <iframe src=\"\" title=\"\"></iframe>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"contents_wrap\">\r\n      {/* <h2>VIDEO</h2> */}\r\n      <div className=\"contents_inner\">\r\n        {/* 모듈코드 */}\r\n        <section className=\"schbx\">\r\n          {/* 1. 옵션선택박스 */}\r\n          <div id=\"search_filter_bx\">\r\n            <div className=\"schopt\">\r\n              {/* 검색박스 */}\r\n              <div className=\"searching\">\r\n                {/* 검색버튼 돋보기아이콘 */}\r\n                <FontAwesomeIcon icon={faSearch} className=\"schbtn\" title=\"키워드 검색\" />\r\n                {/* 입력창 */}\r\n                <input id=\"searchInput\" type=\"text\" maxLength=\"14\" placeholder=\"검색어를 입력해주세요\" onKeyUp={enterKy} />\r\n              </div>\r\n              {/* 키워드 검색시 연관검색어 팝업 */}\r\n              <div id=\"keyword_collection\">\r\n                <div className=\"panels\">\r\n                  <ul>\r\n                    {autocomplete.map((item, i) => (\r\n                      <li key={i}>\r\n                        <span>{item}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* 체크박스구역 */}\r\n            <div className=\"chkbx\">\r\n              <ul>\r\n                <li>\r\n                  <h2>Category</h2>\r\n                  {/* 체크박스리스트 */}\r\n                  <ol>\r\n                    <li>\r\n                      Music Videos\r\n                      <input type=\"checkbox\" id=\"mv\" className=\"chkhdn\" onChange={chkSearch} />\r\n                      <label htmlFor=\"mv\" className=\"chklb\"></label>\r\n                    </li>\r\n                    <li>\r\n                      V-logs\r\n                      <input type=\"checkbox\" id=\"vlog\" className=\"chkhdn\" onChange={chkSearch} />\r\n                      <label htmlFor=\"vlog\" className=\"chklb\"></label>\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          {/* 2. 결과리스트박스 */}\r\n          <div className=\"listbx\">\r\n            {/* 검색결과 타이틀 */}\r\n            {resultTit && <div className=\"restit\">{resultTit}</div>}\r\n            {/* 정렬선택박스 */}\r\n            <aside className=\"sortbx\">\r\n              <select className=\"sel\" name=\"sel\" id=\"sel\" onChange={sortList}>\r\n                <option value=\"0\">정렬선택</option>\r\n                <option value=\"1\">오름차순</option>\r\n                <option value=\"2\">내림차순</option>\r\n              </select>\r\n              <label htmlFor=\"listRadio\">\r\n                <input type=\"radio\" name=\"listRadio\" id=\"listRadio\" onClick={displayList}></input>\r\n              </label>\r\n              <label htmlFor=\"gridRadio\">\r\n                <input type=\"radio\" name=\"gridRadio\" id=\"gridRadio\" onClick={displayList}></input>\r\n              </label>\r\n            </aside>\r\n            {/* 비디오 리스트 컴포넌트 \r\n                전달속성 dt - 리스트 데이터 */}\r\n            <CatList dt={mvd[0]} />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\n// 앨범 출력용 컴포넌트\r\nfunction Album_Ban() {\r\n  const sel_data = ban_data.main;\r\n\r\n  return (\r\n    <main className=\"contents_wrap\">\r\n      <h2 className=\"mttit\">DISCOGRAPHY</h2>\r\n      <div className=\"contents_inner\">\r\n        <div className=\"album_list\">\r\n          <ul>\r\n            {sel_data.map((x, i) => (\r\n              <li key={i}>\r\n                <Link to={`/album/${i}`}>\r\n                  <img src={x.isrc} alt={\"여자아이들의 \" + x.mtit + \" 앨범\"} />\r\n                  <div className=\"albumInfo_box\">\r\n                    <div className=\"txt_align\">\r\n                      <h5>{x.altop_txt.split(\"^\")[1]}</h5>\r\n                      <h2>{x.mtit.replace(/-/g, \"\")}</h2>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\n// 갤러리1 컴포넌트\r\nfunction Gal1_comp(props) {\r\n  const galVal = props.cat[0];\r\n\r\n  return (\r\n    <>\r\n      <h3>Album Title : {galVal.galtit}</h3>\r\n      <div className=\"gal1_cont\">\r\n        {/* 앨범명 */}\r\n        <div className=\"gal_img_wrap\">\r\n          <div className=\"gal_img_inner\">\r\n            <ul>\r\n              {galVal.galisrc.map((x, i) => (\r\n                <li className={\"gal1_img\" + (i + 1)} key={i}>\r\n                  <img src={`./images/gallery/${galVal.galtit}/${x}.jpg`} alt={\"여자아이들의 \" + galVal.galtit + \" 앨범이미지\"} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// // 갤러리2 컴포넌트\r\n// function Gal2_comp\r\n\r\n// 갤러리 출력용 컴포넌트\r\nfunction Gallery_Ban() {\r\n  const sel_data = ban_data.gallery;\r\n  let prevIndex = 1;\r\n\r\n  const firstSpan = $(\".gallery_dot1\");\r\n\r\n  const [handleClick, setHandleClick] = useState(false);\r\n\r\n  const handleNextClick = () => {\r\n    setHandleClick((prevIndex) => (prevIndex + 1) % sel_data.length); // 다음 갤러리 인덱스로 변경\r\n  };\r\n\r\n  const handlePrevClick = () => {\r\n    setHandleClick((prevIndex) => (prevIndex - 1 + sel_data.length) % sel_data.length); // 이전 갤러리 인덱스로 변경\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main className=\"contents_wrap\">\r\n        <h2>Gallery</h2>\r\n        {/* 컴포넌트 출력 부분 */}\r\n        <Gal1_comp cat={sel_data} />\r\n      </main>\r\n      <nav className=\"go_lft_rgt_btn\">\r\n        <div className=\"lft_rgt_btn_wrap\">\r\n          <div id=\"go_prev_btn\" onClick={handlePrevClick}>\r\n            <svg viewBox=\"0 0 6 10\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\">\r\n              <path d=\"m5.216 9.4-4.2-4.2 4.2-4.2\" stroke=\"#000\" strokeWidth=\".7\"></path>\r\n            </svg>\r\n          </div>\r\n          <div id=\"go_btn_dots\">\r\n            {sel_data.map((_, index) => (\r\n              <span key={index} className={`gallery_dot${index + 1} ${index === handleClick ? \"active\" : \"\"}`} style={{ fontWeight: index === handleClick ? \"700\" : \"400\" }}>\r\n                I\r\n              </span>\r\n            ))}\r\n          </div>\r\n          <div id=\"go_next_btn\" onClick={handleNextClick}>\r\n            <svg viewBox=\"0 0 6 10\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\">\r\n              <path d=\"m5.216 9.4-4.2-4.2 4.2-4.2\" stroke=\"#000\" strokeWidth=\".7\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Main_Ban, Profile_Ban, Video_Ban, Album_Ban, Gallery_Ban };\r\n","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\Circle.js",["112","113","114"],[],"import { useEffect, useState } from \"react\";\r\nimport \"../scss/ban.css\";\r\nimport $ from \"jquery\";\r\n\r\nexport default function Circle(){\r\n    \r\n    return(\r\n        <>\r\n            <div className=\"circle_wrapper\">\r\n                <div className=\"circle\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\Player.js",["115","116","117","118","119","120","121","122","123","124","125","126"],[],"// 플레이어 컴포넌트 - Player.js\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\n// 플레이어CSS\r\nimport \"../scss/player.css\";\r\n// 메인함수\r\nimport { handleHover, handleTime, currentTime2 } from \"../js/commonFn\";\r\nimport $ from \"jquery\";\r\n// 배너 데이터\r\nimport ban_data from \"../data/ban\";\r\n\r\n// 플레이어 출력용 컴포넌트\r\nfunction Player(props) {\r\n  // LP 회전각도 초기화 변수\r\n  let rotation = 0;\r\n\r\n  // 전체곡순번\r\n  const [songSeq, setSongSeq] = useState(0);\r\n\r\n  let audio, play_btn, lp;\r\n\r\n  const audioPlayer = useRef(null);\r\n  const sel_data = ban_data[props.cat];\r\n  const [volume, setVolume] = useState(1);\r\n  let [countUpNum, setCountUpNum] = useState(0)\r\n\r\n  function handleplayer() {\r\n    audio = $(\"#music\")[0];\r\n    play_btn = $(\".play_song_btn\");\r\n    lp = $(\".artwork\");\r\n  } // handleplayer 함수\r\n\r\n  const audtit = {\r\n    \"I feel\": [{\"0\":\"Queencard\"},{\"162\":\"Allergy\"},{\"324\":\"Lucid\"},{\"500\":\"All Night\"},{\"646\":\"Paradise\"},{\"835\":\"Peter Pan\"}],\r\n    \"I love\": [{\"0\":\"LOVE\"},{\"196\":\"Change\"},{\"400\":\"Reset\"},{\"582\":\"Sculpture\"},{\"769\":\"DARK (X-file)\"}],\r\n    \"I am\": [{\"0\":\"LATATA\"},{\"202\":\"달라 ($$$)\"},{\"414\":\"MAZE\"},{\"616\":\"DON'T TEXT ME\"},{\"830\":\"알고 싶어\"},{\"1038\":\"들어줘요\"}],\r\n  }\r\n\r\n  let audseq = 0;\r\n  let albtxt;\r\n  let sec=0;\r\n  let dur=0;\r\n  let protsts=false;\r\n\r\n  function upAlbumTxt(){  \r\n    setTimeout(()=>{\r\n      // 앨범이름은 오디오가 로딩된 후 시차로 실행!\r\n      let temp = $(\"#album\").text();\r\n      // console.log(\"I순번:\",temp.indexOf('I'),temp);\r\n      if(temp.indexOf('I')===0){ \r\n        protsts = false;\r\n        albtxt = temp;\r\n        // console.log(\"flase처리!!!\");\r\n      }\r\n      else protsts=true;\r\n    },100);\r\n  }\r\n\r\n  \r\n  function updateAudio(){\r\n    let alEle = document.querySelector(\"#album\");\r\n    $(\"#music\").on(\"timeupdate\",()=>{\r\n      if(alEle.innerText.indexOf('I')===0){ \r\n        protsts = false;\r\n        albtxt = alEle.innerText;\r\n      }\r\n      else{\r\n        protsts = true;\r\n      }\r\n      // console.log(protsts);\r\n      if(protsts) return;\r\n      \r\n      if(!currentTime2||!albtxt||!audtit[albtxt]) return;\r\n\r\n\r\n      sec = Math.floor(audio.currentTime);\r\n      dur = Math.floor(audio.duration);\r\n\r\n      let ct =audtit[albtxt].map(v=>Object.keys(v));\r\n\r\n      ct.forEach((v,i)=>{\r\n        let n1 = ct[i][0];\r\n        let n2 = i+1==ct.length?dur:ct[i+1][0];\r\n        // console.log(\"범위:\",n1,\"~\",n2,\"/길이:\",ct.length);\r\n \r\n        if(sec>=n1 && sec<n2){\r\n          // console.log(\"찍을값:\",audtit[albtxt][i][n1]);\r\n          $(\"#song\").text(audtit[albtxt][i][n1]);         \r\n        }\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n  $(document).ready(function () {\r\n    // Player 함수\r\n    handleplayer();\r\n    handleTime()\r\n    // CD Hover함수\r\n    handleHover();\r\n    // CD Wheel 함수\r\n    // handleWheel();\r\n\r\n\r\n    $(\"#slider\").click(()=>{\r\n      // console.log(3333,sec);\r\n      audseq = 0;\r\n      // 재생/멈춤/이전곡/다음곡시에 앨범제목 업데이트!\r\n      upAlbumTxt();\r\n    })\r\n  });\r\n  \r\n  // 볼륨조절 함수\r\n  const volumeChange = (event) => {\r\n    const volumeValue = event.target.value;\r\n    audio.volume = volumeValue;\r\n    setVolume(volumeValue);\r\n  };\r\n\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n  const soundRef = useRef(null);\r\n  let rotsts = 1;\r\n\r\n  // 다음 버튼 클릭시 다음 순번부터 곡 재생 (1~0)\r\n  const currentPlayStop = (e) => {\r\n    play_btn.toggleClass(\"active\");\r\n    // console.log(\"재생멈춤버튼!!!\");\r\n    /* active 클래스 가지고있으면 이미지 변경! */\r\n    if (play_btn.hasClass(\"active\")) {\r\n      play_btn.find(\"img\").attr(\"src\", \"./images/player/bx-pause.svg\");\r\n      updateAudio();\r\n      audio.play();\r\n      rotsts = 1;\r\n      rotateLp();\r\n    } else {\r\n      play_btn.find(\"img\").attr(\"src\", \"./images/player/bx-play-circle.svg\");\r\n      audio.pause();\r\n      rotsts = 0;\r\n    }\r\n    // 재생/멈춤/이전곡/다음곡시에 앨범제목 업데이트!\r\n    upAlbumTxt();\r\n  };\r\n\r\n  const rotateLp = () => {\r\n    // console.log(\"상태값:\",rotsts)\r\n    // 회전각 1씩 증가!\r\n    rotation += 1;\r\n    // 1씩 증가된 회전각 만큼 회전\r\n    lp.css(\"transform\", \"rotate(\" + rotation + \"deg)\");\r\n    if (rotsts && play_btn.hasClass(\"active\")) setTimeout(rotateLp, 10);\r\n  };\r\n\r\n  let cang = useRef(0);\r\n  let ang = useRef(51.43);\r\n  let imgNum = useRef(0);\r\n\r\n\r\n  // 다음 버튼 클릭시 다음 순번부터 곡 재생 (1~0)\r\n  const playNextSong = () => {\r\n    const nextIndex = (currentSongIndex + 1) % sel_data.length;\r\n    setCurrentSongIndex(nextIndex);\r\n    setSongSeq(nextIndex);\r\n    $(\".next_song_btn\").addClass(\"on\");\r\n    $(\".prev_song_btn\").removeClass(\"on\");\r\n\r\n    cang.current = cang.current -ang.current;\r\n    imgNum.current ++;\r\n    if(imgNum.current == 7) imgNum.current = 0;\r\n    \r\n    console.log(\"다음버튼클\",imgNum.current);\r\n\r\n    $(\".album_wrap\").css({ transform: `rotate(${cang.current}deg)` });\r\n    $(\".album_set \").css({ transform: `rotate(${-cang.current}deg)` });\r\n    $(\".banbx\").css({ background: `url(./images/album/alb${imgNum.current}.jpg) 94% 51% / 42% 39% no-repeat` });\r\n\r\n    if (play_btn.hasClass(\"active\")) {\r\n      setTimeout(() => audio.play(), 10);\r\n      setSongSeq(nextIndex);\r\n    }\r\n    // 재생/멈춤/이전곡/다음곡시에 앨범제목 업데이트!\r\n    upAlbumTxt();\r\n\r\n  };\r\n\r\n  const playPrevSong = () => {\r\n    const prevIndex = (currentSongIndex - 1 + sel_data.length) % sel_data.length;\r\n    setCurrentSongIndex(prevIndex);\r\n    const audioSrc = sel_data[prevIndex].vsrc;\r\n    setSongSeq(prevIndex);\r\n    $(\".prev_song_btn\").addClass(\"on\");\r\n    $(\".next_song_btn\").removeClass(\"on\");\r\n\r\n    cang.current = cang.current + ang.current\r\n    console.log(\"이전버튼클\",cang);\r\n\r\n    imgNum.current --;\r\n    if(imgNum.current == -1) imgNum.current = 6;\r\n    \r\n    console.log(cang.current)\r\n\r\n    $(\".album_wrap\").css({ transform: `rotate(${cang.current}deg)` });\r\n    $(\".album_set \").css({ transform: `rotate(${-cang.current}deg)` });\r\n    $(\".banbx\").css({ background: `url(./images/album/alb${imgNum.current}.jpg) 94% 51% / 42% 39% no-repeat` });\r\n\r\n\r\n    if(play_btn){ // 플레이버튼 요소가 읽혀졌을때만 실행!\r\n      if (play_btn.hasClass(\"active\")) {\r\n        setTimeout(() => audio.play(), 10);\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n    }\r\n    // console.log(audio);\r\n    // 재생/멈춤/이전곡/다음곡시에 앨범제목 업데이트!\r\n    upAlbumTxt();\r\n  };\r\n\r\n  const srcList = [\r\n    \"./audios/i feel.mp3\",\r\n    \"./audios/Expectations.mp3\",\r\n    \"./audios/Nxde.mp3\",\r\n    \"./audios/i love.mp3\",\r\n    \"./audios/dumdi dumdi.mp3\",\r\n    \"./audios/i am.mp3\",\r\n    \"./audios/tomboy.mp3\",\r\n    \"./audios/Han.mp3\"\r\n  ];\r\n\r\n  // main 배열의 각 순번 별로 데이터 접근 - currentSongIndex : 0, 1, 2, 3,..\r\n  const x = ban_data.main[currentSongIndex];\r\n\r\n  // 체크함수 ///////\r\n  const chkFn = () => {\r\n    handleplayer();\r\n    updateAudio();\r\n    audio.pause();\r\n    rotsts = 0;\r\n  }; ///////////// chkFn ////////////\r\n\r\n  // 페이지로딩시 체크코드\r\n  useEffect(chkFn,[]);\r\n\r\n  return (\r\n    <div className={\"player\"}>\r\n      <span id=\"arm\"></span>\r\n      <ul>\r\n        <li className=\"artwork\">\r\n          <a href=\"#\">\r\n            <img src={x.isrc} alt=\"레코드이미지\" />\r\n          </a>\r\n        </li>\r\n        <li className=\"info\">\r\n          {/* 곡 정보 */}\r\n          <h1 id=\"album\">{x.mtit.replace(/-/g, \"\")}</h1>\r\n          <h4 id=\"artist\">(G)I-DLe</h4>\r\n          <h2 id=\"song\">{x.stit == \"\" ? x.mtit.replace(/-/g, \"\") : x.stit}</h2>\r\n          <div className=\"button-items\">\r\n            <audio id=\"music\" src={srcList[songSeq]}></audio>\r\n            {/* 음반 리스트 */}\r\n            <div id=\"slider\">\r\n              {/* 음원 재생시간 프로그레스바 */}\r\n              <div id=\"elapsed\"></div>\r\n              <div id=\"buffered\"></div>\r\n            </div>\r\n            {/* 현재 재생시간 */}\r\n            <p id=\"progress_timer\" className=\"timer\">\r\n              00:00\r\n            </p>\r\n            {/* 총 재생시간 */}\r\n            <p id=\"total_timer\" className=\"timer\">\r\n              <span className=\"tot1\">00</span>:<span className=\"tot2\">00</span>\r\n            </p>\r\n            <div className=\"controls\">\r\n              <span className=\"prev_song_btn\" onClick={playPrevSong}>\r\n                <i className=\"bx bx-skip-previous\"></i>\r\n              </span>\r\n              <span className=\"play_song_btn\" onClick={currentPlayStop}>\r\n                <img src={\"./images/player/bx-play-circle.svg\"} alt=\"정지버튼\" />\r\n              </span>\r\n              <span className=\"next_song_btn\" onClick={playNextSong}>\r\n                <i className=\"bx bx-skip-next\"></i>\r\n              </span>\r\n              <div className=\"slider\">\r\n                <div className=\"volume\"></div>\r\n                <input type=\"range\" id=\"volume\" min={0} max={1} step={0.1} value={volume} onChange={volumeChange} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n} // Player 함수\r\n\r\nexport default Player;","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\js\\commonFn.js",["127","128","129","130","131","132","133","134","135","136","137"],[],"// PC - 휠이벤트 + 메인배너이동\r\n\r\nimport { qs, qsa } from \"./eventFn.js\";\r\nimport changeSongTxt from \"../components/Player.js\";\r\nimport $ from \"jquery\";\r\nimport ban_data from \"../data/ban\";\r\nimport { useEffect } from \"react\";\r\n\r\n/****************************************** \r\n    함수명: handleWheel\r\n    기능: 휠 이동시 슬라이드 위치 변경\r\n******************************************/\r\n// 회전각 초기화변수\r\nlet rotation = 0;\r\n// 기본단위\r\nlet ang = 51.43;\r\n// 현재각도\r\nlet cang = 0;\r\n// 회전횟수\r\nlet rotnum = 0;\r\n// 회전상태막기\r\nlet rotsts = 0;\r\n\r\n// 초기레코드 이미지\r\nlet albumImg = `./images/album/alb0.jpg`;\r\n\r\nlet rectTop;\r\nlet rectLeft;\r\n\r\n// 로딩구역 함수\r\nfunction jqFn() {\r\n  albumImg = `./images/album/alb0.jpg`;\r\n  $(\".banbx\").css({ background: \"url(\" + albumImg + \") 94% 51% / 42% 39% no-repeat\" });\r\n  //초기화!\r\n  cang = 0;\r\n  imgNum = 0;\r\n}\r\n\r\nlet imgNum = 0;\r\n\r\nfunction handleWheel(e) {\r\n  // 막기장치 ///////\r\n  if (rotsts) return;\r\n  rotsts = 1;\r\n  setTimeout(() => (rotsts = 0), 400);\r\n\r\n  const delta = e.deltaY;\r\n\r\n  // 슬라이드 겉박스\r\n  const moveSl = qs(\".album_wrap\");\r\n\r\n  // 대상 슬라이드 li\r\n  const tgsl = qsa(\".album_set\");\r\n  rotation += 1;\r\n\r\n  $(\".album_wrap\").css({ transition: \".4s ease-in-out\" });\r\n  $(\".album_set\").css({ transition: \".4s ease-in-out\" });\r\n\r\n  const chg_color = [\"pink\", \"#222\", \"#da9438\", \"#cc372b\", \"#f7ba20\", \"#d388eb\", \"#373736\"];\r\n  const chg_page_ele = $(\".circle\");\r\n\r\n  if (delta > 0) {\r\n    // 양수일 때 (아래 휠)\r\n    cang = cang + ang;\r\n    // console.log('imgNum',imgNum)\r\n    imgNum--;\r\n    if (imgNum === -1) imgNum = 6;\r\n\r\n    chg_page_ele.css({ backgroundColor: chg_color[imgNum] });\r\n    // console.log(\"아래\", chg_color[imgNum], imgNum);\r\n\r\n    if (imgNum < 0) {\r\n      imgNum = $(\".album_set\").length - 1;\r\n      chg_page_ele.css({ backgroundColor: chg_color[imgNum + 1] });\r\n    }\r\n    $(\".prev_song_btn\").trigger(\"click\");\r\n    console.log(\"아래휠\",cang)\r\n  } else {\r\n    // 음수일 때 (위로 휠)\r\n    cang = cang - ang;\r\n    console.log(\"위로휠:\",cang);\r\n\r\n    imgNum++;\r\n    if (imgNum === 7) imgNum = 0;\r\n\r\n    chg_page_ele.css({ backgroundColor: chg_color[imgNum] });\r\n    // console.log(\"위로\", chg_color[imgNum], imgNum);\r\n\r\n    if (imgNum > $(\".album_set\").length - 1) {\r\n      imgNum = 0;\r\n      chg_page_ele.css({ backgroundColor: chg_color[imgNum + 1] });\r\n    }\r\n    $(\".next_song_btn\").trigger(\"click\");\r\n  }\r\n\r\n  $(\".banbx\").css({ background: `url(./images/album/alb${imgNum}.jpg) 94% 51% / 42% 39% no-repeat` });\r\n  $(\".album_wrap\").css({ transform: \"rotate(\" + cang + \"deg)\" });\r\n  $(\".album_set \").css({ transform: \"rotate(\" + -cang + \"deg)\" });\r\n}\r\n\r\ndocument.querySelectorAll(\".album_wrap li\").forEach((ele, idx) => ele.setAttribute(\"data-seq\", idx));\r\n\r\n// 현재시간 구하는 변수\r\nlet currentTime2;\r\n\r\n/****************************************** \r\n    함수명: handleHover\r\n    기능: 마우스 오버시 CD 회전하면서 옆으로 나옴\r\n******************************************/\r\nfunction handleHover() {\r\n  // 대상에 호버했을때 함수호출!\r\n  const hovertg = qsa(\".album_set\");\r\n  hovertg.forEach((ele) => {\r\n    // 호버했을때 cd 회전하면서 튀어나옴\r\n    const tg = ele.querySelector(\"aside\");\r\n    ele.onmouseover = () => {\r\n      tg.style.transition = \"transform 7s\";\r\n      tg.style.transform = \"translate(5%, -50%) rotate(720deg)\";\r\n    };\r\n\r\n    ele.onmouseleave = () => {\r\n      tg.style.transition = \"transform 7s\";\r\n      tg.style.transform = \"translate(0, -50%) rotate(0deg)\";\r\n    };\r\n  });\r\n}\r\n\r\n/****************************************** \r\n    함수명: handleToggle\r\n    기능: 원형 네비 메뉴 클릭시 GNB 등장\r\n******************************************/\r\nfunction handleToggle() {\r\n  const nav = $(\".circular_nav\");\r\n  const toggleBtn = nav.find($(\".toggle_btn\"));\r\n\r\n  nav.toggleClass(\"active\");\r\n  toggleBtn.toggleClass(\"active\");\r\n}\r\n\r\n/****************************************** \r\n    함수명: player\r\n    기능: \r\n    (1) 슬라이드li 2번째 요소에 맞춰 플레이어 음원/커버 변경\r\n    (2) 오디오 볼륨조절\r\n    (3) 음원 현재 재생시간/ 총 재생시간 업데이트\r\n    (4) 플레이버튼 토글하여 음원 재생/멈춤\r\n******************************************/\r\nfunction handleTime() {\r\n  let audio = $(\"#music\")[0];\r\n  let elapsed = $(\"#elapsed\");\r\n  const total1 = $(\"#total_timer > .tot1\");\r\n  const total2 = $(\"#total_timer > .tot2\");\r\n  // console.log(total1,total2)\r\n  const current = $(\"#progress_timer\");\r\n\r\n  // 오디오의 재생 시간이 업데이트될 때마다 함수 호출!\r\n  $(\"#music\").on(\"timeupdate\", function () {\r\n    // timeupdate - 오디오 또는 비디오의 재생 시간이 변경될 때마다 발생하는 이벤트\r\n\r\n    // 오디오의 재생 시간과 전체 재생 시간 가져오기\r\n    const currentTime = audio.currentTime;\r\n    const duration = audio.duration || 0; // 오디오 총 길이\r\n\r\n    // 음원 총 재생시간 구해서 시간 업데이트\r\n    const minutes = Math.floor(duration / 60);\r\n    const seconds = Math.floor(duration % 60);\r\n    let totalTime1 = minutes.toString().padStart(2, \"0\");\r\n    let totalTime2 = seconds.toString().padStart(2, \"0\");\r\n    total1.text(totalTime1);\r\n    total2.text(totalTime2);\r\n\r\n    // 음원 현재 재생시간 구해서 시간 업데이트\r\n    const minutes2 = Math.floor(currentTime / 60);\r\n    const seconds2 = Math.floor(currentTime % 60);\r\n    currentTime2 = minutes2.toString().padStart(2, \"0\") + \":\" + seconds2.toString().padStart(2, \"0\"); // 자료형을 문자화한 후 앞에 \"0\"을 추가!\r\n    current.text(currentTime2);\r\n\r\n    // 프로그레스 바의 너비 계산\r\n    const progress = (currentTime / duration) * 100 + \"%\";\r\n    // console.log(\"프로그레스바너비:\",progress)\r\n\r\n    // 프로그레스 바 업데이트\r\n    elapsed.css(\"width\", progress);\r\n\r\n    // controlSong(currentTime2,duration,progress)\r\n  });\r\n\r\n  const slider = document.querySelector(\"#slider\");\r\n  let play_btn = $(\".play_song_btn\");\r\n\r\n  // 프로그레스바 클릭시 해당 시점 계산후 음원 재생\r\n  const controlSong = (e) => {\r\n    // 클릭한 위치의 X 좌표 구하기\r\n    const clickX = e.offsetX;\r\n\r\n    // 프로그레스바의 전체너비\r\n    const progressBarWidth = slider.clientWidth;\r\n\r\n    // 오디오 총 길이\r\n    let audioDuration = audio.duration;\r\n\r\n    // 클릭한 위치의 너비 비율 계산\r\n    const progressWidth = (clickX / progressBarWidth) * 100;\r\n\r\n    // 클릭한 위치의 시간 계산\r\n    const seekTime = (clickX / progressBarWidth) * audioDuration;\r\n\r\n    // 프로그레스바 너비 업데이트\r\n    elapsed.css(\"width\", progressWidth + \"%\");\r\n\r\n    audio.currentTime = seekTime;\r\n  };\r\n  if (document.querySelector(\"#slider\")) slider.addEventListener(\"click\", controlSong);\r\n}\r\n\r\nfunction handleResize() {\r\n  const tgBan = $(\".banbx\");\r\n  \r\n  let windW = window.innerWidth;\r\n  console.log(\"윈도우너비:\",windW,-2000+windW)\r\n  let banbx = $(\".banbx\")\r\n  \r\n\r\n  if(windW < 1460 && windW>1000) {\r\n    banbx.css({\r\n      left:`max(-1120px,${-2360+windW}px)`  \r\n    })\r\n  }\r\n\r\n}\r\n\r\nwindow.addEventListener(\"resize\", handleResize);\r\n\r\nexport { handleHover, handleToggle, handleTime, handleWheel, jqFn, currentTime2 };\r\n","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\data\\ban.js",[],[],"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\js\\eventFn.js",["138"],[],"// 요소 선택 함수\r\nconst qs = (x) => document.querySelector(x);\r\nconst qsa = (x) => document.querySelectorAll(x);\r\n\r\n// 이벤트 함수  - 오버\r\nconst hoverCont = (x) => {\r\n    // 선택\r\n    let y = qsa(x);\r\n    // 클래스 추가/제거\r\n    y.forEach(ele=>{\r\n        ele.onmouseenter = () => {\r\n            console.log(ele)\r\n            // addCls(ele,\"active\");\r\n        }\r\n        ele.onmouseleave = () => {\r\n            // removeCls(ele,\"active\");\r\n        }\r\n    });\r\n}\r\n\r\nexport {qs, qsa};",{"ruleId":"139","severity":1,"message":"140","line":8,"column":9,"nodeType":"141","messageId":"142","endLine":8,"endColumn":33},{"ruleId":"139","severity":1,"message":"143","line":7,"column":9,"nodeType":"141","messageId":"142","endLine":7,"endColumn":23},{"ruleId":"139","severity":1,"message":"144","line":7,"column":9,"nodeType":"141","messageId":"142","endLine":7,"endColumn":32},{"ruleId":"139","severity":1,"message":"145","line":7,"column":9,"nodeType":"141","messageId":"142","endLine":7,"endColumn":37},{"ruleId":"139","severity":1,"message":"146","line":43,"column":7,"nodeType":"141","messageId":"142","endLine":43,"endColumn":30},{"ruleId":"147","severity":1,"message":"148","line":39,"column":65,"nodeType":"149","messageId":"150","endLine":39,"endColumn":67},{"ruleId":"147","severity":1,"message":"148","line":55,"column":89,"nodeType":"149","messageId":"150","endLine":55,"endColumn":91},{"ruleId":"151","severity":1,"message":"152","line":62,"column":149,"nodeType":"149","messageId":"153","endLine":62,"endColumn":150},{"ruleId":"154","severity":1,"message":"155","line":8,"column":10,"nodeType":"156","messageId":"157","endLine":8,"endColumn":18},{"ruleId":"154","severity":1,"message":"158","line":9,"column":10,"nodeType":"156","messageId":"157","endLine":9,"endColumn":23},{"ruleId":"154","severity":1,"message":"159","line":253,"column":8,"nodeType":"156","messageId":"157","endLine":253,"endColumn":11},{"ruleId":"160","severity":1,"message":"161","line":286,"column":39,"nodeType":"162","messageId":"163","endLine":286,"endColumn":41},{"ruleId":"160","severity":1,"message":"161","line":304,"column":39,"nodeType":"162","messageId":"163","endLine":304,"endColumn":41},{"ruleId":"147","severity":1,"message":"148","line":309,"column":52,"nodeType":"149","messageId":"150","endLine":309,"endColumn":54},{"ruleId":"160","severity":1,"message":"161","line":323,"column":48,"nodeType":"162","messageId":"163","endLine":323,"endColumn":50},{"ruleId":"147","severity":1,"message":"148","line":345,"column":36,"nodeType":"149","messageId":"150","endLine":345,"endColumn":38},{"ruleId":"147","severity":1,"message":"148","line":358,"column":18,"nodeType":"149","messageId":"150","endLine":358,"endColumn":20},{"ruleId":"160","severity":1,"message":"164","line":373,"column":22,"nodeType":"162","messageId":"163","endLine":373,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":374,"column":15,"nodeType":"149","messageId":"150","endLine":374,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":376,"column":22,"nodeType":"149","messageId":"150","endLine":376,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":377,"column":22,"nodeType":"149","messageId":"150","endLine":377,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":379,"column":22,"nodeType":"149","messageId":"150","endLine":379,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":392,"column":13,"nodeType":"149","messageId":"150","endLine":392,"endColumn":15},{"ruleId":"160","severity":1,"message":"161","line":450,"column":36,"nodeType":"162","messageId":"163","endLine":450,"endColumn":38},{"ruleId":"165","severity":1,"message":"166","line":502,"column":19,"nodeType":"141","endLine":502,"endColumn":39},{"ruleId":"167","severity":1,"message":"168","line":520,"column":17,"nodeType":"141","endLine":520,"endColumn":41},{"ruleId":"154","severity":1,"message":"169","line":669,"column":7,"nodeType":"156","messageId":"157","endLine":669,"endColumn":16},{"ruleId":"154","severity":1,"message":"170","line":671,"column":9,"nodeType":"156","messageId":"157","endLine":671,"endColumn":18},{"ruleId":"139","severity":1,"message":"171","line":688,"column":9,"nodeType":"141","messageId":"142","endLine":688,"endColumn":37},{"ruleId":"154","severity":1,"message":"172","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":19},{"ruleId":"154","severity":1,"message":"173","line":1,"column":21,"nodeType":"156","messageId":"157","endLine":1,"endColumn":29},{"ruleId":"154","severity":1,"message":"174","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":9},{"ruleId":"154","severity":1,"message":"175","line":21,"column":9,"nodeType":"156","messageId":"157","endLine":21,"endColumn":20},{"ruleId":"154","severity":1,"message":"176","line":24,"column":8,"nodeType":"156","messageId":"157","endLine":24,"endColumn":18},{"ruleId":"154","severity":1,"message":"177","line":24,"column":20,"nodeType":"156","messageId":"157","endLine":24,"endColumn":33},{"ruleId":"154","severity":1,"message":"178","line":38,"column":7,"nodeType":"156","messageId":"157","endLine":38,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":82,"column":21,"nodeType":"149","messageId":"150","endLine":82,"endColumn":23},{"ruleId":"154","severity":1,"message":"179","line":120,"column":9,"nodeType":"156","messageId":"157","endLine":120,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":167,"column":23,"nodeType":"149","messageId":"150","endLine":167,"endColumn":25},{"ruleId":"154","severity":1,"message":"180","line":187,"column":11,"nodeType":"156","messageId":"157","endLine":187,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":196,"column":23,"nodeType":"149","messageId":"150","endLine":196,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":237,"column":14,"nodeType":"183","endLine":237,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":248,"column":11,"nodeType":"141","endLine":248,"endColumn":23},{"ruleId":"147","severity":1,"message":"148","line":256,"column":33,"nodeType":"149","messageId":"150","endLine":256,"endColumn":35},{"ruleId":"154","severity":1,"message":"186","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":21},{"ruleId":"154","severity":1,"message":"187","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":16},{"ruleId":"154","severity":1,"message":"172","line":7,"column":10,"nodeType":"156","messageId":"157","endLine":7,"endColumn":19},{"ruleId":"154","severity":1,"message":"188","line":14,"column":5,"nodeType":"156","messageId":"157","endLine":14,"endColumn":13},{"ruleId":"154","severity":1,"message":"189","line":20,"column":5,"nodeType":"156","messageId":"157","endLine":20,"endColumn":11},{"ruleId":"154","severity":1,"message":"190","line":27,"column":5,"nodeType":"156","messageId":"157","endLine":27,"endColumn":12},{"ruleId":"154","severity":1,"message":"191","line":28,"column":5,"nodeType":"156","messageId":"157","endLine":28,"endColumn":13},{"ruleId":"154","severity":1,"message":"192","line":50,"column":9,"nodeType":"156","messageId":"157","endLine":50,"endColumn":15},{"ruleId":"154","severity":1,"message":"193","line":53,"column":9,"nodeType":"156","messageId":"157","endLine":53,"endColumn":13},{"ruleId":"154","severity":1,"message":"194","line":189,"column":7,"nodeType":"156","messageId":"157","endLine":189,"endColumn":15},{"ruleId":"154","severity":1,"message":"195","line":217,"column":9,"nodeType":"156","messageId":"157","endLine":217,"endColumn":14},{"ruleId":"154","severity":1,"message":"196","line":6,"column":7,"nodeType":"156","messageId":"157","endLine":6,"endColumn":16},"react/jsx-pascal-case","Imported JSX component Video_Ban must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Gallery_Ban must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Album_Ban must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Profile_Ban must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Main_Ban must be in PascalCase or SCREAMING_SNAKE_CASE","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-unused-vars","'ReactSVG' is defined but never used.","Identifier","unusedVar","'ScrollTrigger' is defined but never used.","'tot' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.sort() expects a value to be returned at the end of arrow function.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'prevIndex' is assigned a value but never used.","'firstSpan' is assigned a value but never used.","Imported JSX component Gal1_comp must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'useState' is defined but never used.","'$' is defined but never used.","'audioPlayer' is assigned a value but never used.","'countUpNum' is assigned a value but never used.","'setCountUpNum' is assigned a value but never used.","'audseq' is assigned a value but never used.","'soundRef' is assigned a value but never used.","'audioSrc' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'rotsts' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'changeSongTxt' is defined but never used.","'ban_data' is defined but never used.","'rotation' is assigned a value but never used.","'rotnum' is assigned a value but never used.","'rectTop' is defined but never used.","'rectLeft' is defined but never used.","'moveSl' is assigned a value but never used.","'tgsl' is assigned a value but never used.","'play_btn' is assigned a value but never used.","'tgBan' is assigned a value but never used.","'hoverCont' is assigned a value but never used."]