[{"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\index.js":"1","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Gallery.js":"2","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Main.js":"3","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Layout.js":"4","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Video.js":"5","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Album.js":"6","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Profile.js":"7","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\AlbumDetail.js":"8","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\Ban.js":"9","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\Player.js":"10","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\js\\commonFn.js":"11","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\data\\ban.js":"12","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\js\\eventFn.js":"13"},{"size":1214,"mtime":1687502285590,"results":"14","hashOfConfig":"15"},{"size":230,"mtime":1687329662999,"results":"16","hashOfConfig":"15"},{"size":798,"mtime":1687917054948,"results":"17","hashOfConfig":"15"},{"size":1620,"mtime":1687329663000,"results":"18","hashOfConfig":"15"},{"size":232,"mtime":1687329663000,"results":"19","hashOfConfig":"15"},{"size":226,"mtime":1687329662999,"results":"20","hashOfConfig":"15"},{"size":247,"mtime":1687499013671,"results":"21","hashOfConfig":"15"},{"size":3396,"mtime":1687329663000,"results":"22","hashOfConfig":"15"},{"size":31371,"mtime":1687854956637,"results":"23","hashOfConfig":"15"},{"size":7909,"mtime":1687844735011,"results":"24","hashOfConfig":"15"},{"size":5568,"mtime":1687918110045,"results":"25","hashOfConfig":"15"},{"size":14218,"mtime":1687829228010,"results":"26","hashOfConfig":"15"},{"size":506,"mtime":1687329663002,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"quqnz1",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"31"},"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\index.js",[],[],[],"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Gallery.js",["76"],[],"// 갤러리 페이지 컴포넌트\r\nimport React from \"react\";\r\nimport { Gallery_Ban } from \"./components/Ban\";\r\n\r\nconst Gallery = () => {\r\n    return (\r\n        <Gallery_Ban/>\r\n    )\r\n}; // Gallery // \r\n\r\nexport default Gallery;","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Main.js",["77"],[],"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Layout.js",[],[],"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Video.js",["78"],[],"// 갤러리 페이지 컴포넌트\r\nimport React from \"react\";\r\nimport { Video_Ban } from \"./components/Ban\";\r\n\r\nconst video = () => {\r\n    return (\r\n        <Video_Ban cat=\"video\"/>\r\n    )\r\n}; // video // \r\n\r\nexport default video;","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Album.js",["79"],[],"// 앨범 페이지 컴포넌트\r\nimport React from \"react\";\r\nimport {Album_Ban} from \"./components/Ban\";\r\n\r\nconst Album = () => {\r\n    return (\r\n        <Album_Ban cat=\"main\"/>\r\n    )\r\n}; // Album // \r\n\r\nexport default Album;","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\Profile.js",["80"],[],"// 갤러리 페이지 컴포넌트\r\nimport React from \"react\";\r\nimport {Profile_Ban} from \"./components/Ban\";\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <Profile_Ban cat=\"profile\"/>     \r\n    )\r\n}; // Profile // \r\n\r\nexport default Profile;","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\AlbumDetail.js",["81","82","83"],[],"import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport ban_data from \"../data/ban\";\r\n\r\nfunction AlbumDetail() {\r\n  // 반환된 객체에서 각각의 id 속성을 추출!\r\n  const { id } = useParams();\r\n\r\n  // 각각의 id순번 데이터에 접근하기 위한 변수\r\n  const eachAlbum = ban_data.main[id];\r\n\r\n  return (\r\n    <>\r\n      <main id=\"albumlist_bx\" style={{background:eachAlbum.bgcolor}}>\r\n        <section className=\"albumlist_wrap\">\r\n          {/* 1. 좌측 컨텐츠 */}\r\n          <div className=\"contents_left\">\r\n            {/* 1-1. 뒤로가기 버튼 */}\r\n            <div className=\"back_btn\">\r\n              <Link to=\"/al\">\r\n                <span style={{color: eachAlbum.txcolor.indexOf('^') !== -1? eachAlbum.txcolor.split('^')[1] : eachAlbum.txcolor}}>\r\n                  ＜BACK\r\n                </span>\r\n              </Link>\r\n            </div>\r\n            {/* 1-2. 앨범 커버 이미지 */}\r\n            <div className=\"album_cover\">\r\n              <img src={\".\" + eachAlbum.isrc} alt={\"여자아이들의 \" + eachAlbum.mtit + \" 앨범\"} />\r\n            </div>\r\n            {/* 1-3. 앨범 발매일 */}\r\n            <div className=\"release_date\">\r\n              <p style={{color: eachAlbum.txcolor.indexOf('^') !== -1? eachAlbum.txcolor.split('^')[1] : eachAlbum.txcolor}}>\r\n                Release Date\r\n              </p>\r\n              <p style={{color: eachAlbum.txcolor.indexOf('^') !== -1? eachAlbum.txcolor.split('^')[1] : eachAlbum.txcolor}}>\r\n                {eachAlbum.release}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {/* 2. 우측 컨텐츠 */}\r\n          <div className=\"contents_right\">\r\n            {/* 2-1.앨범 타이틀 */}\r\n            <div className=\"album_tit\">\r\n              {/* txcolor 문자열에 ^가 없다면 그냥 txcolor 색상 출력 */}\r\n              <p style={{color: eachAlbum.txcolor.indexOf('^') == -1? eachAlbum.txcolor : eachAlbum.txcolor.split('^')[0]}}>\r\n                {eachAlbum.mtit.replace(/-/g, \"\")}\r\n              </p>\r\n            </div>\r\n            <div className=\"album_info\">\r\n              {/* txcolor 문자열에 ^가 있다면 txcolor.split('^')[1] 색상 출력 */}\r\n              <p style={{color: eachAlbum.txcolor.indexOf('^') !== -1? eachAlbum.txcolor.split('^')[1] : eachAlbum.txcolor}}>\r\n                {eachAlbum.info.split(\"^\").map((segment, index) => (\r\n                  <React.Fragment key={index}>\r\n                    {segment}\r\n                    <br />\r\n                  </React.Fragment>\r\n                ))}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"track-list\">\r\n          <h2 className=\"contents-title\" style={{color: eachAlbum.txcolor.indexOf('^') == -1? eachAlbum.txcolor : eachAlbum.txcolor.split('^')[0]}}>\r\n            TRACK\r\n          </h2>\r\n          <div className=\"list-wrap\">\r\n            <ol>\r\n              { eachAlbum.track.map((x,i)=>\r\n              <li key={i}>\r\n                <span style={{color: eachAlbum.txcolor.indexOf('^') !== -1? eachAlbum.txcolor.split('^')[1] : eachAlbum.txcolor}}>\r\n                  {(i+1)+\".\" + ' ' + x}\r\n                </span>\r\n              </li>\r\n              )\r\n              }\r\n            </ol>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AlbumDetail;\r\n","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\Ban.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],[],"// 배너 컴포넌트 - Ban.js\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// 애니메이션 라이브러리\r\nimport gsap from \"gsap\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n// 제이쿼리\r\nimport $ from \"jquery\";\r\n\r\n// 폰트어썸 임포트\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// 배너 CSS\r\nimport \"../scss/ban.css\";\r\n// // 미디어쿼리CSS\r\n// import \"../scss/media.css\";\r\n\r\n// 배너 데이터\r\nimport ban_data from \"../data/ban\";\r\n\r\n// 메인배너 출력용 컴포넌트\r\nfunction Main_Ban(props) {\r\n    const sel_data = ban_data[props.cat];\r\n\r\n    return (\r\n        <section className=\"banbx\">\r\n            <div className=\"banbxInner\">\r\n                <div className=\"bancont\">\r\n                    <ul className=\"album_wrap\">\r\n                        {sel_data.map((x, i) => (\r\n                            <li className={\"album_set album_set\" + (i + 1)} key={i}>\r\n                                <article className={\"album_cover\" + (i + 1) +\" album_cover\"}>\r\n                                    <div className=\"album_cover_inner\">\r\n                                        <div>\r\n                                            <div className=\"original_author\">\r\n                                                <span>{x.altop_txt.split(\"^\")[0]}</span>\r\n                                                <span>/</span>\r\n                                                <span>{x.altop_txt.split(\"^\")[1]}</span>\r\n                                            </div>\r\n                                            <em>{x.mtit}</em>\r\n                                        </div>\r\n                                        <div className=\"release_date\">\r\n                                            <div className=\"date\">\r\n                                                <span>{x.albot_txt.split(\"^\")[0]}</span>\r\n                                                <span>{x.albot_txt.split(\"^\")[1]}</span>\r\n                                            </div>\r\n                                            <div className=\"singer\">(G)I-DLe</div>\r\n                                        </div>\r\n                                    </div>\r\n                                <aside className=\"album_cd1\">\r\n                                    <a href=\"#\">\r\n                                        <img src={x.isrc} alt=\"앨범이미지1\" />\r\n                                    </a>\r\n                                    <div className=\"cd_center_circle\"></div>\r\n                                </aside>\r\n                                </article>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n// 프로필배너 출력용 컴포넌트\r\nfunction Profile_Ban(props) {\r\n    const sel_data = ban_data[props.cat];\r\n\r\n    $(() => {\r\n        // 멤버 프로필 리스트 클릭시 큰이미지박스 보이기\r\n        const tgImg = $(\".profile_img > li\");\r\n        tgImg.click(function () {\r\n            // 1. 클릭된 이미지 경로 읽어오기\r\n            let isrc = $(this).find(\"img\").attr(\"src\");\r\n\r\n            // 2. 클릭된 이미지 경로를 큰 이미지에 src로 넣기\r\n            $(\".gimg > img\").attr(\"src\", isrc);\r\n\r\n            // 3. 큰이미지박스 보이기\r\n            $(\"#imbx\")\r\n                .css({ display: \"block\" })\r\n                .find(\".imgbx\")\r\n                .eq($(this).index())\r\n                .css({ display: \"table\" })\r\n                .siblings()\r\n                .css({ display: \"none\" });\r\n        });\r\n\r\n        // 4. 닫기버튼 클릭시 큰이미지박스 숨기기\r\n        $(\".close_btn\").click(function () {\r\n            $(this).parent().css({ display: \"none\" });\r\n        });\r\n    });\r\n\r\n    // site svg 애니메이션\r\n    const textWave = () => {\r\n        const textPath = document.querySelector(\"#text-path\");\r\n        if (!textPath) return;\r\n        const textContainer = document.querySelector(\"#text-container\");\r\n        let path = document.querySelector(textPath.getAttribute(\"href\"));\r\n        let pathLength = path.getTotalLength();\r\n\r\n        function updateTextPathOffset(offset) {\r\n            textPath.setAttribute(\"startOffset\", offset);\r\n        }\r\n\r\n        updateTextPathOffset(pathLength);\r\n\r\n        function onScroll() {\r\n            requestAnimationFrame(function () {\r\n                let rect = textContainer.getBoundingClientRect();\r\n                let scrollPercent = rect.y / window.innerHeight;\r\n                updateTextPathOffset(scrollPercent * 2 * pathLength);\r\n            });\r\n        }\r\n\r\n        window.addEventListener(\"scroll\", onScroll);\r\n\r\n        $(window).scroll(function () {\r\n            if (!document.querySelector(\"#text-container\")) return;\r\n            let scroll = $(window).scrollTop();\r\n            const sec_start1 = $(\"#text-container\").offset().top;\r\n            const siteListTitle = $(\"#text-curve\");\r\n\r\n            if (scroll > sec_start1 && siteListTitle.length > 0) {\r\n                gsap.to(siteListTitle, { duration: 0.8, opacity: 1, y: 3, delay: 1.1 });\r\n            }\r\n        });\r\n    };\r\n\r\n    function setFn() {\r\n        setTimeout(textWave, 1000);\r\n    }\r\n\r\n    // setTimeout 썼을때 페이지하단 카운트되는것 방지!\r\n    useEffect(setFn, []);\r\n\r\n    return (\r\n        <>\r\n            {sel_data.map((x, i) => (\r\n                <main key={i} id=\"kv_wrap\">\r\n                    {/* 1. 전체멤버 프로필 */}\r\n                    <section className=\"kv\">\r\n                        <div>\r\n                            <img src={x.isrc} alt=\"여자아이들 이미지\" />\r\n                        </div>\r\n                    </section>\r\n\r\n                    <div className=\"intro_profile\">\r\n                        {/* 2. 그룹 소개 */}\r\n                        <section className=\"group_intro\">\r\n                            <h2 className=\"conttents_tit\">{x.mtit}</h2>\r\n                            <p className=\"contents-desc\">{x.stit}</p>\r\n                        </section>\r\n\r\n                        {/* 스크롤시 등장하는 웨이브 텍스트 */}\r\n                        <svg id=\"text-container\" viewBox=\"0 0 1000 200\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                id=\"text-curve\"\r\n                                d=\"M0 100s269.931 86.612 520 0c250.069-86.612 480 0 480 0\"\r\n                                fill=\"none\"\r\n                            ></path>\r\n\r\n                            <text y=\"40\">\r\n                                <textPath id=\"text-path\" href=\"#text-curve\" startOffset=\"442.8510130819152\">\r\n                                    멤버들에 대해 궁금하신가요?\r\n                                </textPath>\r\n                            </text>\r\n                        </svg>\r\n\r\n                        {/* 3. 개별멤버 프로필 */}\r\n                        <section className=\"members_intro\">\r\n                            <div className=\"members_inner\">\r\n                                <div className=\"intro_title\">\r\n                                    <h2>MEMBER</h2>\r\n                                </div>\r\n                                <ul className=\"profile_img\">\r\n                                    {x.sub.map((v, n) => (\r\n                                        <li key={n}>\r\n                                            <div>\r\n                                                <img src={v.img} alt={v.name + \"의 프로필\"} />\r\n                                            </div>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n\r\n                                {/* 4. 큰이미지 박스 */}\r\n                                <section id=\"imbx\">\r\n                                    {x.sub.map((item, i) => (\r\n                                        <div className=\"imgbx\" key={i}>\r\n                                            {/* 큰 이미지 */}\r\n                                            <div className=\"gimg\">\r\n                                                <img src=\"\" alt=\"큰이미지\" />\r\n                                            </div>\r\n                                            <dl className=\"gimgDetail\">\r\n                                                <dt>{item.name}</dt>\r\n                                                <dd>{item.birth}</dd>\r\n                                            </dl>\r\n                                            <button type=\"button\" className=\"close_btn\" title=\"팝업 닫기\"></button>\r\n                                        </div>\r\n                                    ))}\r\n                                </section>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </main>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\n// 비디오배너 출력용 컴포넌트\r\nfunction Video_Ban(props) {\r\n    // 데이터 셋팅\r\n    const vdata = ban_data[props.cat];\r\n\r\n    useEffect(() => {\r\n        // 컴포넌트가 마운트 될 때 #gridRadio 클릭\r\n        const gridbtn = document.querySelector(\"#gridRadio\");\r\n        if (gridbtn) {\r\n            gridbtn.click();\r\n        }\r\n    }, []);\r\n\r\n    // 비디오 보이기 함수\r\n    const showVid = (src, tit) => {\r\n        let ifr = $(\".vid_ifr_inner iframe\");\r\n        const ifrbx = $(\".ifr_bg_bx\");\r\n        // 1. 아이프레임 src넣기\r\n        ifr.attr(\"src\", src + \"?autoplay=1\");\r\n        // 2. 아이프레임 title넣기\r\n        ifr.attr(\"title\", tit);\r\n        ifrbx.css(\"display\", \"block\");\r\n\r\n        // 닫기버튼 클릭시 동영상박스 없앰\r\n        $(\".vid_close_btn\").click(function () {\r\n            $(\".ifr_bg_bx\").css({ display: \"none\" });\r\n        });\r\n    }; // Showvid //\r\n\r\n    // 데이터 선택하기 : Hook 데이터 구성\r\n    // -> 데이터 정렬을 반영하기 위해 정렬상태값을 같이 설정함!\r\n    // 데이터구성 : [배열데이터,정렬상태값]\r\n    // 정렬상태값 : 1 - 오름차순, 2 - 내림차순, 3 - 정렬전\r\n    let [mvd, setMvd] = useState([vdata, 3]);\r\n\r\n    // 데이터 건수 : Hook 데이터 구성\r\n    let [tot, setTot] = useState(vdata.length);\r\n\r\n    // 자동완성 상태변수\r\n    const [autocomplete, setAutocomplete] = useState([]);\r\n\r\n    // 사용자입력값 상태변수\r\n    const [resultTit, setResultTit] = useState(null);\r\n\r\n    // 비디오리스트 타이틀 출력 상태변수\r\n    const [vidTit, setVidTit] = useState(<h3 className=\"mv_item_tit\">Video Clip</h3>);\r\n\r\n    // 데이터 검색 출력 함수\r\n    const schList = () => {\r\n        // 검색요소 대상 : #searchInput\r\n        let input = document.querySelector(\"#searchInput\");\r\n\r\n        // 1. 검색어 읽기 - 소문자로 변환\r\n        let keyword = input.value.toLowerCase();\r\n\r\n        // 2. 검색어 입력확인분기\r\n        if (keyword.trim() === \"\") {\r\n            // 입력창으로 다시보내기\r\n            input.focus();\r\n            // 기존 정렬상태로 돌아가기\r\n            setMvd([vdata, mvd[3]]);\r\n            // 검색건수 초기화\r\n            setTot(vdata.length);\r\n            return;\r\n        }\r\n\r\n        // 3. 데이터 검색하기\r\n        // 배열값 다중검색 메서드 -> filter()\r\n        let searchList = vdata.filter((v) => {\r\n            if (v.txt.toLowerCase().indexOf(keyword) !== -1) return true;\r\n        });\r\n\r\n        // 4. 검색결과 리스트 업데이트하기\r\n        // 검색결과 리스트 업데이트\r\n        setMvd([searchList, 3]);\r\n    }; // schList 함수\r\n\r\n    // 검색어 자동완성 함수\r\n    const searchAuto = (e) => {\r\n        let userInp = document.querySelector(\"#searchInput\").value;\r\n        // 입력창에서 텍스트 입력시 자동완성 데이터 업데이트\r\n        // 검색어 입력시 관련 값이 있을 경우만 css 적용!\r\n        console.log(\"텍스트입력\")\r\n        $(\".panels\").css({ display: \"block\" });\r\n\r\n        // 입력한 검색어와 관련된 데이터가 있을 경우에만 값을 출력\r\n        let searchList = vdata.filter((v) => {\r\n            if (v.txt.toLowerCase().indexOf(userInp) !== -1) return true;\r\n        });\r\n\r\n        // 검색어가 비었을때 자동완성 데이터 초기화\r\n        if (userInp.trim() === \"\" || searchList.length == 0) {\r\n            setAutocomplete([]);\r\n            $(\".panels\").css({ display: \"none\" });\r\n            return;\r\n        }\r\n        setAutocomplete(searchList.map((item) => item.txt));\r\n    }; // searchAuto 함수\r\n\r\n    // 입력창에서 엔터키 누르면 검색함수 호출!\r\n    const enterKy = (e) => {\r\n        // 엔터쳤을때 데이터 업데이트!\r\n        if (e.key === \"Enter\") {\r\n            schList();\r\n            const userInp = e.target.value.toLowerCase();\r\n            const completeList = vdata.filter((item) => {\r\n                if (item.txt.toLowerCase().indexOf(userInp) !== -1) return true;\r\n            });\r\n\r\n            // 검색결과 타이틀 출력 - 입력값이 있고, 데이터가 있는 경우에만!\r\n            if (userInp.trim() !== \"\" && completeList.length !== 0) {\r\n                setResultTit(\r\n                    <>\r\n                        <strong className=\"inputVal\">{userInp}</strong>\r\n                        <span>검색결과 ({completeList.length})</span>\r\n                    </>\r\n                );\r\n\r\n                setVidTit(<h3 className=\"mv_item_tit\">Video Clip</h3>);\r\n\r\n                $(\".sortbx\").css({ display: \"block\" });\r\n                // 검색 데이터가 하나만 있는 경우\r\n                if (completeList.length === 1) {\r\n                    $(\".sortbx\").css({ display: \"none\" });\r\n                }\r\n            }\r\n            // 검색결과 없는 경우\r\n            else if (completeList.length == 0) {\r\n                setResultTit(\"검색 결과가 없습니다\");\r\n                $(\".sortbx\").css({ display: \"none\" });\r\n                setVidTit(null);\r\n            }\r\n            // 초기화면 구성 - 위 두 조건을 만족하지 않으면 null값 반환\r\n            else {\r\n                setResultTit(null);\r\n                setVidTit(<h3 className=\"mv_item_tit\">Video Clip</h3>);\r\n                $(\".sortbx\").css({ display: \"block\" });\r\n            }\r\n        }\r\n    }; // enterKy 함수\r\n\r\n    // 리스트 정렬 변경함수\r\n    const sortList = (e) => {\r\n        // 1. 선택옵션값 : 1 - 오름차순 / 2 - 내림차순\r\n        let opt = e.target.value;\r\n\r\n        // 임시변수 : 배열데이터만 가져옴\r\n        let temp = mvd[0];\r\n\r\n        // 2. 옵션에 따른 정렬 반영하기\r\n        temp.sort((x, y) => {\r\n            if (opt == 1) {\r\n                // 오름차순(1) - 최솟값부터 정렬\r\n                return x.txt == y.txt ? 0 : x.txt > y.txt ? 1 : -1;\r\n            } else if (opt == 2) {\r\n                // 내림차순(2) - 최댓값부터 정렬\r\n                return x.txt == y.txt ? 0 : x.txt > y.txt ? -1 : 1;\r\n            }\r\n        });\r\n        // 3. 데이터 정렬변경 반영하기\r\n        // setMvd([배열데이터,정렬상태값])\r\n        setMvd([temp, Number(opt)]);\r\n    }; // sortList 함수\r\n\r\n    // #listRadio 클릭시 디스플레이 리스트형태로 변경!\r\n    const displayList = (e) => {\r\n        // 현재 클릭한 요소에 클래스 'on' 추가\r\n        e.target.classList.add(\"on\");\r\n        const rdobtn = document.querySelectorAll(\".sortbx input[type='radio']\");\r\n        // 클릭한 요소 외 요소는 클래스 'on' 제거\r\n        rdobtn.forEach((item) => {\r\n            if (e.target !== item) {\r\n                item.classList.remove(\"on\");\r\n            }\r\n        });\r\n\r\n        // 클릭한 요소의 아이디값에 따라 개별 css 적용\r\n        // 클릭한 요소가 listbtn일때\r\n        if (e.target.id === \"listRadio\") {\r\n            $(\"#sub_mv\").css({ \"flex-direction\": \"column\" });\r\n            $(\".mvbx\").css(\"width\", \"100%\");\r\n        }\r\n        // 클릭한 요소가 gridbtn일때\r\n        else {\r\n            $(\"#sub_mv\").css({ flexWrap: \"wrap\", flexDirection: \"row\" });\r\n            $(\".mvbx\").css(\"width\", \"50%\");\r\n\r\n            const winWidth = window.innerWidth;\r\n            if (winWidth > 1090) {\r\n                $(\".mvbx\").css(\"width\", \"31%\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // 체크박스 요소\r\n    let chkele = document.querySelectorAll(\".chkhdn\");\r\n    // 체크박스 검색함수\r\n    const chkSearch = (e) => {\r\n        // 1. 체크박스 아이디 : 검색항목의 값(sort)\r\n        let chkid = e.target.id;\r\n        // 2. 체크박스 체크여부 : checked (true/false)\r\n        let chked = e.target.checked;\r\n        console.log(\"아이디:\", chkid, \"\\n체크여부:\", chked);\r\n\r\n        // 임시변수 : 기존입력된 데이터 가져옴\r\n        let temp = mvd[0];\r\n\r\n        // 결과집합변수\r\n        let newList = [];\r\n\r\n        // 3. 체크박스 체크갯수 세기 : 1개 초과시 배열 합쳐서 결과 출력!\r\n        let num = 0;\r\n        chkele.forEach((v) => {\r\n            if (v.checked) num++;\r\n        });\r\n        console.log(\"체크갯수:\", num);\r\n\r\n        // 4. 체크박스 체크여부에 따른 분기\r\n        // (1) 체크여부가 true일때 해당 검색어로 검색!\r\n        if (chked) {\r\n            // 현재 데이터 변수에 담기\r\n            let nowdt = vdata.filter((v) => {\r\n                if (v.sort === chkid) return true;\r\n            }); // filter\r\n\r\n            // 체크갯수가 1초과일때 배열합치기! (스프레드연산자 사용)\r\n            if (num > 1) {\r\n                // 기존데이터(temp) + 새데이터(noWdt)\r\n                newList = [...temp, ...nowdt];\r\n            }\r\n            // 체크갯수 1일 때\r\n            else {\r\n                newList = nowdt;\r\n            }\r\n        } // if : 체크박스 true\r\n\r\n        // (2) 체크박스가 false일때 데이터지우기\r\n        else {\r\n            console.log(\"지울 데이터:\", chkid, temp.length);\r\n            // splice삭제시 일반for문으로 --처리해야함\r\n            for (let i = 0; i < temp.length; i++) {\r\n                // console.log(temp[i].sort);\r\n                // 조건은 체크박스 풀린 값\r\n                if (temp[i].sort === chkid) {\r\n                    // 배열지우기 메서드 : splice(순번,개수)\r\n                    temp.splice(i, 1);\r\n                    // splice로 지우면 배열항목자체가 삭제되므로 for문 돌때 개수가 줄어듦\r\n                    // 따라서 다음번호를 지울때 ++을 --처리 필수!\r\n                    i--;\r\n                } /////// if ////////////\r\n            }\r\n            // 결과처리하기 : 삭제처리된 temp 결과에 넣기!\r\n            newList = temp;\r\n        }\r\n\r\n        // 4. 검색결과 리스트 업데이트\r\n        // Hook 데이터변수+데이터건수\r\n        setMvd([newList], 2);\r\n        setTot(newList.length);\r\n    }; // chkSearch 함수\r\n\r\n    function CatList(props) {\r\n        // 선택데이터\r\n        let mvd = props.dt;\r\n\r\n        return (\r\n            <main className=\"video_wrap\">\r\n                <div className=\"contents_inner\">\r\n                    {vidTit && <>{vidTit}</>}\r\n                    <section id=\"sub_mv\">\r\n                        {mvd.map((x, i) => (\r\n                            <div className=\"mvbx\" key={i} onClick={() => showVid(x.vsrc, x.txt)}>\r\n                                <figure className=\"mv_img\">\r\n                                    <img src={x.isrc} />\r\n                                </figure>\r\n                                <figcaption className=\"mv_date\">\r\n                                    <p>{x.txt}</p>\r\n                                    <p>{x.date}</p>\r\n                                </figcaption>\r\n                            </div>\r\n                        ))}\r\n                    </section>\r\n                    <div className=\"ifr_bg_bx\" style={{ display: \"none\", transition: \"all 1s\" }}>\r\n                        <div className=\"vid_ifr_wrap\">\r\n                            <button type=\"button\" className=\"vid_close_btn\">\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    id=\"page23-band1941-Card293262_video-modal-closeIcon\"\r\n                                    className=\"closeIcon\"\r\n                                    viewBox=\"0 0 30 30\"\r\n                                    fill=\"none\"\r\n                                    focusable=\"false\"\r\n                                >\r\n                                    <path\r\n                                        fillRule=\"evenodd\"\r\n                                        clipRule=\"evenodd\"\r\n                                        d=\"M29.998 14.75C29.864 6.578 23.201 0 15 0l-.25.002C6.578.136 0 6.8 0 15c0 8.286 6.716 15 15 15l.25-.002C23.422 29.864 30 23.201 30 15l-.002-.25ZM14.766 1.001l.24-.002.237.002c7.534.129 13.631 6.211 13.755 13.764l.002.24-.002.243c-.129 7.528-6.211 13.625-13.764 13.75l-.24.001-.24-.002C7.136 28.869 1 22.653 1 15 1 7.355 7.132 1.127 14.766 1.002Z\"\r\n                                        fill=\"currentColor\"\r\n                                    ></path>\r\n                                    <path\r\n                                        fillRule=\"evenodd\"\r\n                                        clipRule=\"evenodd\"\r\n                                        d=\"M15 14.396 10.605 10l-.605.603L14.397 15 10 19.396l.605.604L15 15.604 19.396 20l.604-.604L15.604 15 20 10.603 19.396 10 15 14.396Z\"\r\n                                        fill=\"currentColor\"\r\n                                    ></path>\r\n                                </svg>\r\n                            </button>\r\n                            <div className=\"vid_ifr_inner\">\r\n                                <iframe src=\"\" title=\"\"></iframe>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <main className=\"contents_wrap\">\r\n            {/* <h2>VIDEO</h2> */}\r\n            <div className=\"contents_inner\">\r\n                {/* 모듈코드 */}\r\n                <section className=\"schbx\">\r\n                    {/* 1. 옵션선택박스 */}\r\n                    <div id=\"search_filter_bx\">\r\n                        <div className=\"schopt\">\r\n                            {/* 검색박스 */}\r\n                            <div className=\"searching\">\r\n                                {/* 검색버튼 돋보기아이콘 */}\r\n                                <FontAwesomeIcon icon={faSearch} className=\"schbtn\" title=\"키워드 검색\" />\r\n                                {/* 입력창 */}\r\n                                <input\r\n                                    id=\"searchInput\"\r\n                                    type=\"text\"\r\n                                    maxLength=\"14\"\r\n                                    placeholder=\"검색어를 입력해주세요\"\r\n                                    onKeyUp={enterKy}\r\n                                    onChange={searchAuto}\r\n                                />\r\n                            </div>\r\n                            {/* 키워드 검색시 연관검색어 팝업 */}\r\n                            <div id=\"keyword_collection\">\r\n                                <div className=\"panels\">\r\n                                    <ul>\r\n                                        {autocomplete.map((item, i) => (\r\n                                            <li key={i}>\r\n                                                <span>{item}</span>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* 체크박스구역 */}\r\n                        <div className=\"chkbx\">\r\n                            <ul>\r\n                                <li>\r\n                                    <h2>Category</h2>\r\n                                    {/* 체크박스리스트 */}\r\n                                    <ol>\r\n                                        <li>\r\n                                            Music Videos\r\n                                            <input type=\"checkbox\" id=\"mv\" className=\"chkhdn\" onChange={chkSearch} />\r\n                                            <label htmlFor=\"mv\" className=\"chklb\"></label>\r\n                                        </li>\r\n                                        <li>\r\n                                            V-logs\r\n                                            <input type=\"checkbox\" id=\"vlog\" className=\"chkhdn\" onChange={chkSearch} />\r\n                                            <label htmlFor=\"vlog\" className=\"chklb\"></label>\r\n                                        </li>\r\n                                    </ol>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    {/* 2. 결과리스트박스 */}\r\n                    <div className=\"listbx\">\r\n                        {/* 검색결과 타이틀 */}\r\n                        {resultTit && <div className=\"restit\">{resultTit}</div>}\r\n                        {/* 정렬선택박스 */}\r\n                        <aside className=\"sortbx\">\r\n                            <select className=\"sel\" name=\"sel\" id=\"sel\" onChange={sortList}>\r\n                                <option value=\"0\">정렬선택</option>\r\n                                <option value=\"1\">오름차순</option>\r\n                                <option value=\"2\">내림차순</option>\r\n                            </select>\r\n                            <label htmlFor=\"listRadio\">\r\n                                <input type=\"radio\" name=\"listRadio\" id=\"listRadio\" onClick={displayList}></input>\r\n                            </label>\r\n                            <label htmlFor=\"gridRadio\">\r\n                                <input type=\"radio\" name=\"gridRadio\" id=\"gridRadio\" onClick={displayList}></input>\r\n                            </label>\r\n                        </aside>\r\n                        {/* 비디오 리스트 컴포넌트 \r\n                전달속성 dt - 리스트 데이터 */}\r\n                        <CatList dt={mvd[0]} />\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\n// 앨범 출력용 컴포넌트\r\nfunction Album_Ban() {\r\n    const sel_data = ban_data.main;\r\n\r\n    return (\r\n        <main className=\"contents_wrap\">\r\n            <h2 className=\"mttit\">DISCOGRAPHY</h2>\r\n            <div className=\"contents_inner\">\r\n                <div className=\"album_list\">\r\n                    <ul>\r\n                        {sel_data.map((x, i) => (\r\n                            <li key={i}>\r\n                                <Link to={`/album/${i}`}>\r\n                                    <img src={x.isrc} alt={\"여자아이들의 \" + x.mtit + \" 앨범\"} />\r\n                                    <div className=\"albumInfo_box\">\r\n                                        <div className=\"txt_align\">\r\n                                            <h5>{x.altop_txt.split(\"^\")[1]}</h5>\r\n                                            <h2>{x.mtit.replace(/-/g, \"\")}</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\n// 갤러리1 컴포넌트\r\nfunction Gal1_comp(props) {\r\n    const galVal = props.cat[0];\r\n\r\n    return (\r\n        <>\r\n            <h3>Album Title : {galVal.galtit}</h3>\r\n            <div className=\"gal1_cont\">\r\n                {/* 앨범명 */}\r\n                <div className=\"gal_img_wrap\">\r\n                    <div className=\"gal_img_inner\">\r\n                        <ul>\r\n                            {galVal.galisrc.map((x, i) => (\r\n                                <li className={\"gal1_img\" + (i + 1)} key={i}>\r\n                                    <img\r\n                                        src={`./images/gallery/${galVal.galtit}/${x}.jpg`}\r\n                                        alt={\"여자아이들의 \" + galVal.galtit + \" 앨범이미지\"}\r\n                                    />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n// // 갤러리2 컴포넌트\r\n// function Gal2_comp\r\n\r\n// 갤러리 출력용 컴포넌트\r\nfunction Gallery_Ban() {\r\n    const sel_data = ban_data.gallery;\r\n    let prevIndex = 1;\r\n\r\n    const firstSpan = $(\".gallery_dot1\");\r\n\r\n    const [handleClick, setHandleClick] = useState(false);\r\n\r\n    const handleNextClick = () => {\r\n        setHandleClick((prevIndex) => (prevIndex + 1) % sel_data.length); // 다음 갤러리 인덱스로 변경\r\n    };\r\n\r\n    const handlePrevClick = () => {\r\n        setHandleClick((prevIndex) => (prevIndex - 1 + sel_data.length) % sel_data.length); // 이전 갤러리 인덱스로 변경\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <main className=\"contents_wrap\">\r\n                <h2>Gallery</h2>\r\n                {/* 컴포넌트 출력 부분 */}\r\n                <Gal1_comp cat={sel_data} />\r\n            </main>\r\n            <nav className=\"go_lft_rgt_btn\">\r\n                <div className=\"lft_rgt_btn_wrap\">\r\n                    <div id=\"go_prev_btn\" onClick={handlePrevClick}>\r\n                        <svg viewBox=\"0 0 6 10\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\">\r\n                            <path d=\"m5.216 9.4-4.2-4.2 4.2-4.2\" stroke=\"#000\" strokeWidth=\".7\"></path>\r\n                        </svg>\r\n                    </div>\r\n                    <div id=\"go_btn_dots\">\r\n                        {sel_data.map((_, index) => (\r\n                            <span\r\n                                key={index}\r\n                                className={`gallery_dot${index + 1} ${index === handleClick ? \"active\" : \"\"}`}\r\n                                style={{ fontWeight: index === handleClick ? \"700\" : \"400\" }}\r\n                            >\r\n                                I\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                    <div id=\"go_next_btn\" onClick={handleNextClick}>\r\n                        <svg viewBox=\"0 0 6 10\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\">\r\n                            <path d=\"m5.216 9.4-4.2-4.2 4.2-4.2\" stroke=\"#000\" strokeWidth=\".7\"></path>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Main_Ban, Profile_Ban, Video_Ban, Album_Ban, Gallery_Ban };\r\n","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\components\\Player.js",["104","105","106","107","108","109","110","111","112"],[],"// 플레이어 컴포넌트 - Player.js\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\n// 플레이어CSS\r\nimport \"../scss/player.css\";\r\n// 메인함수\r\nimport { handleHover, handleTime, currentTime2 } from \"../js/commonFn\";\r\nimport $ from \"jquery\";\r\n// 배너 데이터\r\nimport ban_data from \"../data/ban\";\r\nimport { PropTween } from \"gsap/gsap-core\";\r\n\r\n// 플레이어 출력용 컴포넌트\r\nfunction Player(props) {\r\n  // LP 회전각도 초기화 변수\r\n  let rotation = 0;\r\n\r\n  // 전체곡순번\r\n  const [songSeq, setSongSeq] = useState(0);\r\n\r\n  let audio, play_btn, lp;\r\n\r\n  const audioPlayer = useRef(null);\r\n  const sel_data = ban_data[props.cat];\r\n  const [volume, setVolume] = useState(1);\r\n\r\n  function handleplayer() {\r\n    audio = $(\"#music\")[0];\r\n    play_btn = $(\".play_song_btn\");\r\n    lp = $(\".artwork\");\r\n  } // handleplayer 함수\r\n\r\n  const audtit = {\r\n    \"I feel\": [{\"0\":\"Queencard\"},{\"162\":\"Allergy\"},{\"324\":\"Lucid\"},{\"500\":\"All Night\"},{\"646\":\"Paradise\"},{\"835\":\"Peter Pan\"}],\r\n    \"I love\": [{\"0\":\"LOVE\"},{\"196\":\"Change\"},{\"400\":\"Reset\"},{\"582\":\"Sculpture\"},{\"769\":\"DARK (X-file)\"}],\r\n    \"I am\": [{\"0\":\"LATATA\"},{\"202\":\"달라 ($$$)\"},{\"414\":\"MAZE\"},{\"616\":\"DON'T TEXT ME\"},{\"830\":\"알고 싶어\"},{\"1038\":\"들어줘요\"}],\r\n  }\r\n\r\n  let audseq = 0;\r\n  let albtxt;\r\n  let sec=0;\r\n  let dur=0;\r\n  let protsts=false;\r\n\r\n  function upAlbumTxt(){  \r\n    setTimeout(()=>{\r\n      // 앨범이름은 오디오가 로딩된 후 시차로 실행!\r\n      let temp = $(\"#album\").text();\r\n      console.log(\"I순번:\",temp.indexOf('I'),temp);\r\n      if(temp.indexOf('I')===0){ \r\n        protsts = false;\r\n        albtxt = temp;\r\n        console.log(\"flase처리!!!\");\r\n      }\r\n      else protsts=true;\r\n    },100);\r\n  }\r\n\r\n  \r\n  function updateAudio(){\r\n    let alEle = document.querySelector(\"#album\");\r\n    $(\"#music\").on(\"timeupdate\",()=>{\r\n      if(alEle.innerText.indexOf('I')===0){ \r\n        protsts = false;\r\n        albtxt = alEle.innerText;\r\n      }\r\n      else{\r\n        protsts = true;\r\n      }\r\n      console.log(protsts);\r\n      if(protsts) return;\r\n      \r\n      if(!currentTime2||!albtxt||!audtit[albtxt]) return;\r\n\r\n\r\n      sec = Math.floor(audio.currentTime);\r\n      dur = Math.floor(audio.duration);\r\n\r\n      let ct =audtit[albtxt].map(v=>Object.keys(v));\r\n      console.log(sec,albtxt,ct);\r\n\r\n      ct.forEach((v,i)=>{\r\n        let n1 = ct[i][0];\r\n        let n2 = i+1==ct.length?dur:ct[i+1][0];\r\n        // console.log(\"범위:\",n1,\"~\",n2,\"/길이:\",ct.length);\r\n \r\n        if(sec>=n1 && sec<n2){\r\n          // console.log(\"찍을값:\",audtit[albtxt][i][n1]);\r\n          $(\"#song\").text(audtit[albtxt][i][n1]);         \r\n        }\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n  $(document).ready(function () {\r\n    // Player 함수\r\n    handleplayer();\r\n    handleTime()\r\n    // CD Hover함수\r\n    handleHover();\r\n    // CD Wheel 함수\r\n    // handleWheel();\r\n\r\n\r\n    $(\"#slider\").click(()=>{\r\n      console.log(3333,sec);\r\n      audseq = 0;\r\n      // 재생/멈춤/이전곡/다음곡시에 앨범제목 업데이트!\r\n      upAlbumTxt();\r\n    })\r\n  });\r\n  \r\n  // 볼륨조절 함수\r\n  const volumeChange = (event) => {\r\n    const volumeValue = event.target.value;\r\n    audio.volume = volumeValue;\r\n    setVolume(volumeValue);\r\n  };\r\n\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n  const soundRef = useRef(null);\r\n  let rotsts = 1;\r\n\r\n  // 다음 버튼 클릭시 다음 순번부터 곡 재생 (1~0)\r\n  const currentPlayStop = (e) => {\r\n    play_btn.toggleClass(\"active\");\r\n    // console.log(\"재생멈춤버튼!!!\");\r\n    /* active 클래스 가지고있으면 이미지 변경! */\r\n    if (play_btn.hasClass(\"active\")) {\r\n      play_btn.find(\"img\").attr(\"src\", \"./images/player/bx-pause.svg\");\r\n      updateAudio();\r\n      audio.play();\r\n      rotsts = 1;\r\n      rotateLp();\r\n    } else {\r\n      play_btn.find(\"img\").attr(\"src\", \"./images/player/bx-play-circle.svg\");\r\n      audio.pause();\r\n      rotsts = 0;\r\n    }\r\n    // 재생/멈춤/이전곡/다음곡시에 앨범제목 업데이트!\r\n    upAlbumTxt();\r\n  };\r\n\r\n  const rotateLp = () => {\r\n    // console.log(\"상태값:\",rotsts)\r\n    // 회전각 1씩 증가!\r\n    rotation += 1;\r\n    // 1씩 증가된 회전각 만큼 회전\r\n    lp.css(\"transform\", \"rotate(\" + rotation + \"deg)\");\r\n    if (rotsts && play_btn.hasClass(\"active\")) setTimeout(rotateLp, 10);\r\n  };\r\n\r\n  // 다음 버튼 클릭시 다음 순번부터 곡 재생 (1~0)\r\n  const playNextSong = () => {\r\n    const nextIndex = (currentSongIndex + 1) % sel_data.length;\r\n    setCurrentSongIndex(nextIndex);\r\n    setSongSeq(nextIndex);\r\n\r\n    if (play_btn.hasClass(\"active\")) {\r\n      setTimeout(() => audio.play(), 10);\r\n      setSongSeq(nextIndex);\r\n    }\r\n    // 재생/멈춤/이전곡/다음곡시에 앨범제목 업데이트!\r\n    upAlbumTxt();\r\n\r\n  };\r\n\r\n  const playPrevSong = () => {\r\n    const prevIndex = (currentSongIndex - 1 + sel_data.length) % sel_data.length;\r\n    setCurrentSongIndex(prevIndex);\r\n    const audioSrc = sel_data[prevIndex].vsrc;\r\n    // console.log(prevIndex);\r\n    setSongSeq(prevIndex);\r\n\r\n    if (play_btn.hasClass(\"active\")) {\r\n      setTimeout(() => audio.play(), 10);\r\n    }\r\n    // console.log(audio);\r\n    // 재생/멈춤/이전곡/다음곡시에 앨범제목 업데이트!\r\n    upAlbumTxt();\r\n  };\r\n\r\n  const srcList = [\"./audios/i feel.mp3\", \"./audios/Expectations.mp3\", \"./audios/Nxde.mp3\", \"./audios/i love.mp3\", \"./audios/dumdi dumdi.mp3\", \"./audios/i am.mp3\", \"./audios/tomboy.mp3\"];\r\n\r\n  // main 배열의 각 순번 별로 데이터 접근 - currentSongIndex : 0, 1, 2, 3,..\r\n  const x = ban_data.main[currentSongIndex];\r\n\r\n  // 체크함수 ///////\r\n  const chkFn = () => {\r\n    handleplayer();\r\n    updateAudio();\r\n    audio.pause();\r\n    rotsts = 0;\r\n  }; ///////////// chkFn ////////////\r\n\r\n  // 페이지로딩시 체크코드\r\n  useEffect(chkFn,[]);\r\n\r\n  return (\r\n    <div className={\"player\"}>\r\n      <span id=\"arm\"></span>\r\n      <ul>\r\n        <li className=\"artwork\">\r\n          <a href=\"#\">\r\n            <img src={x.isrc} alt=\"레코드이미지\" />\r\n          </a>\r\n        </li>\r\n        <li className=\"info\">\r\n          {/* 곡 정보 */}\r\n          <h1 id=\"album\">{x.mtit.replace(/-/g, \"\")}</h1>\r\n          <h4 id=\"artist\">(G)I-DLe</h4>\r\n          <h2 id=\"song\">{x.stit == \"\" ? x.mtit.replace(/-/g, \"\") : x.stit}</h2>\r\n          <div className=\"button-items\">\r\n            <audio id=\"music\" src={srcList[songSeq]}></audio>\r\n            {/* 음반 리스트 */}\r\n            <div id=\"slider\">\r\n              {/* 음원 재생시간 프로그레스바 */}\r\n              <div id=\"elapsed\"></div>\r\n              <div id=\"buffered\"></div>\r\n            </div>\r\n            {/* 현재 재생시간 */}\r\n            <p id=\"progress_timer\" className=\"timer\">\r\n              00:00\r\n            </p>\r\n            {/* 총 재생시간 */}\r\n            <p id=\"total_timer\" className=\"timer\">\r\n              <span className=\"tot1\">00</span>:<span className=\"tot2\">00</span>\r\n            </p>\r\n            <div className=\"controls\">\r\n              <span className=\"prev_song_btn\" onClick={playPrevSong}>\r\n                <i className=\"bx bx-skip-previous\"></i>\r\n              </span>\r\n              <span className=\"play_song_btn\" onClick={currentPlayStop}>\r\n                <img src={\"./images/player/bx-play-circle.svg\"} alt=\"정지버튼\" />\r\n              </span>\r\n              <span className=\"next_song_btn\" onClick={playNextSong}>\r\n                <i className=\"bx bx-skip-next\"></i>\r\n              </span>\r\n              <div className=\"slider\">\r\n                <div className=\"volume\"></div>\r\n                <input type=\"range\" id=\"volume\" min={0} max={1} step={0.1} value={volume} onChange={volumeChange} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n} // Player 함수\r\n\r\nexport default Player;","e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\js\\commonFn.js",["113","114","115","116"],[],"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\data\\ban.js",[],[],"e:\\지수진\\NEW2_ZISUZIN_2023\\03.SPA\\03.sources\\girls-pj\\src\\js\\eventFn.js",["117"],[],"// 요소 선택 함수\r\nconst qs = (x) => document.querySelector(x);\r\nconst qsa = (x) => document.querySelectorAll(x);\r\n\r\n// 이벤트 함수  - 오버\r\nconst hoverCont = (x) => {\r\n    // 선택\r\n    let y = qsa(x);\r\n    // 클래스 추가/제거\r\n    y.forEach(ele=>{\r\n        ele.onmouseenter = () => {\r\n            console.log(ele)\r\n            // addCls(ele,\"active\");\r\n        }\r\n        ele.onmouseleave = () => {\r\n            // removeCls(ele,\"active\");\r\n        }\r\n    });\r\n}\r\n\r\nexport {qs, qsa};",{"ruleId":"118","severity":1,"message":"119","line":7,"column":9,"nodeType":"120","messageId":"121","endLine":7,"endColumn":23},{"ruleId":"118","severity":1,"message":"122","line":24,"column":7,"nodeType":"120","messageId":"121","endLine":24,"endColumn":30},{"ruleId":"118","severity":1,"message":"123","line":7,"column":9,"nodeType":"120","messageId":"121","endLine":7,"endColumn":33},{"ruleId":"118","severity":1,"message":"124","line":7,"column":9,"nodeType":"120","messageId":"121","endLine":7,"endColumn":32},{"ruleId":"118","severity":1,"message":"125","line":7,"column":9,"nodeType":"120","messageId":"121","endLine":7,"endColumn":37},{"ruleId":"126","severity":1,"message":"127","line":45,"column":64,"nodeType":"128","messageId":"129","endLine":45,"endColumn":66},{"ruleId":"126","severity":1,"message":"127","line":63,"column":88,"nodeType":"128","messageId":"129","endLine":63,"endColumn":90},{"ruleId":"130","severity":1,"message":"131","line":71,"column":30,"nodeType":"128","messageId":"132","endLine":71,"endColumn":31},{"ruleId":"133","severity":1,"message":"134","line":8,"column":10,"nodeType":"135","messageId":"136","endLine":8,"endColumn":18},{"ruleId":"133","severity":1,"message":"137","line":9,"column":10,"nodeType":"135","messageId":"136","endLine":9,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":55,"column":37,"nodeType":"120","endLine":55,"endColumn":49},{"ruleId":"133","severity":1,"message":"140","line":253,"column":10,"nodeType":"135","messageId":"136","endLine":253,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":285,"column":43,"nodeType":"143","messageId":"144","endLine":285,"endColumn":45},{"ruleId":"141","severity":1,"message":"142","line":303,"column":43,"nodeType":"143","messageId":"144","endLine":303,"endColumn":45},{"ruleId":"126","severity":1,"message":"127","line":308,"column":56,"nodeType":"128","messageId":"129","endLine":308,"endColumn":58},{"ruleId":"141","severity":1,"message":"142","line":322,"column":54,"nodeType":"143","messageId":"144","endLine":322,"endColumn":56},{"ruleId":"126","severity":1,"message":"127","line":344,"column":42,"nodeType":"128","messageId":"129","endLine":344,"endColumn":44},{"ruleId":"141","severity":1,"message":"145","line":367,"column":26,"nodeType":"143","messageId":"144","endLine":367,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":368,"column":21,"nodeType":"128","messageId":"129","endLine":368,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":370,"column":30,"nodeType":"128","messageId":"129","endLine":370,"endColumn":32},{"ruleId":"126","severity":1,"message":"127","line":371,"column":28,"nodeType":"128","messageId":"129","endLine":371,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":373,"column":30,"nodeType":"128","messageId":"129","endLine":373,"endColumn":32},{"ruleId":"141","severity":1,"message":"142","line":438,"column":42,"nodeType":"143","messageId":"144","endLine":438,"endColumn":44},{"ruleId":"146","severity":1,"message":"147","line":490,"column":37,"nodeType":"120","endLine":490,"endColumn":57},{"ruleId":"148","severity":1,"message":"149","line":525,"column":33,"nodeType":"120","endLine":525,"endColumn":57},{"ruleId":"133","severity":1,"message":"150","line":684,"column":9,"nodeType":"135","messageId":"136","endLine":684,"endColumn":18},{"ruleId":"133","severity":1,"message":"151","line":686,"column":11,"nodeType":"135","messageId":"136","endLine":686,"endColumn":20},{"ruleId":"118","severity":1,"message":"152","line":703,"column":17,"nodeType":"120","messageId":"121","endLine":703,"endColumn":45},{"ruleId":"133","severity":1,"message":"153","line":10,"column":10,"nodeType":"135","messageId":"136","endLine":10,"endColumn":19},{"ruleId":"133","severity":1,"message":"154","line":22,"column":9,"nodeType":"135","messageId":"136","endLine":22,"endColumn":20},{"ruleId":"133","severity":1,"message":"155","line":38,"column":7,"nodeType":"135","messageId":"136","endLine":38,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":83,"column":21,"nodeType":"128","messageId":"129","endLine":83,"endColumn":23},{"ruleId":"133","severity":1,"message":"156","line":121,"column":9,"nodeType":"135","messageId":"136","endLine":121,"endColumn":17},{"ruleId":"133","severity":1,"message":"157","line":171,"column":11,"nodeType":"135","messageId":"136","endLine":171,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":193,"column":14,"nodeType":"160","endLine":193,"endColumn":15},{"ruleId":"138","severity":1,"message":"139","line":204,"column":11,"nodeType":"120","endLine":204,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":212,"column":33,"nodeType":"128","messageId":"129","endLine":212,"endColumn":35},{"ruleId":"133","severity":1,"message":"161","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":21},{"ruleId":"133","severity":1,"message":"162","line":18,"column":9,"nodeType":"135","messageId":"136","endLine":18,"endColumn":15},{"ruleId":"133","severity":1,"message":"163","line":21,"column":9,"nodeType":"135","messageId":"136","endLine":21,"endColumn":13},{"ruleId":"133","severity":1,"message":"164","line":125,"column":7,"nodeType":"135","messageId":"136","endLine":125,"endColumn":15},{"ruleId":"133","severity":1,"message":"165","line":6,"column":7,"nodeType":"135","messageId":"136","endLine":6,"endColumn":16},"react/jsx-pascal-case","Imported JSX component Gallery_Ban must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Main_Ban must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Video_Ban must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Album_Ban must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Profile_Ban must be in PascalCase or SCREAMING_SNAKE_CASE","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-unused-vars","'ReactSVG' is defined but never used.","Identifier","unusedVar","'ScrollTrigger' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'tot' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.sort() expects a value to be returned at the end of arrow function.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'prevIndex' is assigned a value but never used.","'firstSpan' is assigned a value but never used.","Imported JSX component Gal1_comp must be in PascalCase or SCREAMING_SNAKE_CASE","'PropTween' is defined but never used.","'audioPlayer' is assigned a value but never used.","'audseq' is assigned a value but never used.","'soundRef' is assigned a value but never used.","'audioSrc' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'rotsts' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'changeSongTxt' is defined but never used.","'moveSl' is assigned a value but never used.","'tgsl' is assigned a value but never used.","'play_btn' is assigned a value but never used.","'hoverCont' is assigned a value but never used."]